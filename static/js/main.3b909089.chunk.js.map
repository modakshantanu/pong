{"version":3,"sources":["InputManager.js","utils/2d.js","gameObjects/Paddle.js","gameObjects/Ball.js","components/Scoreboard.js","gameObjects/Wall.js","gameObjects/Goal.js","utils/math.js","App.js","gameObjects/Bot.js","components/Settings.js","gameObjects/Particle.js","serviceWorker.js","index.js"],"names":["codeMap","187","186","189","InputManager","Object","classCallCheck","this","pressedKeys","red1","right","left","red2","red3","blue1","blue2","blue3","window","addEventListener","handleKeys","bind","removeEventListener","value","e","keys","key","keyCode","distance2d","x1","y1","x2","y2","Math","sqrt","pow","rotateVector","vect","angle","x","y","cos","sin","reflection","normal","arguments","length","undefined","dotProduct","result","angleBetween","vect1","vect2","atan","Paddle","args","hidden","color","depth","width","position","paddleCenterX","paddleCenterY","slidinglength","tiltAngle","PI","minPosition","maxPosition","ball","curve","edge","hitbox","getHitbox","i","intersects","circleLine","apply","radius","concat","toConsumableArray","normalVector","midpoint","offset","objectSpread","magnitude","ref","dx","dy","paddleVelocity","previousCenterX","previousCenterY","dr","state","input","ctx","context","round","save","translate","strokeStyle","fillStyle","rotate","fillRect","restore","_this","sw","sd","map","_rotateVector","u","v","Ball","delete","r","settings","curveball","beginPath","arc","fill","closePath","lineWidth","moveTo","lineTo","stroke","buttonStyle","padding","border","margin","textAlign","fontSize","borderRadius","userSelect","mainStyle","height","float","leftStyle","display","alignItems","justifyContent","boxShadow","rightStyle","marginLeft","pauseButton","instructions","Scoreboard","_React$Component","_getPrototypeOf2","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","handleOnClick","setState","inherits","createClass","userInfo","react_default","a","createElement","align","style","id","props","redScore","blueScore","Button","variant","onClick","React","Component","Wall","Goal","teamId","randomBetween","b","random","animationFrameId","Bot","walls","output","waitTimer","lookAhead","debug","paddle","piw","getInnerWall","bouncesLeft","bouncedFlag","b1","b2","wall","intersection","checkIntersection","type","point","nextVelocity","getReflection","abs","current","dRight","paddleMovementTicks","min","dropdown","bottom","categoryHeader","background","marginTop","dropdownContent","minHeight","zIndex","Settings","opened","toggleDropdown","assertThisInitialized","AICheckboxChange","newSettings","AI","target","changeHandler","AICheckboxArray","names","flexDirection","toString","checked","onChange","push","content","Particle","lifetime","backgroundStyling","backgroundColor","GameState","STOPPED","RUNNING","GOAL_SCORED","Teams","App","gameState","gameMode","draw","reset1v1","reset2v2","reset3v3","resetPositions","renderPaddle1s","renderPaddles","changeSettings","initBots","createParticle","bindKeys","refs","canvas","getContext","requestAnimationFrame","bots","goalWalls","goals","goal","modifiedWalls","splice","particles","paddles","g1","g2","v1","v2","_this$paddles","initialBallVelocity","forEach","reset","render","_this2","hitboxArr","circlePolygon","newVelocity","teamText","font","fillText","cancelAnimationFrame","bot","index","calculateOutput","setTimeout","unbindKeys","Scoreboard_Scoreboard","Settings_Settings","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b909089.chunk.js","sourcesContent":["const KEY = {\n\tONE:49, // Red 1 left/up\n\tTWO:50, // Red 1 right/down\n\tS: 83, // Red 2 left \n\tD: 68, // Red 2 right\n\tV: 86, // Red 3 left\n\tB: 66, // Red 3 right\n\tN: 78, // Blue 3 left\n\tM: 77, // Blue 3 right\n\tL: 76, // Blue 2 left\n\tSEMICOLON: 186, // Blue 2 right\n\tMINUS: 189, // Blue 1 left/down\n\tEQUAL: 187, // Blue 1 right\n };\n\n const codeMap = {\n\t\"187\": \"=\",\n\t\"186\": \";\",\n\t\"189\": \"-\",\n }\n\n export default class InputManager {\n\n\tbindKeys() {\n\t\twindow.addEventListener('keyup',   this.handleKeys.bind(this, false));\n\t\twindow.addEventListener('keydown', this.handleKeys.bind(this, true));\n\t}\n\t\n\tunbindKeys() {\n\t\twindow.removeEventListener('keyup', this.handleKeys);\n\t\twindow.removeEventListener('keydown', this.handleKeys);\n\t}\n\tconstructor() {\n\t\tthis.pressedKeys = {};\n\t\tthis.pressedKeys.red1 = {right:0,left:0};\n\t\tthis.pressedKeys.red2 = {right:0,left:0};\n\t\tthis.pressedKeys.red3 = {right:0,left:0};\n\t\tthis.pressedKeys.blue1 = {right:0,left:0};\n\t\tthis.pressedKeys.blue2 = {right:0,left:0};\n\t\tthis.pressedKeys.blue3 = {right:0,left:0};\n\t}\n\n\t// The pressedKeys object holds either a 0 or a 1 for each key whether it is pressed or not\n\t// It is always updated in real time once the eventListener is added\n\thandleKeys(value, e){\n\t\tlet keys = this.pressedKeys;\n\t\t\n\t\tswitch (e.key == \"Unidentified\" ? codeMap[e.keyCode] : e.key) {\n\t\t\tcase '1': \n\t\t\t\tkeys.red1.left = value;\n\t\t\t\tbreak;\n\t\t\tcase '2':\n\t\t\t\tkeys.red1.right = value;\n\t\t\t\tbreak;\n\t\t\tcase 's':case 'S':\n\t\t\t\tkeys.red2.left = value;\n\t\t\t\tbreak;\n\t\t\tcase 'd':case 'D':\n\t\t\t\tkeys.red2.right = value;\n\t\t\t\tbreak;\n\t\t\tcase 'v':case 'V':\n\t\t\t\tkeys.red3.left = value;\n\t\t\t\tbreak;\n\t\t\tcase 'b':case 'B':\n\t\t\t\tkeys.red3.right = value;\n\t\t\t\tbreak;\n\t\t\tcase 'n':case 'N':\n\t\t\t\tkeys.blue3.left = value;\n\t\t\t\tbreak;\n\t\t\tcase 'm':case 'M':\n\t\t\t\tkeys.blue3.right = value;\n\t\t\t\tbreak;\n\t\t\tcase 'l':case 'L':\n\t\t\t\tkeys.blue2.left = value;\n\t\t\t\tbreak;\n\t\t\tcase ';':\n\t\t\t\tkeys.blue2.right = value;\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tkeys.blue1.left = value;\n\t\t\n\t\t\t\tbreak;\n\t\t\tcase '=':\n\t\t\t\t\n\t\t\t\tkeys.blue1.right = value;\n\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t }\n\t\t this.pressedKeys = keys;\n\t }\n\t \n }","// A file containing simple functions for 2d grid related calculations\n\nexport function distance2d(x1,y1,x2,y2) {\n\treturn Math.sqrt((x1-x2)**2 + (y1-y2)**2);\n}\n\nexport function rotateVector(vect, angle) {\n\tlet {x,y} = vect;\n\treturn {\n\t\tx: Math.cos(angle)*x - Math.sin(angle)*y,\n\t\ty: Math.sin(angle)*x + Math.cos(angle)*y\n\t}\n}\t\n\n// Returins a vector which is the result of *vect* bouncing off a surface with normal *normal*\n// normal must have magnitude 1\n// d' = d - 2(d.n)n\nexport function reflection(vect,normal,scalingFactor = 1.0) {\n\tlet dotProduct = normal.x*vect.x + normal.y*vect.y;\n\tlet result = vect;\n\tresult.x -= 2*dotProduct*normal.x;\n\tresult.y -= 2*dotProduct*normal.y;\n\treturn result;\n}\n\nexport function angleBetween(vect1, vect2) {\n\tlet {x:x1,y:y1} = vect1;\n\tlet {x:x2,y:y2} = vect2;\n\treturn Math.atan(x1*y2-y1*x2,x1*x2+y1*y2);\n\n}","\nimport {distance2d ,rotateVector, reflection, angleBetween} from '../utils/2d';\nimport intersects from 'intersects';\n\n// Class that handles drawing the paddle\nexport default class Paddle {\n\tconstructor(args) {\n\n\t\t// x1,y1 and x2,y2 represent the starting and ending point where the paddle can slide in between\n\t\tthis.x1 = args.x1 || 0;\n\t\tthis.y1 = args.y1 || 0;\n\t\tthis.x2 = args.x2 || 0;\n\t\tthis.y2 = args.y2 || 0;\n\t\tthis.hidden = args.hidden;\n\t\tthis.color = args.color || \"#000\";\n\t\t\n\t\t// Depth and width are dimensions of the paddle\n\t\tthis.depth = args.depth || 10;\n\t\tthis.width = args.width || 50;\n\n\t\tthis.position = 50; // Percentage value showing how far the paddle is from its first endpoint to the other\n\t\t// Ex. 0 means it is at (x1,y1) , 100 means at (x2,y2), 50 means it is in between\n\t\tthis.paddleCenterX = (this.x1+this.x2)/2;\n\t\tthis.paddleCenterY = (this.y1+this.y2)/2;\n\n\t\tthis.slidinglength = distance2d(this.x1,this.y1,this.x2,this.y2);\n\t\tif (this.y1 === this.y2) {\n\t\t\tthis.tiltAngle = 90*Math.PI/180;\n\t\t} else {\n\t\t\tthis.tiltAngle = -Math.atan((this.x2-this.x1)/(this.y2-this.y1));\n\t\t}\n\n\t\t// The min and max value of position so that the ends of the paddle dont cross x1,y1 and x2,y2\n\t\t// Ex. if a paddle is 10px wide and the total length is 100px, min and max pos will be 5% and 95% \n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\n\n\t}\n\n\tgetReflection(ball,curve) {\n\t\t\n\t\t// First, figure out which edge the ball collided with. \n\n\t\tlet hitbox = this.getHitbox();\n\t\tlet edge;\n\t\tfor (let i = 0; i < 4; i++) {\n\n\t\t\tedge = [hitbox[i].x, hitbox[i].y, hitbox[(i+1)%4].x, hitbox[(i+1)%4].y];\n\t\t\tif (intersects.circleLine(ball.x,ball.y,ball.radius, ...edge)) break;\n\n\t\t}\n\t\t// Get a vector parallel to the edge\n\t\tlet edgeVector = {x:edge[2] - edge[0], y: edge[3] - edge[1]}; \n\t\t// Rotate it by 90 degrees\n\t\tlet normalVector = rotateVector(edgeVector, Math.PI/2); \n\n\t\t// Make sure the normal is pointing outwards\n\t\tlet midpoint = {x:(edge[2]+edge[0])/2,y:(edge[3]+edge[1])/2};\n\t\tlet offset = {...midpoint};\n\t\toffset.x += normalVector.x*0.0001;\n\t\toffset.y += normalVector.y*0.0001;\n\n\t\tif (distance2d(this.paddleCenterX,this.paddleCenterY,midpoint.x,midpoint.y) > distance2d(this.paddleCenterX,this.paddleCenterY,offset.x,offset.y)) {\n\t\t\n\t\t\tnormalVector.x *= -1;\n\t\t\tnormalVector.y *= -1;\n\t\t}\n\n\t\t// Normalize the normal lol\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\n\t\tnormalVector.x /= magnitude;\n\t\tnormalVector.y /= magnitude;\n\n\t\t\n\t\tlet ref = reflection({x: ball.dx, y: ball.dy}, normalVector, 1.0);\n\t\t// Add the vector from paddle to ball, to increase the ball speed on each hit\n\t\tref.x += (ball.x - this.paddleCenterX)*0.05;\n\t\tref.y += (ball.y - this.paddleCenterY)*0.05;\n\n\t\tlet paddleVelocity = {x: this.paddleCenterX - this.previousCenterX, y: this.paddleCenterY-this.previousCenterY};\n\t\tif (paddleVelocity.x === 0 && paddleVelocity.y === 0) {\n\t\t\treturn ref;\n\t\t}\n\n\n\t\n\n\t\t// Deflect the ball further based on the movvement of the paddle\n\t\tref = rotateVector(ref, angleBetween(ref,paddleVelocity)*0.2 );\n\n\t\tif (curve) {\n\t\t\tlet angle = angleBetween(paddleVelocity,{x:ball.dx, y:ball.dy});\n\t\t\tball.dr += angle/20;\n\t\t}\n\t\treturn ref;\n\t}\n\n\trender(state,input) {\n\t\tif (this.hidden) return;\n\t\tvar ctx = state.context;\n\t\t\n\n\t\n\t\t// Move the paddle based on keyboard input\n\t\tif (input.right) {\n\t\t\tthis.position++;\n\t\t}\n\n\t\tif (input.left) {\n\t\t\tthis.position--;\n\t\t}\n\n\t\t// Stop it from going beyond the limit\n\t\tif (this.position > this.maxPosition) this.position = this.maxPosition;\n\t\tif (this.position < this.minPosition) this.position = this.minPosition;\n\n\t\t// Get x and y position of paddle center\n\t\tthis.position = Math.round(this.position);\n\n\t\t// Holds the previous coordinates of the paddle in the previous frame\n\t\t// Used to see if the paddle is moving\n\t\tthis.previousCenterX = this.paddleCenterX;\n\t\tthis.previousCenterY = this.paddleCenterY;\n\n\t\tthis.paddleCenterX = (this.x1*(1-this.position/100) + this.x2*this.position/100);\n\t\tthis.paddleCenterY = (this.y1*(1-this.position/100) + this.y2*this.position/100);\n\n\t\t\n\n\t\tctx.save();\n\t\tctx.translate(0.5,0.5);\n\t\tctx.strokeStyle = \"#000000\";\n\t\tctx.fillStyle = \"#888888\";\n\t\t\n\t\tctx.translate(this.paddleCenterX, this.paddleCenterY);\n\t\tctx.rotate(this.tiltAngle );\n\t\t// Draw paddle with fillRect()\n\t\tctx.fillRect(-this.depth/2,-this.width/2,this.depth,this.width);\n\t\t\n\t\tctx.restore();\n\t}\n\n\tgetHitbox() {\n\n\t\tlet sw = this.width/2;\n\t\tlet sd = this.depth/2;\n\t\tvar points = [\n\t\t\t{x:sd,y:sw},{x:sd,y:-sw},{x:-sd,y:-sw},{x:-sd,y:sw}\n\t\t];\n\n\t\t/*\n\n\t\tOrder of points \n\n\t    3      2\n\t\t +----+\n\t\t |    |\n\t\t |    |\n\t\t |    |\n\t\t |    |\n\t\t +----+\n        4      1\n\t\t*/\n\n\n\t\treturn points.map((e) => {\n\t\t\tlet {x:u,y:v} = rotateVector(e,this.tiltAngle);\n\t\t\n\t\t\treturn {x:u + this.paddleCenterX,y: v + this.paddleCenterY}\n\t\t});\n\t\n\t}\n\n\tgetInnerWall() {\n\t\n\t\tlet offset = rotateVector({\n\t\t\tx: this.depth/2,\n\t\t\ty: 0\n\t\t},this.tiltAngle);\n\t\tif (distance2d(this.x1,this.y1,250,250) < distance2d(this.x1+offset.x, this.y1+offset.y,250,250)) {\n\t\t\t\n\t\t\toffset.x *= -1; offset.y *= -1;\n\t\t}\n\t\treturn {\n\t\t\tx1: this.x1 + offset.x,\n\t\t\ty1: this.y1 + offset.y,\n\t\t\tx2: this.x2 + offset.x,\n\t\t\ty2: this.y2 + offset.y\n\t\t}\n\t\t\n\t}\n}","import { rotateVector } from \"../utils/2d\";\n\nclass Ball {\n\tconstructor(args) {\n        this.x = args.x; \n        this.y = args.y;\n        this.dx = args.dx;\n        this.dy = args.dy; // changes the direction of movement  1 means up and -1 means down &  left or right \n        this.radius = 10;\n        this.delete = false; // Whether the ball should be deleted in the next frame\n        this.r = 0;\n        this.dr = 0;\n        this.color = \"#000\";\n\n\n    }\n\n    render(state){ \n\n        this.x += this.dx;\n        this.y += this.dy;\n        this.r += this.dr;\n\n        if (state.settings.curveball) {\n            ({x: this.dx, y:this.dy} = rotateVector({x:this.dx, y:this.dy}, this.dr/10));\n        }\n\n        var ctx = state.context;\n        ctx.save();\n        ctx.translate(this.x + 0.5,this.y + 0.5);\n        ctx.rotate(this.r);\n\n        if (this.color === 'red') ctx.fillStyle = \"#800\";\n        else if (this.color === 'blue') ctx.fillStyle = \"#008\";\n        else ctx.fillStyle = \"#888\";\n       \n        ctx.beginPath();\n        ctx.arc(0,0,this.radius,this.radius,0,Math.PI*2);\n        ctx.fill();\n        ctx.closePath();\n\n        if (state.settings.curveball) \n        {\n            ctx.strokeStyle = \"#fff\";\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(-10,0);\n            ctx.lineTo(10,0);\n            ctx.stroke();\n            ctx.closePath();\n            \n        }\n        ctx.restore();\n\n        \n    }\n}\n\nexport default Ball;","import React from 'react';\nimport {Button} from 'react-bootstrap';\n\n// const controls = {\n// \theight:0,\n// \twidth:400,\n// \tmargin:\"auto\",\n// \tpadding:20,\n// \talignItems: \"left\",\n// \tjustifyContent: \"left\",\n// \tfloat: \"left\"\n// }\n\n\n\n\nconst buttonStyle = {\n\twidth:\"100px\",\n\tpadding:\"2px\",\n\tborder:\"2px solid blue\",\n\tmargin:\"2px\",\n\ttextAlign: \"center\",\n\tfontSize : 15,\n\tborderRadius:\"2\",\n\tuserSelect:\"none\",\n\tposition: \"auto\",\n\t\n\n}\n\n\n\n\nconst mainStyle = {\n\theight:50,\n\twidth:100,\n\tmargin:\"auto\",\n\tpadding:10,\n\tfloat : \"center\"\n}\n\nconst leftStyle = {\n\twidth: \"50%\",\n\theight: 50,\n\tfloat: \"left\",\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\tboxShadow:\"0px 0px 0px 10px red inset\",\n\t\n\n}\n\nconst rightStyle = {\n\tmarginLeft: \"50%\",\n\theight:50,\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\tboxShadow:\"0px 0px 0px 10px blue inset\"\n}\n\nconst pauseButton = {\n\tmargin:\"auto\",\n\theight:\"30px\",\n\twidth:\"30px\",\n\n}\n\nconst instructions = { \n\tmargin : \"auto\",\n\theight:40,\n\twidth: 400,\n\tpadding:40,\n\talignItems: \"left\",\n\tjustifyContent: \"left\",\n\tfloat: \"left\",\n\n}\n\n\n\nexport class Scoreboard extends React.Component {\n\n\tstate = { display : false}\n\n\thandleOnClick = () => { \n\t\tthis.setState((state) => ({display: !state.display}));\n\t\t// return (\n\t\t// \t<div>\n\t\t// \t{userInfo}\n\t\t// \t</div>\n\t\t// );\n\t}\n\n\n\trender() {\n\n\t\tconst userInfo = (\n\n\t\t\t<div ><h2 align = \"left\">CONTROLS INFO</h2>\n\t\t\t\t\t<div align = \"left\">\n\t\t\t\t\t\t<p> RED 1  : 1  --> LEFT / UP  &&  2   --> RIGHT / DOWN  </p> \n\t\t\t\t\t\t<p> RED 2  : S  --> LEFT  &&  D --> RIGHT </p>\n\t\t\t\t\t\t<p> RED 3  : V  --> LEFT  &&  B --> RIGHT  </p> \n\t\t\t\t\t\t<p> BLUE 3 : N  --> LEFT  &&  M   --> RIGHT </p>\n\t\t\t\t\t\t<p> BLUE 2 : L --> LEFT  &&  ';' --> RIGHT  </p> \n\t\t\t\t\t\t<p> BLUE 1 : -  --> LEFT  &&  =   --> DOWN  </p>\n\t\t\t\t\t</div>\n\t\t\t </div>\n\t\t\t\n\t\t\t );\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style = {mainStyle}>\n\t\t\t\t\t<div id = \"red\" style = {leftStyle}>{this.props.redScore}</div>\n\t\t\t\t\t<div id = \"blue\" style = {rightStyle}>{this.props.blueScore}</div>\n\t\t\t\t</div>\n\t\t\t\t<div style = {pauseButton}></div>\t\n\n\t\t\t\t<div style = {instructions} >\n\t\t\t\t{this.state.display? userInfo:\"\"}\t\n\t\t\t\t<div>\n\t\t\t\t\t<Button style = {buttonStyle} variant = \"primary\" onClick = {this.handleOnClick}>\n\t\t\t\t\t\tInstructions\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import { rotateVector ,distance2d, reflection} from \"../utils/2d\";\n\n\n\n\nexport class Wall {\n\n\tconstructor(args) {\n\t\tthis.x1 = args.x1;\n\t\tthis.y1 = args.y1;\n\t\tthis.x2 = args.x2;\n\t\tthis.y2 = args.y2;\n\n\t}\n\n\tgetReflection(ball) {\n\t\tlet parallelVector = {x: this.x2-this.x1, y: this.y2-this.y1};\n\t\tlet normalVector = rotateVector(parallelVector, Math.PI/2);\n\n\t\t// Make sure normalVector is pointing inward\n\t\tlet midpoint = {x: (this.x1+this.x2)/2, y: (this.y1+this.y2)/2};\n\t\tlet offset = {...midpoint};\n\t\toffset.x += normalVector.x*0.001;\n\t\toffset.y += normalVector.y*0.001;\n\n\t\tif (distance2d(ball.x,ball.y,midpoint.x,midpoint.y) < distance2d(ball.x,ball.y,offset.x,offset.y)) {\n\t\t\n\t\t\tnormalVector.x *= -1;\n\t\t\tnormalVector.y *= -1;\n\t\t}\n\n\t\t// Normalize the normal lol\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\n\t\tnormalVector.x /= magnitude;\n\t\tnormalVector.y /= magnitude;\n\t\t\n\n\t\treturn reflection({x:ball.dx, y:ball.dy}, normalVector,1.0);\n\n\t}\n\n\trender(state) {\n\t\tvar ctx  = state.context;\n\n\t\tctx.save();\n\t\tctx.strokeStyle = \"#000\";\n\t\tctx.beginPath();\n\t\tctx.moveTo(this.x1,this.y1);\n\t\tctx.lineTo(this.x2,this.y2);\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n}","export class Goal {\n\tconstructor(args) {\n\t\tthis.x1 = args.x1;\n\t\tthis.y1 = args.y1;\n\t\tthis.x2 = args.x2;\n\t\tthis.y2 = args.y2;\n\n\t\tthis.color = args.color || \"red\";\n\t\tthis.teamId = args.teamId || 0;\t\n\t}\n\n\trender(state) {\n\t\tvar ctx  = state.context;\n\t\tctx.save();\n\t\tctx.strokeStyle = this.color;\n\t\tctx.beginPath();\n\t\tctx.moveTo(this.x1,this.y1);\n\t\tctx.lineTo(this.x2,this.y2);\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n}","export function randomBetween(a,b) {\n\treturn a + Math.random()*(b-a);\n}","import React, {Component} from 'react';\nimport InputManager from './InputManager'; // InputManager is a class handling all keyboard inputs\nimport './App.css';\nimport Paddle from './gameObjects/Paddle';\nimport Ball from './gameObjects/Ball';\nimport { Scoreboard } from './components/Scoreboard';\nimport { Wall } from './gameObjects/Wall';\nimport { Goal } from './gameObjects/Goal';\nimport intersects from 'intersects';\nimport { rotateVector } from './utils/2d';\nimport { randomBetween } from './utils/math';\nimport { Bot } from './gameObjects/Bot';\nimport Settings from './components/Settings';\nimport { Particle } from './gameObjects/Particle';\n// import logo from '../src/newimage.jpg';\n\n\n// const Hero = ( ) => {\n// \t// const width = window.innerWidth;\n// \t// const height = window.innerHeight;\n\t\n// \tconst style = {\n// \t  'position': 'fixed',\n// \t  'top': 0, \n// \t  'left': 0,\n// \t  'min-width': '100%',\n// \t  'min-height': '100%'\n\n// \t}\n// \treturn(\n// \t  <div style={style}>\n// \t\t<img alt = 'hero' src={logo} style={style}/>\n// \t  </div>\n// \t)\n//   }\n\nconst backgroundStyling = { \n\n\tbackgroundColor : \"\t#FFFF33\"\n\n\n\n}\n\nconst GameState = {\n\tSTOPPED:0,\n\tRUNNING:1,\n\tGOAL_SCORED:2\n}\n\nconst Teams = {\n\tRED:0,\n\tBLUE:1,\n}\n\nvar animationFrameId;\n\n// The main component that contains the canvas, and other buttons if needed\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinput: new InputManager(), // Instantiate new InputManager\n\t\t\tcontext: null, // the canvas context,\n\t\t\tgameState: GameState.RUNNING,\n\t\t\tredScore:0,\n\t\t\tblueScore:0,\n\t\t\tgameMode:1, // Number of players on each side,\n\t\t\tsettings: {\n\t\t\t\tAI:[false,false,false,false,false,false],\n\t\t\t\tcurveball:true,\n\t\t\t}\n\n\t\t}\n\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.reset1v1 = this.reset1v1.bind(this);\n\t\tthis.reset2v2 = this.reset2v2.bind(this);\n\t\tthis.reset3v3 = this.reset3v3.bind(this);\n\t\tthis.resetPositions = this.resetPositions.bind(this);\n\t\tthis.renderPaddle1s = this.renderPaddles.bind(this);\n\t\tthis.changeSettings = this.changeSettings.bind(this);\n\t\tthis.initBots = this.initBots.bind(this);\n\t\tthis.createParticle = this.createParticle.bind(this);\n\t\t\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.state.input.bindKeys();\n\t\t\n\t\tconst context = this.refs.canvas.getContext('2d'); // This is to get context\n\t\tthis.setState({context:context});\t\t\n\t\tthis.reset1v1();\n\t\tanimationFrameId = requestAnimationFrame(this.draw); \n\n\t}\n\n\n\tinitBots() {\n\t\tthis.bots = [];\n\t\t// A new array of all the goals, as well as walls\n\t\t// Both goals and walls are treated as walls by bots\n\t\tlet goalWalls = this.goals.map(goal => new Wall({x1:goal.x1,y1:goal.y1,x2:goal.x2,y2:goal.y2})).concat(this.walls); \n\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tif (this.state.settings.AI[i]) {\n\t\t\t\tlet modifiedWalls = [...goalWalls]; // Create a new array with all walls except that player's goal\n\t\t\t\tmodifiedWalls.splice(i,1);\n\t\t\t\tthis.bots.push(new Bot({walls:modifiedWalls,curve:this.state.settings.curveball}));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tthis.bots.push(null); // Dummy to make the array index match other indices (0-5)\n\t\t\t}\n\t\t}\n\t\n\t}\n\n\treset1v1() {\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:1});\n\t\tthis.particles = [];\n\t\tthis.walls = [\n\t\t\tnew Wall({x1:0,y1:100,x2:500,y2:100}),\n\t\t\tnew Wall({x1:0,y1:399,x2:500,y2:399}),\n\t\t];\n\t\tthis.goals = [\n\t\t\tnew Goal({x1:0,y1:100,x2:0,y2:400,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\n\t\t\tnew Goal({x1:499,y1:100,x2:499,y2:400,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), // These 4 are dummy goals to make the mapping consistent\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\n\t\t];\n\n\t\tthis.paddles = [\n\t\t\tnew Paddle({x1:10, y1:100, x2:10, y2:400,color:\"red\"}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // \n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // These 4 paddles are dummy paddles, so the mapping from player -> paddle index\n\t\t\tnew Paddle({x1:490,y1:400,x2:490,y2:100,color:\"blue\"}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // is consistent\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), //\n\n\t\t]\n\t\tthis.ball = new Ball({x:250, y: 250,});\n\t\tthis.initBots();\n\t\t\n\t\tthis.resetPositions();\n\n\t\n\t}\n\n\treset2v2() {\n\t\tthis.particles = [];\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:2});\n\t\tthis.walls = [];\n\t\tthis.goals = [\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:0,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:250,y1:0,x2:500,y2:250,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), \n\t\t\tnew Goal({x1:250,y1:500,x2:500,y2:250,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:500,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), \n\t\t];\n\t\tthis.paddles = [\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:10}),\n\t\t\tnew Paddle({x1:250,y1:10,x2:490,y2:250}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}),\n\t\t\tnew Paddle({x1:250,y1:490,x2:490,y2:250}),\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:490}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}),\n\t\t]\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.initBots();\n\t\tthis.resetPositions();\n\t\t\n\t}\n\n\treset3v3() {\n\t\tthis.particles = [];\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:3});\n\t\tthis.walls = [];\n\t\t// Generate the hexagonal coordinates programatically since its easier than hardcoding\n\t\tthis.goals = [];\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tlet g1 = rotateVector({x:-250,y:0},i*Math.PI/3);\n\t\t\tlet g2 = rotateVector({x:-250,y:0},(i+1)*Math.PI/3);\n\t\t\tlet color = i < 3? \"red\":\"blue\";\n\t\t\tlet teamId = color === \"red\"? Teams.RED: Teams.BLUE;\n\t\t\tthis.goals.push(new Goal({x1:g1.x + 250, y1:g1.y + 250, x2:g2.x + 250, y2:g2.y + 250, color:color, teamId:teamId}));\n\t\t}\n\t\tthis.paddles = [];\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tlet v1 = rotateVector({x:-240,y:0},i*Math.PI/3);\n\t\t\tlet v2 = rotateVector({x:-240,y:0},(i+1)*Math.PI/3);\n\t\t\t\n\t\t\t\n\t\t\tthis.paddles.push(new Paddle({x1: v1.x + 250,y1:v1.y + 250, x2:v2.x + 250, y2:v2.y + 250, color:\"red\"}));\n\t\t}\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tlet {x1,y1,x2,y2} = this.paddles[2-i];\n\t\t\tthis.paddles.push(new Paddle({x1:x1, y1: 500-y1, x2:x2, y2:500-y2,color:\"blue\"}))\n\t\t}\n\t\t\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.initBots();\n\t\tthis.resetPositions();\n\t}\n\n\tresetPositions() {\n\t\tthis.particles = [];\n\t\tlet randomAngle = this.state.gameMode === 1? randomBetween(-Math.PI/4,Math.PI/4): randomBetween(0,2*Math.PI);\n\t\tlet initialBallVelocity = rotateVector({x:3,y:0},randomAngle);\n\n\t\t// Make the ball go either right or left with 50:50 chance\n\t\tif (this.state.gameMode === 1 &&  Math.random() < 0.5) { \n\t\t\tinitialBallVelocity.x *= -1;\n\t\t\tinitialBallVelocity.y *= -1;\n\t\t}\n\t\tthis.ball = new Ball({x: 250, y: 250,dx: initialBallVelocity.x, dy: initialBallVelocity.y});\n\t\tthis.paddles.forEach(paddle => paddle.position = 50);\n\t\tthis.bots.forEach(b => {\n\t\t\tif (b) // To bypass the null elements in bots array\n\t\t\t\tb.reset();\n\t\t})\n\t}\n\n\trenderPaddles() {\n\n\t\tlet keys = this.state.input.pressedKeys;\n\t\tlet b = this.bots;\n\n\t\tthis.paddles[0].render(this.state, b[0]? b[0].output:keys.red1); \n\t\tthis.paddles[1].render(this.state, b[1]? b[1].output:keys.red2);\n\t\tthis.paddles[2].render(this.state, b[2]? b[2].output:keys.red3); \n\t\tthis.paddles[3].render(this.state, b[3]? b[3].output:keys.blue1);\n\t\tthis.paddles[4].render(this.state, b[4]? b[4].output:keys.blue2); \n\t\tthis.paddles[5].render(this.state, b[5]? b[5].output:keys.blue3);\n\t\t\n\t\t\n\t}\n\n\tcreateParticle(args) {\n\t\tthis.particles.push(new Particle(args));\n\t}\n\n\tdraw() {\n\t\tconst ctx = this.state.context;\n\t\tctx.save();\n\t\tctx.fillStyle = \"#FFF\";\n\t\tctx.translate(0.5,0.5);\n\t\tctx.fillRect(0,0,500,500); // Erase the previous contents with this\n\n\t\t\n\t\tthis.walls.forEach(wall => {\n\t\t\twall.render(this.state);\n\t\t})\n\t\tthis.goals.forEach(goal => {\n\t\t\tgoal.render(this.state);\n\t\t})\n\t\t\n\t\tfor (let i = this.particles.length - 1; i >= 0; i--) {\n\t\t\tif (this.particles[i].delete) {\n\t\t\t\tthis.particles.splice(i,1);\n\t\t\t} else {\n\t\t\t\tthis.particles[i].render(this.state);\n\t\t\t}\n\t\t}\n\n\t\t// Collision between ball and paddles\n\t\tthis.paddles.forEach(paddle => {\n\t\t\t// The below statement is to convert an array of objects {x,y} to array of numbers  \n\t\t\tlet hitbox = paddle.getHitbox();\n\t\t\tlet hitboxArr = [];\n\t\t\thitbox.forEach(e => {\n\t\t\t\thitboxArr.push(e.x);\n\t\t\t\thitboxArr.push(e.y);\n\t\t\t})\n\n\t\t\t// Now hitboxArr contains the points in correct format [x1,y1,x2,y2...]\n\t\t\tif (intersects.circlePolygon(this.ball.x, this.ball.y,this.ball.radius,hitboxArr)) {\n\t\t\t\tlet newVelocity = paddle.getReflection(this.ball,this.state.settings.curveball);\n\t\t\t\tthis.ball.dx = newVelocity.x;\n\t\t\t\tthis.ball.dy = newVelocity.y;\n\t\t\t\tthis.ball.color = paddle.color;\n\t\t\t}\n\t\t\t\n\t\t})\n\n\t\t// Collision between ball and walls\n\t\tthis.walls.forEach(wall => {\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, wall.x1, wall.y1, wall.x2, wall.y2)) {\n\t\t\t\tlet newVelocity = wall.getReflection(this.ball);\n\t\t\t\tthis.ball.dx = newVelocity.x;\n\t\t\t\tthis.ball.dy = newVelocity.y;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t})\n\n\n\n\t\t// Collision between ball and goals\n\t\tthis.goals.forEach(goal => {\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, goal.x1, goal.y1, goal.x2, goal.y2)) {\n\t\t\t\t// Update the score\n\t\t\t\tlet teamText;\n\t\t\t\tif (goal.teamId === Teams.RED) {\n\t\t\t\t\tthis.setState(state => ({blueScore: state.blueScore + 1}));\n\t\t\t\t\tteamText = \"Blue team\";\n\t\t\t\t\tctx.fillStyle = \"blue\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState(state => ({redScore: state.redScore + 1}));\n\t\t\t\t\tteamText = \"Red team\";\n\t\t\t\t\tctx.fillStyle = \"red\";\n\t\t\t\t}\n\n\n\t\t\t\tctx.font = \"30px Courier New\";\n\t\t\t\t\n\t\t\t\tctx.fillText(teamText+ \" has scored!\",80,250);\n\n\t\t\t\tcancelAnimationFrame(animationFrameId);\n\t\t\t\tthis.setState({gameState: GameState.GOAL_SCORED});\n\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t})\n\n\t\t\n\t\tthis.bots.forEach((bot,index) => {\n\t\t\tif (bot) {\n\t\t\t\t\n\t\t\t\tbot.calculateOutput(this.ball, this.paddles[index]);\n\t\t\t}\n\t\t});\n\n\t\tthis.renderPaddles();\n\t\tthis.ball.render(this.state);\n\t\tthis.createParticle({x:this.ball.x, y:this.ball.y, color:this.ball.color})\n\n\t\tctx.restore();\n\t\tif (this.state.gameState === GameState.RUNNING) \n\t\t\tanimationFrameId = requestAnimationFrame(this.draw); // Call draw() again on the next frame\n\t\telse if (this.state.gameState === GameState.GOAL_SCORED) {\n\t\t\tcancelAnimationFrame(animationFrameId);\n\t\t\n\t\t\tsetTimeout(() => {\n\t\t\t\tanimationFrameId = requestAnimationFrame(this.draw); \n\t\t\t\tthis.resetPositions();\n\t\t\t\tthis.setState({gameState: GameState.RUNNING});\n\t\t\t},1500);\n\t\t}\n\n\t\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.state.input.unbindKeys();\n\t}\n\n\tchangeSettings(newSettings) {\n\t\tthis.setState({settings:newSettings});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div style = {backgroundStyling}>\n\t\t\t{/* <Hero/> */}\n\t\t\t<div >\n\t\t\t\t<h1>Pong++</h1>\n\t\t\t\t\n\t\t\t\t<canvas ref = \"canvas\" width = \"501\" height = \"501\"/>\n\t\t\t\t<Scoreboard redScore = {this.state.redScore} blueScore = {this.state.blueScore}/>\n\t\t\t\t<center>Reset Game</center>\n\t\t\t\t<center>\n\t\t\t\t\t<button id = \"1v1\" onClick = {this.reset1v1}>1v1</button> \n\t\t\t\t\t<button id = \"2v2\" onClick = {this.reset2v2}>2v2</button>\n\t\t\t\t\t<button id = \"3v3\" onClick = {this.reset3v3}>3v3</button>\n\t\t\t\t</center>\n\t\t\t\t<Settings settings = {this.state.settings} changeHandler = {this.changeSettings}/>\n\n\t\t\t\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t\n}\n\nexport default App;\n","\nimport { distance2d } from '../utils/2d';\nimport {checkIntersection} from 'line-intersect';\n\nexport class Bot {\n\tconstructor(args) {\n\t\tthis.walls = args.walls; // All other paddle ranges are treated as walls\n\t\tthis.output = {left:0,right:0};\n\t\tthis.waitTimer = 0;\n\t\tthis.lookAhead = 10; // Bot will only calculate the ball's trajectory upto 3 bounces into the future\t\n\t\tthis.debug = args.debug; \n\t\tthis.curve = args.curve;\n\t}\n\n\treset() {\n\t\tthis.waitTimer = -1;\n\t\tthis.output = {left:0,right:0};\n\t}\n\tcalculateOutput(ball, paddle) {\n\n\t\t// Waittimer is used to prevent unnecessary calculations when the ball is moving \n\t\t// Calculation of the ball's trajectory is only done\n\t\t// once after every impact off another paddle\n\t\t//console.log(this.waitTimer);\n\t\t\n\t\tif (this.waitTimer > 0 && !this.curve) {\n\t\t\tthis.waitTimer--;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.waitTimer = 0; // Just in case waittimer became negative\n\t\t}\n\t\tlet piw = paddle.getInnerWall();\n\t\t\n\t\t// Temporary object to simulate the ball\n\t\tlet b = {\n\t\t\tx:ball.x,\n\t\t\ty:ball.y,\n\t\t\tdx:ball.dx,\n\t\t\tdy:ball.dy\n\t\t};\n\n\t\tlet bouncesLeft = this.lookAhead;\n\t\twhile (bouncesLeft > 0) {\n\t\t\tlet bouncedFlag = false;\n\n\t\t\t// b1 is ball's position after 1000 ticks\n\t\t\t// b2 is the current ball position\n\t\t\t// We need to specity b1 like this becuase line-intersection requires 2 line-segments \n\t\t\tlet b1 = {x : b.x + 1000*b.dx, y: b.y + 1000*b.dy};\n\t\t\tlet b2 = {x : b.x , y: b.y};\n\n\n\t\t\t\n\n\t\t\tfor (let i = 0; i < this.walls.length; i++) {\n\t\t\t\tlet wall = this.walls[i];\n\t\n\t\t\t\tlet intersection = checkIntersection(wall.x1,wall.y1,wall.x2,wall.y2,b1.x,b1.y,b2.x,b2.y);\n\n\t\t\t\tif (intersection.type === \"intersecting\") { // That means the ball will hit wall\n\t\t\t\t\tb.x = intersection.point.x;\tb.y = intersection.point.y;\n\t\t\t\t\tb.x -= b.dx; b.y -= b.dy; // getReflection assumes that the ball is just about to intersect the wall\n\t\t\t\t\tlet nextVelocity = wall.getReflection(b);\n\t\t\t\t\tb.x += b.dx; b.y += b.dy;\n\t\t\t\t\tb.dx = nextVelocity.x; b.dy = nextVelocity.y;\n\t\t\t\t\tb.x += b.dx; b.y += b.dy;\n\t\t\t\t\t\n\t\t\t\t\t// Update waitTimer if it is the first bounce\n\t\t\t\t\tif (this.waitTimer === 0) {\n\t\t\t\t\t\t// The below statement is weird to account for the case when ball.dx = 0, resulting in 0/0\n\t\t\t\t\t\tthis.waitTimer = Math.round((Math.abs(ball.dx)>0.0001?((intersection.point.x-ball.x)/ball.dx ): ((intersection.point.y-ball.y)/ball.dy)))+1;\n\t\t\t\t\t}\n\t\t\t\t\tbouncesLeft--;\n\t\t\t\t\tbouncedFlag = true;\n\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t}\n\n\t\t\tif (bouncedFlag) continue;\n\t\t\t\n\t\t\t// Now check intersection with the paddle\n\n\n\t\t\t\n\t\t\tlet intersection = checkIntersection(piw.x1,piw.y1,piw.x2,piw.y2, b1.x, b1.y, b2.x, b2.y);\n\t\t\tif (intersection.type === 'intersecting') {\n\t\t\t\t// Intersection with the paddle has been found\n\t\t\t\t// Now we need to output either left, right, or no move at all\n\t\t\t\tlet current = {x:paddle.paddleCenterX, y:paddle.paddleCenterY};\n\t\t\t\t// Update waitTimer if this is the first bounce\n\t\n\t\t\t\tif (this.waitTimer === 0) {\n\t\t\t\t\tthis.waitTimer = Math.round((Math.abs(ball.dx)>0.0001?((intersection.point.x-ball.x)/ball.dx ): ((intersection.point.y-ball.y)/ball.dy)))+1;\n\t\t\t\t}\n\n\t\t\t\t// If the paddle is close enough, do nothing\n\t\t\t\tif (distance2d(current.x, current.y, intersection.point.x, intersection.point.y) < 8) {\n\t\t\t\t\tthis.output = {left:0,right:0};\n\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// position after moving right one tick\n\t\t\t\tlet dRight = {\n\t\t\t\t\tx: current.x+(paddle.x2 - paddle.x1)/100,\n\t\t\t\t\ty: current.y+(paddle.y2 - paddle.y1)/100\n\t\t\t\t}\n\n\t\t\t\tif (distance2d(dRight.x, dRight.y, intersection.point.x,intersection.point.y) < \n\t\t\t\tdistance2d(current.x,current.y, intersection.point.x, intersection.point.y)) {\n\t\t\t\t\t// Right is the way to go\n\t\t\t\t\tthis.output = {left:0, right:1};\n\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t// Go left\n\t\t\t\t\tthis.output = {left:1,right:0};\n\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t// Now find the number of ticks before next calculation is needed\n\t\t\t\tlet paddleMovementTicks = Math.round(distance2d(current.x,current.y,intersection.point.x,intersection.point.y)\n\t\t\t\t/ distance2d(current.x,current.y,dRight.x,dRight.y));\n\t\t\t\tthis.waitTimer = Math.min(this.waitTimer,paddleMovementTicks);\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbouncesLeft--;\n\t\t}\n\t\t\n\t}\n}","import React from 'react';\n\nconst dropdown = {\n\tposition: \"fixed\",\n\t\n\n\tbottom:0,\n\tright: 0\n\n}\n\nconst categoryHeader = {\n\tbackground: \"#AAAAFF\",\n\twidth:\"90%\",\n\tmargin:\"auto\",\n\tmarginTop:\"2px\",\n}\n\nconst dropdownContent= {\n \n  \tposition: \"absolute\",\n\tright:0,bottom:30,\n\n\twidth:300,\n\tminHeight:150,\n\tborder:\"2px solid blue\",\n\tbackground: \"#8888ff\",\n\t\n\n  \tzIndex: \"1\",\n}\n\nconst buttonStyle = {\n\twidth:\"100px\",\n\tpadding:\"2px\",\n\tborder:\"2px solid blue\",\n\tmargin:\"2px\",\n\ttextAlign: \"center\",\n\tborderRadius:\"2\",\n\tuserSelect:\"none\",\n\tposition: \"fixed\",\n\tbottom:0,\n\tright: 0\n\n\n}\n\nexport default class Settings extends React.Component {\n\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\topened:false,\n\t\t}\n\n\t\tthis.toggleDropdown = this.toggleDropdown.bind(this);\n\t\tthis.AICheckboxChange = this.AICheckboxChange.bind(this);\n\t}\n\n\ttoggleDropdown() {\n\t\tthis.setState((state) => ({opened: !state.opened}));\n\t}\n\n\tAICheckboxChange(e) {\n\t\tlet newSettings = this.props.settings;\n\t\tnewSettings.AI[e.target.id] = !newSettings.AI[e.target.id];\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\n\n\trender() {\n\n\n\t\tvar AICheckboxArray = [];\n\t\tconst names = [\"Red 1\", \"Red 2\", \"Red 3\", \"Blue 1\",\"Blue 2\", \"Blue 3\"];\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tlet e = (\n\t\t\t<div  key = {i} style = {{width:45,display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t<div style = {{color:(names[i][0] === 'R'?\"red\":\"blue\")}}>{names[i]}</div>\n\t\t\t\t<input type = \"checkbox\" id = {i.toString()} checked = {this.props.settings.AI[i]} onChange = {this.AICheckboxChange}></input>\n\t\t\t</div>)\n\n\t\t\tAICheckboxArray.push(e);\n\t\t}\n\n\n\t\tconst content = (\n\t\t\t<div style = {dropdownContent}>\n\t\t\t\t<div style = {categoryHeader}>\n\t\t\t\t\t<div>Enable AI </div>\n\t\t\t\t\t<div style = {{display:\"flex\" , flexDirection:\"row\"}}>\n\t\t\t\t\t\t{AICheckboxArray}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>Settings are applied when you reset game</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\n\t\treturn(\n\t\t\t<div style = {dropdown}>\n\t\t\t\t{this.state.opened? content:\"\"}\n\t\t\t\t<button style = {buttonStyle} onClick = {this.toggleDropdown}>Settings {this.state.opened? \"↓\":\"↑\"} </button>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}","\nexport class Particle {\n\tconstructor(args) {\n\t\tthis.x = args.x;\n\t\tthis.y = args.y;\n\t\tthis.lifetime = 50;\n\t\tthis.delete = false;\n\t\tthis.color = args.color;\n\t}\n\n\trender(state) {\n\t\tvar ctx = state.context;\n\t\tctx.fillStyle = this.color;\n\t\tctx.beginPath();\n\t\tctx.arc(this.x, this.y, this.lifetime/20, 0 , Math.PI*2);\n\t\tctx.fill();\n\t\tctx.closePath();\n\n\t\tthis.lifetime--;\n\t\tif (this.lifetime <= 0) {\n\t\t\tthis.delete = true;\n\t\t}\n\t}\n\n\t\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}