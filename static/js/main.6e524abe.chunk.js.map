{"version":3,"sources":["InputManager.js","utils/2d.js","utils/math.js","utils/constants.js","App.js","gameObjects/Paddle.js","gameObjects/Ball.js","components/Instructions.js","components/Scoreboard.js","gameObjects/Wall.js","gameObjects/Goal.js","gameObjects/Bot.js","components/Settings.js","gameObjects/Particle.js","gameObjects/PowerupToken.js","gameObjects/PlayerCard.js","index.js"],"names":["codeMap","187","186","189","InputManager","Object","classCallCheck","this","pressedKeys","red1","right","left","red2","red3","blue1","blue2","blue3","window","addEventListener","handleKeys","bind","removeEventListener","value","e","keys","key","keyCode","distance2d","x1","y1","x2","y2","Math","sqrt","pow","rotateVector","vect","angle","x","y","cos","sin","reflection","normal","arguments","length","undefined","dotProduct","result","angleBetween","vect1","vect2","atan","randomBetween","a","b","random","goalText","goalTextStyle","Paddle","args","hidden","color","depth","width","position","paddleCenterX","paddleCenterY","slidinglength","tiltAngle","PI","minPosition","maxPosition","powerup","powerupTimer","inputTicks","ball","state","edge","hitbox","getHitbox","i","intersects","circleLine","apply","radius","concat","toConsumableArray","normalVector","midpoint","offset","objectSpread","magnitude","ref","dx","dy","settings","accelFactor","paddleVelocity","previousCenterX","previousCenterY","defFactor","curveball","dr","input","resetPowerup","delta","accel","paddleSpeed","ctx","context","save","translate","strokeStyle","fillStyle","rotate","fillRect","restore","_this","sw","sd","map","_rotateVector","u","v","Ball","delete","r","boomerMode","prevX","prevY","lastUpdateTime","Date","now","f","timeSinceLastUpdate","_lerp","renderX","renderY","beginPath","arc","fill","closePath","lineWidth","moveTo","lineTo","stroke","console","log","boxStyle","display","alignItems","justifyContent","textAlign","padding","border","Key","react_default","createElement","style","background","props","content","React","Component","dropDown","bottom","dropDownContent","minHeight","zIndex","buttonStyle","margin","fontSize","borderRadius","userSelect","mainStyle","height","float","leftStyle","boxShadow","leftNumberStyle","rightStyle","marginLeft","rightNumberStyle","Scoreboard","_React$Component","_getPrototypeOf2","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","handleOnClick","setState","inherits","createClass","userInfo","align","Instructions_Key","id","redScore","blueScore","Button","variant","onClick","Wall","Goal","teamId","Bot","walls","output","debug","curve","difficulty","Number","lookAhead","paddle","highDifficultyCalc","lowDifficultyCalc","current","dRight","piw","getInnerWall","bouncesLeft","bouncedFlag","b1","b2","wall","intersection","checkIntersection","type","point","nextVelocity","getReflection","dropdown","categoryHeader","marginTop","dropdownContent","defaultSettings","Settings","opened","toggleDropdown","assertThisInitialized","AICheckboxChange","curveballChange","powerupsChange","accelChange","trailChange","newSettings","AI","target","changeHandler","checked","powerups","trail","AIdiff","AICheckboxArray","names","flexDirection","toString","onChange","push","curveballCheckbox","powerupsCheckbox","accelCheckbox","trailCheckbox","defSlider","min","max","step","defChange","afSlider","afChange","diffSlider","diffChange","resetAdv","Particle","lifetime","edgeLength","PowerupToken","PlayerCard","playerName","textBaseline","font","boxwidth","measureText","rect","fillText","backgroundStyling","backgroundColor","GameState","PAUSED","RUNNING","GOAL_SCORED","Teams","tickTock","App","gameState","gameMode","draw","reset1v1","reset2v2","reset3v3","resetPositions","updatePaddles","changeSettings","initBots","createParticle","update","bindKeys","refs","canvas","getContext","requestAnimationFrame","setInterval","t","tgt","paddles","bigPowerup","smallPowerup","boomerPowerup","bots","goalWalls","goals","goal","modifiedWalls","splice","particles","playerCards","g1","g2","v1","v2","_this$paddles","initialBallVelocity","forEach","reset","_this2","shift","particle","_ref","hitboxArr","circlePolygon","newVelocity","p","boxCircle","redPowerupHandler","floor","bluePowerupHandler","bot","index","calculateOutput","teamText","setTimeout","timeStamp","_this3","singleFrame","card","unbindKeys","_this4","Scoreboard_Scoreboard","href","Settings_Settings","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6e524abe.chunk.js","sourcesContent":["const KEY = {\r\n\tONE:49, // Red 1 left/up\r\n\tTWO:50, // Red 1 right/down\r\n\tS: 83, // Red 2 left \r\n\tD: 68, // Red 2 right\r\n\tV: 86, // Red 3 left\r\n\tB: 66, // Red 3 right\r\n\tN: 78, // Blue 3 left\r\n\tM: 77, // Blue 3 right\r\n\tL: 76, // Blue 2 left\r\n\tSEMICOLON: 186, // Blue 2 right\r\n\tMINUS: 189, // Blue 1 left/down\r\n\tEQUAL: 187, // Blue 1 right\r\n };\r\n\r\n const codeMap = {\r\n\t\"187\": \"=\",\r\n\t\"186\": \";\",\r\n\t\"189\": \"-\",\r\n }\r\n\r\n export default class InputManager {\r\n\r\n\tbindKeys() {\r\n\t\twindow.addEventListener('keyup',   this.handleKeys.bind(this, false));\r\n\t\twindow.addEventListener('keydown', this.handleKeys.bind(this, true));\r\n\t}\r\n\t\r\n\tunbindKeys() {\r\n\t\twindow.removeEventListener('keyup', this.handleKeys);\r\n\t\twindow.removeEventListener('keydown', this.handleKeys);\r\n\t}\r\n\tconstructor() {\r\n\t\tthis.pressedKeys = {};\r\n\t\tthis.pressedKeys.red1 = {right:0,left:0};\r\n\t\tthis.pressedKeys.red2 = {right:0,left:0};\r\n\t\tthis.pressedKeys.red3 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue1 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue2 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue3 = {right:0,left:0};\r\n\t}\r\n\r\n\r\n\t// The pressedKeys object holds either a 0 or a 1 for each key whether it is pressed or not\r\n\t// It is always updated in real time once the eventListener is added\r\n\thandleKeys(value, e){\r\n\t\tlet keys = this.pressedKeys;\r\n\t\t\r\n\t\tswitch (e.key == \"Unidentified\" ? codeMap[e.keyCode] : e.key) {\r\n\t\t\tcase '1': \r\n\t\t\t\tkeys.red1.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '2':\r\n\t\t\t\tkeys.red1.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 's':case 'S':\r\n\t\t\t\tkeys.red2.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'd':case 'D':\r\n\t\t\t\tkeys.red2.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'v':case 'V':\r\n\t\t\t\tkeys.red3.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'b':case 'B':\r\n\t\t\t\tkeys.red3.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'n':case 'N':\r\n\t\t\t\tkeys.blue3.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'm':case 'M':\r\n\t\t\t\tkeys.blue3.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'l':case 'L':\r\n\t\t\t\tkeys.blue2.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ';':\r\n\t\t\t\tkeys.blue2.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '-':\r\n\t\t\t\tkeys.blue1.left = value;\r\n\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase '=':\r\n\t\t\t\t\r\n\t\t\t\tkeys.blue1.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t }\r\n\t\t this.pressedKeys = keys;\r\n\t }\r\n\t \r\n }","// A file containing simple functions for 2d grid related calculations\r\n\r\nexport function distance2d(x1,y1,x2,y2) {\r\n\treturn Math.sqrt((x1-x2)**2 + (y1-y2)**2);\r\n}\r\n\r\nexport function rotateVector(vect, angle) {\r\n\tlet {x,y} = vect;\r\n\treturn {\r\n\t\tx: Math.cos(angle)*x - Math.sin(angle)*y,\r\n\t\ty: Math.sin(angle)*x + Math.cos(angle)*y\r\n\t}\r\n}\t\r\n\r\n// Returins a vector which is the result of *vect* bouncing off a surface with normal *normal*\r\n// normal must have magnitude 1\r\n// d' = d - 2(d.n)n\r\nexport function reflection(vect,normal,scalingFactor = 1.0) {\r\n\tlet dotProduct = normal.x*vect.x + normal.y*vect.y;\r\n\tlet result = vect;\r\n\tresult.x -= 2*dotProduct*normal.x;\r\n\tresult.y -= 2*dotProduct*normal.y;\r\n\treturn result;\r\n}\r\n\r\nexport function angleBetween(vect1, vect2) {\r\n\tlet {x:x1,y:y1} = vect1;\r\n\tlet {x:x2,y:y2} = vect2;\r\n\treturn Math.atan(x1*y2-y1*x2,x1*x2+y1*y2);\r\n\r\n}","export function randomBetween(a,b) {\r\n\treturn a + Math.random()*(b-a);\r\n}\r\n\r\nexport function lerp(a,b,f) {\r\n\t// given 2 previous locations a -> b, a occured at t=0 and b ata t=1\r\n\t// function returns position at t = 1+f \r\n\tf += 1;\r\n\treturn {\r\n\t\tx: (a.x*(1-f) + b.x*f),\r\n\t\ty: (a.y*(1-f) + b.y*f)\r\n\t}\r\n}","\r\nexport const updateRate = 120;\r\nexport const updateTime = 1000/updateRate;\r\nexport const ballInitSpeed = 3*60/updateRate;\r\nexport const paddleSpeed = 60/updateRate;\r\nexport const ballMinSpeed = 2 * 60/updateRate;","import React, {Component} from 'react';\r\nimport InputManager from './InputManager'; // InputManager is a class handling all keyboard inputs\r\nimport './App.css';\r\nimport Paddle from './gameObjects/Paddle';\r\nimport Ball from './gameObjects/Ball';\r\nimport { Scoreboard } from './components/Scoreboard';\r\nimport { Wall } from './gameObjects/Wall';\r\nimport { Goal } from './gameObjects/Goal';\r\nimport intersects from 'intersects';\r\nimport { rotateVector } from './utils/2d';\r\nimport { randomBetween } from './utils/math';\r\nimport { Bot } from './gameObjects/Bot';\r\nimport Settings from './components/Settings';\r\nimport { Particle } from './gameObjects/Particle';\r\nimport {PowerupToken} from './gameObjects/PowerupToken'\r\nimport {PlayerCard} from './gameObjects/PlayerCard'\r\nimport {updateRate, ballInitSpeed} from './utils/constants';\r\n\r\nconst backgroundStyling = { \r\n\r\n\tbackgroundColor : \"\t#fff\"\r\n\r\n}\r\n\r\nconst GameState = {\r\n\tPAUSED:0,\r\n\tRUNNING:1,\r\n\tGOAL_SCORED:2\r\n}\r\n\r\n\r\nconst Teams = {\r\n\tRED:0,\r\n\tBLUE:1,\r\n}\r\n\r\nvar animationFrameId;\r\nvar goalText;\r\nvar goalTextStyle;\r\nvar tickTock = false;\r\n// The main component that contains the canvas, and other buttons if needed\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tinput: new InputManager(), // Instantiate new InputManager\r\n\t\t\tcontext: null, // the canvas context,\r\n\t\t\tgameState: GameState.RUNNING,\r\n\t\t\tredScore:0,\r\n\t\t\tblueScore:0,\r\n\t\t\tgameMode:1, // Number of players on each side,\r\n\t\t\tsettings: {\r\n\t\t\t\tAI:[false,false,false,false,false,false],\r\n\t\t\t\tAIdiff:2,\r\n\t\t\t\tcurveball:false,\r\n\t\t\t\tpowerups:false,\r\n\t\t\t\taccel:false,\r\n\t\t\t\ttrail:true,\r\n\t\t\t\tdefFactor:0.2,\r\n\t\t\t\taccelFactor:0.04,\r\n\r\n\t\t\t},\r\n\r\n\t\t}\r\n\r\n\t\tthis.draw = this.draw.bind(this);\r\n\t\tthis.reset1v1 = this.reset1v1.bind(this);\r\n\t\tthis.reset2v2 = this.reset2v2.bind(this);\r\n\t\tthis.reset3v3 = this.reset3v3.bind(this);\r\n\t\tthis.resetPositions = this.resetPositions.bind(this);\r\n\t\tthis.updatePaddles = this.updatePaddles.bind(this);\r\n\t\tthis.changeSettings = this.changeSettings.bind(this);\r\n\t\tthis.initBots = this.initBots.bind(this);\r\n\t\tthis.createParticle = this.createParticle.bind(this);\r\n\t\tthis.update = this.update.bind(this);\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.state.input.bindKeys();\r\n\t\t\r\n\t\tconst context = this.refs.canvas.getContext('2d'); // This is to get context\r\n\t\tthis.powerupTimer = 100000;\r\n\t\tthis.setState({context:context});\t\t\r\n\t\tthis.reset1v1();\r\n\t\tanimationFrameId = requestAnimationFrame(this.draw); \r\n\t\tsetInterval(this.update, 1000/updateRate);\r\n\t\t\r\n\r\n\r\n\t}\r\n\r\n\tbluePowerupHandler(type) {\r\n\t\tvar targets = [];\r\n\t\tif (type === 2) {\r\n\t\t\ttargets = [0,1,2];\r\n\t\t} else targets = [3,4,5];\t\r\n\t\tfor (let t in targets) {\r\n\t\t\tlet tgt = this.paddles[t];\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase 1: tgt.bigPowerup(); break;\r\n\t\t\t\tcase 2: tgt.smallPowerup(); break;\r\n\t\t\t\tcase 3: tgt.boomerPowerup(); break;\r\n\t\t\t\tdefault: \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tredPowerupHandler(type) {\r\n\t\tvar targets = [];\r\n\t\tif (type === 2) {\r\n\t\t\ttargets = [3,4,5];\r\n\t\t} else targets = [0,1,2];\t\r\n\t\tfor (let t in targets) {\r\n\t\t\tlet tgt = this.paddles[t];\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase 1: tgt.bigPowerup(); break;\r\n\t\t\t\tcase 2: tgt.smallPowerup(); break;\r\n\t\t\t\tcase 3: tgt.boomerPowerup(); break;\r\n\t\t\t\tdefault: \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitBots() {\r\n\t\tthis.bots = [];\r\n\t\t// A new array of all the goals, as well as walls\r\n\t\t// Both goals and walls are treated as walls by bots\r\n\t\tlet goalWalls = this.goals.map(goal => new Wall({x1:goal.x1,y1:goal.y1,x2:goal.x2,y2:goal.y2})).concat(this.walls); \r\n\r\n\t\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tif (this.state.settings.AI[i]) {\r\n\t\t\t\tlet modifiedWalls = [...goalWalls]; // Create a new array with all walls except that player's goal\r\n\t\t\t\tmodifiedWalls.splice(i,1);\r\n\t\t\t\tthis.bots.push(new Bot({walls:modifiedWalls,curve:this.state.settings.curveball,difficulty:this.state.settings.AIdiff}));\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tthis.bots.push(null); // Dummy to make the array index match other indices (0-5)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\treset1v1() {\r\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:1});\r\n\t\tthis.particles = []; this.powerups = []; \r\n\t\tif (this.state.settings.powerups) {\r\n\t\t\tthis.powerupTimer = randomBetween (200,300);\r\n\t\t}\r\n\t\tthis.walls = [\r\n\t\t\tnew Wall({x1:0,y1:100,x2:500,y2:100}),\r\n\t\t\tnew Wall({x1:0,y1:399,x2:500,y2:399}),\r\n\t\t];\r\n\t\tthis.goals = [\r\n\t\t\tnew Goal({x1:0,y1:100,x2:0,y2:400,color:\"red\",teamId:Teams.RED}),\r\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\r\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\r\n\t\t\tnew Goal({x1:499,y1:100,x2:499,y2:400,color:\"blue\",teamId:Teams.BLUE}),\r\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), // These 4 are dummy goals to make the mapping consistent\r\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\r\n\t\t];\r\n\r\n\t\tthis.paddles = [\r\n\t\t\tnew Paddle({x1:10, y1:100, x2:10, y2:400,color:\"red\"}),\r\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // \r\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // These 4 paddles are dummy paddles, so the mapping from player -> paddle index\r\n\t\t\tnew Paddle({x1:490,y1:400,x2:490,y2:100,color:\"blue\"}),\r\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // is consistent\r\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), //\r\n\t\t]\r\n\t\tthis.playerCards = [\r\n\t\t\tnew PlayerCard({playerName:\"Red 1\", color:\"red\", x:25, y:50,left:\"1\", right:\"2\",AI:this.state.settings.AI[0]}),\r\n\t\t\tnew PlayerCard({playerName:\"Blue 1\",color:\"blue\", x:475,y:50,left:'-',right:\"=\",AI:this.state.settings.AI[3]})\r\n\t\t]\r\n\t\t\r\n\t\tthis.ball = new Ball({x:250, y: 250,});\r\n\t\tthis.initBots();\r\n\t\t\r\n\t\tthis.resetPositions();\r\n\r\n\t\r\n\t}\r\n\r\n\treset2v2() {\r\n\t\tthis.particles = []; this.powerups = [];\r\n\t\tif (this.state.settings.powerups) {\r\n\t\t\tthis.powerupTimer = randomBetween (200,300);\r\n\t\t}\r\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:2});\r\n\t\tthis.walls = [];\r\n\t\tthis.goals = [\r\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:0,color:\"red\",teamId:Teams.RED}),\r\n\t\t\tnew Goal({x1:250,y1:0,x2:500,y2:250,color:\"red\",teamId:Teams.RED}),\r\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), \r\n\t\t\tnew Goal({x1:250,y1:500,x2:500,y2:250,color:\"blue\",teamId:Teams.BLUE}),\r\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:500,color:\"blue\",teamId:Teams.BLUE}),\r\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), \r\n\t\t];\r\n\t\tthis.paddles = [\r\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:10,color:\"red\"}),\r\n\t\t\tnew Paddle({x1:250,y1:10,x2:490,y2:250,color:\"red\"}),\r\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}),\r\n\t\t\tnew Paddle({x1:250,y1:490,x2:490,y2:250,color:\"blue\"}),\r\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:490,color:\"blue\"}),\r\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}),\r\n\t\t]\r\n\t\tthis.playerCards = [\r\n\t\t\tnew PlayerCard({playerName:\"Red 1\", color:\"red\",AI:this.state.settings.AI[0],left:\"1\",right:\"2\",x:50,y:100}),\r\n\t\t\tnew PlayerCard({playerName:\"Red 2\", color:\"red\",AI:this.state.settings.AI[1],left:\"S\",right:\"D\",x:450,y:100}\t),\r\n\t\t\t\r\n\t\t\tnew PlayerCard({playerName:\"Blue 1\", color:\"blue\",AI:this.state.settings.AI[3],left:\"-\",right:\"=\",x:50,y:400}),\r\n\t\t\tnew PlayerCard({playerName:\"Blue 2\", color:\"blue\",AI:this.state.settings.AI[4],left:\"L\",right:\";\",x:450,y:400}),\r\n\t\t\t\r\n\t\t]\r\n\t\tthis.ball = new Ball({x:250, y: 250});\r\n\t\tthis.initBots();\r\n\t\tthis.resetPositions();\r\n\t\t\r\n\t}\r\n\r\n\treset3v3() {\r\n\t\tthis.particles = []; this.powerups = [];\r\n\t\tif (this.state.settings.powerups) {\r\n\t\t\tthis.powerupTimer = randomBetween (200,300);\r\n\t\t}\r\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:3});\r\n\t\tthis.walls = [];\r\n\t\t// Generate the hexagonal coordinates programatically since its easier than hardcoding\r\n\t\tthis.goals = [];\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tlet g1 = rotateVector({x:-250,y:0},i*Math.PI/3);\r\n\t\t\tlet g2 = rotateVector({x:-250,y:0},(i+1)*Math.PI/3);\r\n\t\t\tlet color = i < 3? \"red\":\"blue\";\r\n\t\t\tlet teamId = color === \"red\"? Teams.RED: Teams.BLUE;\r\n\t\t\tthis.goals.push(new Goal({x1:g1.x + 250, y1:g1.y + 250, x2:g2.x + 250, y2:g2.y + 250, color:color, teamId:teamId}));\r\n\t\t}\r\n\t\tthis.paddles = [];\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tlet v1 = rotateVector({x:-240,y:0},i*Math.PI/3);\r\n\t\t\tlet v2 = rotateVector({x:-240,y:0},(i+1)*Math.PI/3);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tthis.paddles.push(new Paddle({x1: v1.x + 250,y1:v1.y + 250, x2:v2.x + 250, y2:v2.y + 250, color:\"red\"}));\r\n\t\t}\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tlet {x1,y1,x2,y2} = this.paddles[2-i];\r\n\t\t\tthis.paddles.push(new Paddle({x1:x1, y1: 500-y1, x2:x2, y2:500-y2,color:\"blue\"}))\r\n\t\t}\r\n\t\tthis.playerCards = [\r\n\t\t\tnew PlayerCard({playerName:\"Red 1\", color:\"red\",AI:this.state.settings.AI[0],left:\"1\",right:\"2\",x:25,y:100}),\r\n\t\t\tnew PlayerCard({playerName:\"Red 2\", color:\"red\",AI:this.state.settings.AI[1],left:\"S\",right:\"D\",x:250,y:17}\t),\r\n\t\t\tnew PlayerCard({playerName:\"Red 3\", color:\"red\",AI:this.state.settings.AI[2],left:\"V\",right:\"B\",x:475,y:100}),\r\n\t\t\tnew PlayerCard({playerName:\"Blue 1\", color:\"blue\",AI:this.state.settings.AI[3],left:\"-\",right:\"=\",x:25,y:400}),\r\n\t\t\tnew PlayerCard({playerName:\"Blue 2\", color:\"blue\",AI:this.state.settings.AI[4],left:\"L\",right:\";\",x:250,y:483}),\r\n\t\t\tnew PlayerCard({playerName:\"Blue 3\", color:\"blue\",AI:this.state.settings.AI[5],left:\"N\",right:\"M\",x:475,y:400}),\r\n\t\t]\r\n\t\tthis.ball = new Ball({x:250, y: 250});\r\n\t\tthis.initBots();\r\n\t\tthis.resetPositions();\r\n\t}\r\n\r\n\tresetPositions() {\r\n\t\tthis.powerups = [];\r\n\t\tthis.particles = [];\r\n\t\tlet randomAngle = this.state.gameMode === 1? randomBetween(-Math.PI/4,Math.PI/4): randomBetween(0,2*Math.PI);\r\n\t\tlet initialBallVelocity = rotateVector({x:ballInitSpeed,y:0},randomAngle);\r\n\r\n\t\t// Make the ball go either right or left with 50:50 chance\r\n\t\tif (this.state.gameMode === 1 &&  Math.random() < 0.5) { \r\n\t\t\tinitialBallVelocity.x *= -1;\r\n\t\t\tinitialBallVelocity.y *= -1;\r\n\t\t}\r\n\t\tthis.ball = new Ball({x: 250, y: 250,dx: initialBallVelocity.x, dy: initialBallVelocity.y});\r\n\t\tthis.paddles.forEach(paddle => {\r\n\t\t\tpaddle.position = 50;\r\n\t\t\tpaddle.resetPowerup();\r\n\t\t})\r\n\t\tthis.bots.forEach(b => {\r\n\t\t\tif (b) // To bypass the null elements in bots array\r\n\t\t\t\tb.reset();\r\n\t\t})\r\n\t}\r\n\r\n\tupdatePaddles() {\r\n\r\n\t\tlet keys = this.state.input.pressedKeys;\r\n\t\tlet b = this.bots;\r\n\r\n\t\tthis.paddles[0].update(this.state, b[0]? b[0].output:keys.red1); \r\n\t\tthis.paddles[1].update(this.state, b[1]? b[1].output:keys.red2);\r\n\t\tthis.paddles[2].update(this.state, b[2]? b[2].output:keys.red3); \r\n\t\tthis.paddles[3].update(this.state, b[3]? b[3].output:keys.blue1);\r\n\t\tthis.paddles[4].update(this.state, b[4]? b[4].output:keys.blue2); \r\n\t\tthis.paddles[5].update(this.state, b[5]? b[5].output:keys.blue3);\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tcreateParticle(args) {\r\n\t\tif (this.state.settings.trail)\r\n\t\t\tthis.particles.push(new Particle(args));\r\n\t}\r\n\r\n\tupdate() {\r\n\t\ttickTock = !tickTock;\r\n\t\t//var start = Date.now();\r\n\t\tif (this.state.gameState === GameState.GOAL_SCORED || this.state.gameState === GameState.PAUSED) {\r\n\t\t\t//setTimeout(this.update,1000/60);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(tickTock) {\r\n\t\t\twhile (this.particles[0] && this.particles[0].delete) {\r\n\t\t\t\tthis.particles.shift();\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.particles.forEach(particle => particle.update())\r\n\t\t\tthis.createParticle({x:this.ball.x, y:this.ball.y, color:this.ball.color})\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.paddles.forEach(paddle => {\r\n\t\t\t// The below statement is to convert an array of objects {x,y} to array of numbers  \r\n\t\t\tlet hitbox = paddle.getHitbox();\r\n\t\t\tlet hitboxArr = [];\r\n\t\t\thitbox.forEach(e => {\r\n\t\t\t\thitboxArr.push(e.x);\r\n\t\t\t\thitboxArr.push(e.y);\r\n\t\t\t})\r\n\r\n\t\t\t// Now hitboxArr contains the points in correct format [x1,y1,x2,y2...]\r\n\t\t\tif (intersects.circlePolygon(this.ball.x, this.ball.y,this.ball.radius,hitboxArr)) {\r\n\t\t\t\tlet newVelocity = paddle.getReflection(this.ball,this.state);\r\n\t\t\t\tthis.ball.dx = newVelocity.x;\r\n\t\t\t\tthis.ball.dy = newVelocity.y;\r\n\t\t\t\tthis.ball.x += this.ball.dx; this.ball.y += this.ball.dy;\r\n\t\t\t\tthis.createParticle((({x,y}) => ({x,y}))(this.ball))\r\n\t\t\t\tthis.ball.color = paddle.color;\r\n\t\t\t\tif (paddle.powerup === 3) {\r\n\t\t\t\t\tthis.ball.boomerMode = true;\r\n\t\t\t\t} else this.ball.boomerMode = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\r\n\t\t// Collision between ball and walls\r\n\t\tthis.walls.forEach(wall => {\r\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, wall.x1, wall.y1, wall.x2, wall.y2)) {\r\n\t\t\t\tlet newVelocity = wall.getReflection(this.ball);\r\n\t\t\t\tthis.ball.dx = newVelocity.x;\r\n\t\t\t\tthis.ball.dy = newVelocity.y;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\r\n\t\t// Collision between ball and powerup \r\n\t\tthis.powerups.forEach((p,i) => {\r\n\t\t\tif (intersects.boxCircle(p.x-10,p.y-10,20,20,this.ball.x, this.ball.y, this.ball.radius)) {\r\n\t\t\t\tif(this.ball.color === \"red\") {\r\n\t\t\t\t\tthis.redPowerupHandler(Math.floor(randomBetween(1.0000001,3.99999999)));\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.ball.color === \"blue\") {\r\n\t\t\t\t\tthis.bluePowerupHandler(Math.floor(randomBetween(1.0000001,3.99999999)));\r\n\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.powerups.splice(i,1);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t//\r\n\t\tthis.bots.forEach((bot,index) => {\r\n\t\t\tif (bot) {\r\n\t\t\t\tbot.calculateOutput(this.ball, this.paddles[index]);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.ball.update(this.state);\r\n\t\r\n\t\tthis.updatePaddles();\r\n\r\n\t\t//console.log(this.particles.length)\r\n\t\tvar ctx = this.state.context;\r\n\t\t// Collision between ball and goals\r\n\t\tthis.goals.forEach(goal => {\r\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, goal.x1, goal.y1, goal.x2, goal.y2)) {\r\n\t\t\t\t// Update the score\r\n\t\t\t\tthis.draw(0,true);\r\n\t\t\t\tlet teamText;\r\n\t\t\t\tif (goal.teamId === Teams.RED) {\r\n\t\t\t\t\tthis.setState(state => ({blueScore: state.blueScore + 1}));\r\n\t\t\t\t\tteamText = \"Blue team\";\r\n\t\t\t\t\tctx.fillStyle = \"blue\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState(state => ({redScore: state.redScore + 1}));\r\n\t\t\t\t\tteamText = \"Red team\";\r\n\t\t\t\t\tctx.fillStyle = \"red\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgoalTextStyle = \"30px Courier New\";\r\n\t\t\t\tgoalText = teamText+ \" has scored!\";\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({gameState: GameState.GOAL_SCORED});\r\n\t\t\t\t\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.resetPositions();\r\n\r\n\t\t\t\t\tthis.setState({gameState: GameState.RUNNING});\r\n\r\n\t\t\t\t},1500);\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tdraw(timeStamp , singleFrame = false) {\r\n\t\r\n\t\tvar start = Date.now();\r\n\t\tconst ctx = this.state.context;\r\n\t\tif (this.state.gameState === GameState.PAUSED) {\r\n\t\t\tctx.font = \"30px Courier New\";\r\n\t\t\tctx.fillStyle = \"black\";\r\n\t\t\tctx.fillText(\"PAUSED\", 200,250);\r\n\t\t\tif (singleFrame === false)animationFrameId = requestAnimationFrame(this.draw);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.state.gameState === GameState.GOAL_SCORED) {\r\n\t\t\tctx.font = \"30px Courier New\";\r\n\t\t\tctx.fillStyle = goalTextStyle;\r\n\t\t\tctx.fillText(goalText,80,250);\r\n\t\t\tif (singleFrame === false) animationFrameId = requestAnimationFrame(this.draw);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\r\n\t\tctx.save();\r\n\t\tctx.fillStyle = \"#FFF\";\r\n\t\tctx.translate(0.5,0.5);\r\n\t\tctx.fillRect(0,0,500,500); // Erase the previous contents with this\r\n\r\n\t\t// var clear = Date.now();\r\n\t\t// if (clear-start > 1) console.log(\"Clear \",clear-start);\r\n\r\n\r\n\t\tthis.walls.forEach(wall => wall.draw(this.state));\r\n\t\tthis.goals.forEach(goal => \tgoal.draw(this.state));\r\n\t\tthis.playerCards.forEach(card => card.draw(this.state));\r\n\t\tthis.powerups.forEach(p => p.draw(this.state));\r\n\t\tthis.particles.forEach(p => p.draw(this.state));\r\n\r\n\t\t// var stat = Date.now();\r\n\t\t// if(stat-clear > 1) console.log(\"Static \",stat-clear)\r\n\t\r\n\t\tthis.paddles.forEach(p => p.draw(this.state));\r\n\t\tthis.ball.draw(this.state);\r\n\t\t\r\n\t\t// var moving = Date.now();\r\n\t\t// if (moving-stat > 1)\r\n\t\t// \tconsole.log(\"Paddle and ball \",moving-stat);\r\n\t\tif (this.state.settings.powerups) {\r\n\t\t\tif (this.powerupTimer > 0) this.powerupTimer--;\r\n\t\t\telse {\r\n\t\t\t\tthis.powerupTimer = randomBetween(200,300);\r\n\t\t\t\tif (this.powerups.length < 3) this.powerups.push(new PowerupToken({}));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tctx.restore();\r\n\t\tif (singleFrame === false) animationFrameId = requestAnimationFrame(this.draw);\r\n\t\t\r\n\t\t// var timeTaken = Date.now() - start;\r\n\t\t// if (timeTaken > 5) {\r\n\t\t// \tconsole.log(\"Total \",timeTaken);\r\n\t\t// }\r\n\r\n\t\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.state.input.unbindKeys();\r\n\t}\r\n\r\n\tchangeSettings(newSettings) {\r\n\t\tthis.setState({settings:newSettings});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style = {backgroundStyling}>\r\n\r\n\t\t\t<div >\r\n\t\t\t\t<h1>Pong++</h1>\r\n\t\t\t\t\r\n\t\t\t\t<canvas ref = \"canvas\" width = \"501\" height = \"501\"/>\r\n\t\t\t\t<Scoreboard redScore = {this.state.redScore} blueScore = {this.state.blueScore}/>\r\n\r\n\t\t\t\t<center>\r\n\t\t\t\t\t<button id = \"1v1\" onClick = {this.reset1v1}>Reset 1v1</button> \r\n\t\t\t\t\t<button id = \"2v2\" onClick = {this.reset2v2}>Reset 2v2</button>\r\n\t\t\t\t\t<button id = \"3v3\" onClick = {this.reset3v3}>Reset 3v3</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button onClick = {this.resetPositions}>Reset Rally</button>\r\n\t\t\t\t<button onClick = {() => {\r\n\t\t\t\t\tthis.setState((state) => {\r\n\t\t\t\t\t\tif (state.gameState !== 2)\r\n\t\t\t\t\t\treturn {gameState: 1 - state.gameState}\r\n\t\t\t\t\t})\r\n\t\t\t\t}}>{this.state.gameState===0? \"Play\" : \"Pause\"}</button>\r\n\t\t\t\t<div>Multiplayer link <a href = \"http://172.104.176.106:4000\">here</a></div>\r\n\t\t\t\t</center>\r\n\t\t\t\t<Settings settings = {this.state.settings} changeHandler = {this.changeSettings}/>\r\n\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","\r\nimport {distance2d ,rotateVector, reflection, angleBetween} from '../utils/2d';\r\nimport intersects from 'intersects';\r\nimport { randomBetween } from '../utils/math';\r\nimport { paddleSpeed, ballInitSpeed } from '../utils/constants';\r\n\r\n// Class that handles drawing the paddle\r\nexport default class Paddle {\r\n\tconstructor(args) {\r\n\r\n\t\t// x1,y1 and x2,y2 represent the starting and ending point where the paddle can slide in between\r\n\t\tthis.x1 = args.x1 || 0;\r\n\t\tthis.y1 = args.y1 || 0;\r\n\t\tthis.x2 = args.x2 || 0;\r\n\t\tthis.y2 = args.y2 || 0;\r\n\t\tthis.hidden = args.hidden;\r\n\t\tthis.color = args.color || \"#000\";\r\n\t\t\r\n\t\t// Depth and width are dimensions of the paddle\r\n\t\tthis.depth = args.depth || 10;\r\n\t\tthis.width = args.width || 50;\r\n\r\n\t\tthis.position = 50; // Percentage value showing how far the paddle is from its first endpoint to the other\r\n\t\t// Ex. 0 means it is at (x1,y1) , 100 means at (x2,y2), 50 means it is in between\r\n\t\tthis.paddleCenterX = (this.x1+this.x2)/2;\r\n\t\tthis.paddleCenterY = (this.y1+this.y2)/2;\r\n\r\n\t\tthis.slidinglength = distance2d(this.x1,this.y1,this.x2,this.y2);\r\n\t\tif (this.y1 === this.y2) {\r\n\t\t\tthis.tiltAngle = 90*Math.PI/180;\r\n\t\t} else {\r\n\t\t\tthis.tiltAngle = -Math.atan((this.x2-this.x1)/(this.y2-this.y1));\r\n\t\t}\r\n\r\n\t\t// The min and max value of position so that the ends of the paddle dont cross x1,y1 and x2,y2\r\n\t\t// Ex. if a paddle is 10px wide and the total length is 100px, min and max pos will be 5% and 95% \r\n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\r\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\r\n\t\tthis.powerup = 0;\t\r\n\t\tthis.powerupTimer = 0;\t\r\n\t\tthis.inputTicks = 0;\r\n\t}\r\n\r\n\tresetPowerup() {\r\n\t\r\n\t\tthis.powerup = 0;\r\n\t\tthis.width = 50;\r\n\t\tthis.powerupTimer = 0;\r\n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\r\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\r\n\t}\r\n\r\n\tbigPowerup() {\r\n\t\tthis.width = 100;\r\n\t\tthis.powerupTimer = 600;\r\n\t\tthis.powerup = 1;\r\n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\r\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\r\n\t}\r\n\r\n\tsmallPowerup() {\r\n\t\tthis.width = 25;\r\n\t\tthis.powerupTimer = 600;\r\n\t\tthis.powerup = 2;\r\n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\r\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\r\n\t}\r\n\r\n\tboomerPowerup() {\r\n\t\tthis.powerupTimer = 400;\r\n\t\tthis.powerup = 3;\r\n\r\n\t}\r\n\r\n\tgetReflection(ball,state) {\r\n\t\t\r\n\t\t// First, figure out which edge the ball collided with. \r\n\r\n\t\tlet hitbox = this.getHitbox();\r\n\t\tlet edge;\r\n\t\tfor (let i = 0; i < 4; i++) {\r\n\r\n\t\t\tedge = [hitbox[i].x, hitbox[i].y, hitbox[(i+1)%4].x, hitbox[(i+1)%4].y];\r\n\t\t\tif (intersects.circleLine(ball.x,ball.y,ball.radius, ...edge)) break;\r\n\r\n\t\t}\r\n\t\t// Get a vector parallel to the edge\r\n\t\tlet edgeVector = {x:edge[2] - edge[0], y: edge[3] - edge[1]}; \r\n\t\t// Rotate it by 90 degrees\r\n\t\tlet normalVector = rotateVector(edgeVector, Math.PI/2); \r\n\r\n\t\t// Make sure the normal is pointing outwards\r\n\t\tlet midpoint = {x:(edge[2]+edge[0])/2,y:(edge[3]+edge[1])/2};\r\n\t\tlet offset = {...midpoint};\r\n\t\toffset.x += normalVector.x*0.0001;\r\n\t\toffset.y += normalVector.y*0.0001;\r\n\r\n\t\tif (distance2d(this.paddleCenterX,this.paddleCenterY,midpoint.x,midpoint.y) > distance2d(this.paddleCenterX,this.paddleCenterY,offset.x,offset.y)) {\r\n\t\t\r\n\t\t\tnormalVector.x *= -1;\r\n\t\t\tnormalVector.y *= -1;\r\n\t\t}\r\n\r\n\t\t// Normalize the normal lol\r\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\r\n\t\tnormalVector.x /= magnitude;\r\n\t\tnormalVector.y /= magnitude;\r\n\r\n\t\t\r\n\t\tlet ref = reflection({x: ball.dx, y: ball.dy}, normalVector, 1.0);\r\n\t\t// Add the vector from paddle to ball, to increase the ball speed on each hit\r\n\t\tref.x += (ball.x - this.paddleCenterX)*state.settings.accelFactor*(ballInitSpeed/3);\r\n\t\tref.y += (ball.y - this.paddleCenterY)*state.settings.accelFactor*(ballInitSpeed/3);\r\n\r\n\t\tlet paddleVelocity = {x: this.paddleCenterX - this.previousCenterX, y: this.paddleCenterY-this.previousCenterY};\r\n\t\tif (paddleVelocity.x === 0 && paddleVelocity.y === 0) {\r\n\t\t\treturn ref;\r\n\t\t}\r\n\r\n\t\t// Deflect the ball further based on the movvement of the paddle\r\n\t\tref = rotateVector(ref, angleBetween(ref,paddleVelocity)*state.settings.defFactor)//*Math.sqrt(paddleVelocity.x**2 + paddleVelocity.y**2));\r\n\r\n\t\tif (state.settings.curveball) {\r\n\t\t\t\r\n\t\t\tlet angle = angleBetween(paddleVelocity,{x:ball.dx, y:ball.dy});\r\n\t\t\tball.dr += angle/20 + randomBetween(-0.1,0.1);\r\n\t\t}\r\n\t\treturn ref;\r\n\t}\r\n\r\n\tupdate(state,input){\r\n\t\tif (this.hidden) return;\r\n\t\tif (input.left || input.right) {\r\n\t\t\tthis.inputTicks++;\r\n\t\t} else {\r\n\t\t\tthis.inputTicks = 1;\r\n\t\t}\r\n\r\n\t\tif (this.powerupTimer > 0) {\r\n\t\t\tthis.powerupTimer--;\r\n\t\t\t\r\n\t\t}\r\n\t\tif (this.powerupTimer <= 0 && this.powerup !== 0) {\r\n\t\t\t\r\n\t\t\tthis.resetPowerup();\r\n\t\t}\r\n\t\tvar delta = paddleSpeed;\r\n\t\t\r\n\t\tif (state.settings.accel) {\r\n\t\t\tif (this.inputTicks < 5) {\r\n\t\t\t\tdelta = paddleSpeed*0.2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (input.right) {\r\n\t\t\tthis.position+=delta;\r\n\t\t}\r\n\r\n\t\tif (input.left) {\r\n\t\t\tthis.position-=delta;\r\n\t\t}\r\n\t\r\n\r\n\t\t// Stop it from going beyond the limit\r\n\t\tif (this.position > this.maxPosition) this.position = this.maxPosition;\r\n\t\tif (this.position < this.minPosition) this.position = this.minPosition;\r\n\r\n\t\t// Get x and y position of paddle center\r\n\t\t//this.position = Math.round(this.position);\r\n\r\n\t\t// Holds the previous coordinates of the paddle in the previous frame\r\n\t\t// Used to see if the paddle is moving\r\n\t\tthis.previousCenterX = this.paddleCenterX;\r\n\t\tthis.previousCenterY = this.paddleCenterY;\r\n\r\n\t\tthis.paddleCenterX = (this.x1*(1-this.position/100) + this.x2*this.position/100);\r\n\t\tthis.paddleCenterY = (this.y1*(1-this.position/100) + this.y2*this.position/100);\r\n\r\n\t\t\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\tif (this.hidden) return;\r\n\t\tvar ctx = state.context;\r\n\t\tctx.save();\r\n\t\tctx.translate(0.5,0.5);\r\n\t\tctx.strokeStyle = \"#000000\";\r\n\r\n\t\tctx.fillStyle = \"#888888\";\r\n\t\tif (this.powerup === 3) ctx.fillStyle = \"#fe0\";\r\n\t\tctx.translate(this.paddleCenterX, this.paddleCenterY);\r\n\t\tctx.rotate(this.tiltAngle );\r\n\t\t// Draw paddle with fillRect()\r\n\t\tctx.fillRect(-this.depth/2,-this.width/2,this.depth,this.width);\r\n\t\t\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t\r\n\r\n\tgetHitbox() {\r\n\r\n\t\tlet sw = this.width/2;\r\n\t\tlet sd = this.depth/2;\r\n\t\tvar points = [\r\n\t\t\t{x:sd,y:sw},{x:sd,y:-sw},{x:-sd,y:-sw},{x:-sd,y:sw}\r\n\t\t];\r\n\r\n\t\t/*\r\n\r\n\t\tOrder of points \r\n\r\n\t    3      2\r\n\t\t +----+\r\n\t\t |    |\r\n\t\t |    |\r\n\t\t |    |\r\n\t\t |    |\r\n\t\t +----+\r\n        4      1\r\n\t\t*/\r\n\r\n\r\n\t\treturn points.map((e) => {\r\n\t\t\tlet {x:u,y:v} = rotateVector(e,this.tiltAngle);\r\n\t\t\r\n\t\t\treturn {x:u + this.paddleCenterX,y: v + this.paddleCenterY}\r\n\t\t});\r\n\t\r\n\t}\r\n\r\n\tgetInnerWall() {\r\n\t\r\n\t\tlet offset = rotateVector({\r\n\t\t\tx: this.depth/2,\r\n\t\t\ty: 0\r\n\t\t},this.tiltAngle);\r\n\t\tif (distance2d(this.x1,this.y1,250,250) < distance2d(this.x1+offset.x, this.y1+offset.y,250,250)) {\r\n\t\t\t\r\n\t\t\toffset.x *= -1; offset.y *= -1;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tx1: this.x1 + offset.x,\r\n\t\t\ty1: this.y1 + offset.y,\r\n\t\t\tx2: this.x2 + offset.x,\r\n\t\t\ty2: this.y2 + offset.y\r\n\t\t}\r\n\t\t\r\n\t}\r\n}","import { rotateVector } from \"../utils/2d\";\r\nimport {lerp} from '../utils/math';\r\nimport { updateRate , updateTime , ballMinSpeed} from \"../utils/constants\";\r\n\r\n\r\nclass Ball {\r\n\tconstructor(args) {\r\n        this.x = args.x; \r\n        this.y = args.y;\r\n        this.dx = args.dx;\r\n        this.dy = args.dy; // changes the direction of movement  1 means up and -1 means down &  left or right \r\n        this.radius = 10;\r\n        this.delete = false; // Whether the ball should be deleted in the next frame\r\n        this.r = 0;\r\n        this.dr = 0;\r\n        this.color = \"#000\";\r\n        this.boomerMode = false;\r\n        this.prevX = args.x;\r\n        this.prevY = args.y;\r\n        this.lastUpdateTime = Date.now();\r\n\r\n    }\r\n\r\n    draw(state) {\r\n\r\n        var currentTime = Date.now(); \r\n        var timeSinceLastUpdate = currentTime - this.lastUpdateTime;\r\n        var {x:renderX,y:renderY} = lerp({x:this.prevX,y:this.prevY},{x:this.x,y:this.y}, timeSinceLastUpdate/updateTime); \r\n        // var renderX = this.x;\r\n        // var renderY = this.y;\r\n\r\n\r\n       \r\n        var ctx = state.context;\r\n        ctx.save();\r\n        ctx.translate(renderX + 0.5,renderY + 0.5);\r\n        ctx.rotate(this.r);\r\n\r\n        if (this.color === 'red') ctx.fillStyle = \"#800\";\r\n        else if (this.color === 'blue') ctx.fillStyle = \"#008\";\r\n        else ctx.fillStyle = \"#888\";\r\n       \r\n        ctx.beginPath();\r\n        ctx.arc(0,0,this.radius,this.radius,0,Math.PI*2);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        if (state.settings.curveball) \r\n        {\r\n            ctx.strokeStyle = \"#fff\";\r\n            ctx.lineWidth = 2;\r\n            ctx.beginPath();\r\n            ctx.moveTo(-10,0);\r\n            ctx.lineTo(10,0);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n            \r\n        }\r\n        ctx.restore();\r\n    }\r\n\r\n    update(state) {\r\n\r\n        this.prevX = this.x;\r\n        this.prevY = this.y;\r\n\r\n        this.x += this.dx;\r\n        this.y += this.dy;\r\n        this.r += this.dr;\r\n        if (this.boomerMode) {\r\n            this.x += this.dx*0.5;\r\n            this.y += this.dy*0.5;\r\n        }\r\n        if( Math.sqrt(this.dx ** 2 + this.dy ** 2) < ballMinSpeed ) {\r\n            this.dx *= 1.2; this.dy *= 1.2;\r\n        }\r\n        if (state.settings.curveball) {\r\n            // console.log(\"Here\");\r\n            ({x: this.dx, y:this.dy} = rotateVector({x:this.dx, y:this.dy}, this.dr/10));\r\n        }\r\n\r\n\r\n        if (Date.now() - this.lastUpdateTime < 0) {\r\n            console.log(Date.now() - this.lastUpdateTime)\r\n        }\r\n\r\n        this.lastUpdateTime = Date.now();\r\n    \r\n    }\r\n    \r\n}\r\n\r\nexport default Ball;","import React from 'react'; \r\n\r\n\r\nconst boxStyle = { \r\n\r\n    // marginLeft: \"50%\",\r\n\t// height:20,\r\n\tdisplay: \"inline-block\",\r\n\talignItems: \"center\",\r\n\tjustifyContent: \"center\",\r\n    textAlign : \"center\",\r\n    padding : 0,    \r\n    border :  \"0.1em solid black\",\r\n    width : 20, \r\n\r\n}; \r\n\r\n\r\n\r\nexport default class Key extends React.Component {   \r\n\r\n    render () { \r\n\r\n        return ( \r\n            <div style = {{...boxStyle, background: this.props.color, color: \"white\"}}>\r\n            \r\n            {this.props.content}\r\n            </div>\r\n        );\r\n\r\n\r\n       // return ({Instruction});\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport Key from './Instructions.js';\r\n\r\nconst dropDown = {\r\n\tposition: \"fixed\",\r\n\tbottom:0,\r\n\tleft: 0\r\n}\r\n\r\nconst dropDownContent= {\r\n \r\nposition: \"absolute\",\r\n  left:10,bottom:50,\r\n\r\n  width:300,\r\n  minHeight:150,\r\n  border:\"2px solid blue\",\r\n  background: \"\t#00FF00\",\r\n\tzIndex: \"1\",\r\n}\r\n\r\n\r\n\r\n\r\nconst buttonStyle = {\r\n\twidth:\"100px\",\r\n\tpadding:\"2px\",\r\n\tborder:\"2px solid blue\",\r\n\tmargin:\"2px\",\r\n\ttextAlign: \"center\",\r\n\tfontSize : 15,\r\n\tborderRadius:\"2\",\r\n\tuserSelect:\"none\",\r\n\tposition: \"\",\r\n\t\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mainStyle = {\r\n\theight:50,\r\n\twidth:100,\r\n\tmargin:\"auto\",\r\n\tpadding:10,\r\n\tfloat : \"center\"\r\n}\r\n\r\nconst leftStyle = {\r\n\twidth: \"50%\",\r\n\theight: 50,\r\n\tfloat: \"left\",\r\n\tdisplay: \"flex\",\r\n\talignItems: \"center\",\r\n\tjustifyContent: \"center\",\r\n\tboxShadow:\"0px 0px 0px 11px red inset\",\r\n\t\r\n\r\n}\r\n\r\nconst leftNumberStyle = {\r\n\tmargin : 0,\r\n\theight: 20,\r\n\tfloat: \"left\",\r\n\tdisplay: \"flex\",\r\n\talignItems: \"center\",\r\n\tjustifyContent: \"center\",\r\n\r\n}\r\n\r\nconst rightStyle = {\r\n\tmarginLeft: \"50%\",\r\n\theight:50,\r\n\tdisplay: \"flex\",\r\n\talignItems: \"center\",\r\n\tjustifyContent: \"center\",\r\n\tboxShadow:\"0px 0px 0px 11px blue inset\"\r\n}\r\n\r\n\r\n\r\nconst rightNumberStyle = {\r\n\tmargin : 10,\r\n\theight:20,\r\n\tdisplay: \"flex\",\r\n\talignItems: \"center\",\r\n\tjustifyContent: \"right\",\r\n\t// boxShadow:\"0px 0px 0px 10px blue inset\",\r\n\tfloat : \"center\"\r\n}\r\n\r\nconst pauseButton = {\r\n\tmargin:\"auto\",\r\n\theight:\"30px\",\r\n\twidth:\"30px\",\r\n\r\n}\r\n\r\n// const instructions = { \r\n// \tmargin : \"auto\",\r\n// \theight:40,\r\n// \twidth: 400,\r\n// \tpadding:40,\r\n// \talignItems: \"left\",\r\n// \tjustifyContent: \"left\",\r\n// \tfloat: \"left\",\r\n\r\n// }\r\n\r\n\r\n\r\nexport class Scoreboard extends React.Component {\r\n\r\n\tstate = { display : false}\r\n\r\n\thandleOnClick = () => { \r\n\t\tthis.setState((state) => ({display: !state.display}));\r\n\t\t// return (\r\n\t\t// \t<div>\r\n\t\t// \t{userInfo}\r\n\t\t// \t</div>\r\n\t\t// );\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\r\n\t\t\r\n\r\n\r\n\t\tconst userInfo = (\r\n\r\n\t\t\t<div style = { dropDownContent}>\r\n\t\t\t\r\n\t\t\t<h2 align = \"centre\">{'\tControls '}</h2>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div align = \"left\">\r\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\" , margin : 10}}>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\tRed 1 \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"1\" color = \"red\"/>   \r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"2\" color = \"red\"/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\", margin : 10}}>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t Red 2 \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"S\" color = \"red\"/>   \r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"D\" color = \"red\"/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\" , margin  : 10}}>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t Red 3 \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"V\" color = \"red\"/>   \r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"B\" color = \"red\"/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\" , margin  : 10}}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</span>\r\n\r\n\r\n\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\", margin : 10}}>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t Blue 1  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\r\n\t\t\t\t\t\t<Key  color = \"blue\" content = \"-\"/>   \r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"=\" color = \"blue\"/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\", margin : 10}}>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t Blue 2  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"L\" color = \"blue\"/>   \r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \";\" color = \"blue\"/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\", margin : 10}}>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t Blue 3 \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"N\" color = \"blue\"/>   \r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\r\n\t\t\t\t\t\t<Key  content = \"M\" color = \"blue\"/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tTo play, select your desired settings, and press one of the reset buttons to choose the number of players. Controls are shown above.\r\n\t\t\t\t\t</div><hr/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tWhen playing with powerups, hit the ball over a green square to collect a powerup. NEW: It will be activated upon contact\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t </div>\r\n\t\t\t\r\n\t\t\t );\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div style = {mainStyle}>\r\n\t\t\t\t\t<div id = \"red\" style = {leftStyle}>{this.props.redScore}</div>\r\n\t\t\t\t\t<div id = \"blue\" style = {rightStyle}>{this.props.blueScore}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\r\n\t\t\t\t<div style = {dropDown} >\r\n\t\t\t\t{this.state.display? userInfo:\"\"}\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button style = {buttonStyle} variant = \"primary\" onClick = {this.handleOnClick}>\r\n\t\t\t\t\t\tInstructions\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import { rotateVector ,distance2d, reflection} from \"../utils/2d\";\r\n\r\n\r\n\r\n\r\nexport class Wall {\r\n\r\n\tconstructor(args) {\r\n\t\tthis.x1 = args.x1;\r\n\t\tthis.y1 = args.y1;\r\n\t\tthis.x2 = args.x2;\r\n\t\tthis.y2 = args.y2;\r\n\r\n\t}\r\n\r\n\tgetReflection(ball) {\r\n\t\tlet parallelVector = {x: this.x2-this.x1, y: this.y2-this.y1};\r\n\t\tlet normalVector = rotateVector(parallelVector, Math.PI/2);\r\n\r\n\t\t// Make sure normalVector is pointing inward\r\n\t\tlet midpoint = {x: (this.x1+this.x2)/2, y: (this.y1+this.y2)/2};\r\n\t\tlet offset = {...midpoint};\r\n\t\toffset.x += normalVector.x*0.001;\r\n\t\toffset.y += normalVector.y*0.001;\r\n\r\n\t\tif (distance2d(ball.x,ball.y,midpoint.x,midpoint.y) < distance2d(ball.x,ball.y,offset.x,offset.y)) {\r\n\t\t\r\n\t\t\tnormalVector.x *= -1;\r\n\t\t\tnormalVector.y *= -1;\r\n\t\t}\r\n\r\n\t\t// Normalize the normal lol\r\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\r\n\t\tnormalVector.x /= magnitude;\r\n\t\tnormalVector.y /= magnitude;\r\n\t\t\r\n\r\n\t\treturn reflection({x:ball.dx, y:ball.dy}, normalVector,1.0);\r\n\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\tvar ctx  = state.context;\r\n\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n}","export class Goal {\r\n\tconstructor(args) {\r\n\t\tthis.x1 = args.x1;\r\n\t\tthis.y1 = args.y1;\r\n\t\tthis.x2 = args.x2;\r\n\t\tthis.y2 = args.y2;\r\n\r\n\t\tthis.color = args.color || \"red\";\r\n\t\tthis.teamId = args.teamId || 0;\t\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\tvar ctx  = state.context;\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = this.color;\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\trender(state) {\r\n\t\tvar ctx  = state.context;\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = this.color;\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n}","\r\nimport { distance2d } from '../utils/2d';\r\nimport {checkIntersection} from 'line-intersect';\r\n\r\nexport class Bot {\r\n\tconstructor(args) {\r\n\t\tthis.walls = args.walls; // All other paddle ranges are treated as walls\r\n\t\tthis.output = {left:0,right:0};\r\n\t\t\r\n\t\t\r\n\t\tthis.debug = args.debug; \r\n\t\tthis.curve = args.curve;\r\n\t\tthis.difficulty = Number(args.difficulty) || 3;\r\n\r\n\t\tif (this.difficulty === 3) this.lookAhead = 10;\r\n\t\telse this.lookAhead = 2;\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.output = {left:0,right:0};\r\n\t}\r\n\r\n\tcalculateOutput(ball,paddle) {\r\n\t\tif (this.difficulty >= 2) this.highDifficultyCalc(ball,paddle);\r\n\t\telse this.lowDifficultyCalc(ball,paddle);\r\n\t}\r\n\r\n\tlowDifficultyCalc(ball,paddle) {\r\n\t\tlet current = {x:paddle.paddleCenterX, y:paddle.paddleCenterY};\r\n\t\tlet dRight = {\r\n\t\t\tx: current.x+(paddle.x2 - paddle.x1)/100,\r\n\t\t\ty: current.y+(paddle.y2 - paddle.y1)/100\r\n\t\t}\r\n\t\tif (distance2d(dRight.x, dRight.y, ball.x,ball.y) < \r\n\t\tdistance2d(current.x,current.y, ball.x,ball.y)) {\r\n\t\t\tthis.output = {left:0, right:1};\r\n\t\t} else {\r\n\t\t\tthis.output = {left:1,right:0};\r\n\t\t}\r\n\t}\r\n\r\n\thighDifficultyCalc(ball, paddle) {\r\n\r\n\t\t// Waittimer is used to prevent unnecessary calculations when the ball is moving \r\n\t\t// Calculation of the ball's trajectory is only done\r\n\t\t// once after every impact off another paddle\r\n\t\t//console.log(this.waitTimer);\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tlet piw = paddle.getInnerWall();\r\n\t\t\r\n\t\t// Temporary object to simulate the ball\r\n\t\tlet b = {\r\n\t\t\tx:ball.x,\r\n\t\t\ty:ball.y,\r\n\t\t\tdx:ball.dx,\r\n\t\t\tdy:ball.dy\r\n\t\t};\r\n\r\n\t\tlet bouncesLeft = this.lookAhead;\r\n\t\twhile (bouncesLeft > 0) {\r\n\t\t\tlet bouncedFlag = false;\r\n\r\n\t\t\t// b1 is ball's position after 1000 ticks\r\n\t\t\t// b2 is the current ball position\r\n\t\t\t// We need to specity b1 like this becuase line-intersection requires 2 line-segments \r\n\t\t\tlet b1 = {x : b.x + 1000*b.dx, y: b.y + 1000*b.dy};\r\n\t\t\tlet b2 = {x : b.x , y: b.y};\r\n\r\n\r\n\t\t\t\r\n\r\n\t\t\tfor (let i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tlet wall = this.walls[i];\r\n\t\r\n\t\t\t\tlet intersection = checkIntersection(wall.x1,wall.y1,wall.x2,wall.y2,b1.x,b1.y,b2.x,b2.y);\r\n\r\n\t\t\t\tif (intersection.type === \"intersecting\") { // That means the ball will hit wall\r\n\t\t\t\t\tb.x = intersection.point.x;\tb.y = intersection.point.y;\r\n\t\t\t\t\tb.x -= b.dx; b.y -= b.dy; // getReflection assumes that the ball is just about to intersect the wall\r\n\t\t\t\t\tlet nextVelocity = wall.getReflection(b);\r\n\t\t\t\t\tb.x += b.dx; b.y += b.dy;\r\n\t\t\t\t\tb.dx = nextVelocity.x; b.dy = nextVelocity.y;\r\n\t\t\t\t\tb.x += b.dx; b.y += b.dy;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tbouncesLeft--;\r\n\t\t\t\t\tbouncedFlag = true;\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} \r\n\t\t\t}\r\n\r\n\t\t\tif (bouncedFlag) continue;\r\n\t\t\t\r\n\t\t\t// Now check intersection with the paddle\r\n\r\n\r\n\t\t\t\r\n\t\t\tlet intersection = checkIntersection(piw.x1,piw.y1,piw.x2,piw.y2, b1.x, b1.y, b2.x, b2.y);\r\n\t\t\tif (intersection.type === 'intersecting') {\r\n\t\t\t\t// Intersection with the paddle has been found\r\n\t\t\t\t// Now we need to output either left, right, or no move at all\r\n\t\t\t\tlet current = {x:paddle.paddleCenterX, y:paddle.paddleCenterY};\r\n\t\t\t\t// Update waitTimer if this is the first bounce\r\n\t\r\n\t\t\t\t\r\n\r\n\t\t\t\t// If the paddle is close enough, do nothing\r\n\t\t\t\tif (distance2d(current.x, current.y, intersection.point.x, intersection.point.y) < 8) {\r\n\t\t\t\t\tthis.output = {left:0,right:0};\r\n\t\t\t\t\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// position after moving right one tick\r\n\t\t\t\tlet dRight = {\r\n\t\t\t\t\tx: current.x+(paddle.x2 - paddle.x1)/100,\r\n\t\t\t\t\ty: current.y+(paddle.y2 - paddle.y1)/100\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (distance2d(dRight.x, dRight.y, intersection.point.x,intersection.point.y) < \r\n\t\t\t\tdistance2d(current.x,current.y, intersection.point.x, intersection.point.y)) {\r\n\t\t\t\t\t// Right is the way to go\r\n\t\t\t\t\tthis.output = {left:0, right:1};\r\n\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Go left\r\n\t\t\t\t\tthis.output = {left:1,right:0};\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tbouncesLeft--;\r\n\t\t}\r\n\t\t\r\n\t}\r\n}","import React from 'react';\r\n\r\nconst dropdown = {\r\n\tposition: \"fixed\",\r\n\t\r\n\r\n\tbottom:0,\r\n\tright: 0\r\n\r\n}\r\n\r\nconst categoryHeader = {\r\n\tbackground: \"#AAAAFF\",\r\n\twidth:\"90%\",\r\n\tmargin:\"auto\",\r\n\tmarginTop:\"2px\",\r\n}\r\n\r\nconst dropdownContent= {\r\n \r\n  \tposition: \"absolute\",\r\n\tright:10,bottom:30,\r\n\r\n\twidth:300,\r\n\tminHeight:150,\r\n\tborder:\"2px solid blue\",\r\n\tbackground: \"#8888ff\",\r\n\t\r\n\r\n  \tzIndex: \"1\",\r\n}\r\n\r\nconst buttonStyle = {\r\n\twidth:\"100px\",\r\n\tpadding:\"2px\",\r\n\tborder:\"2px solid blue\",\r\n\tmargin:\"2px\",\r\n\ttextAlign: \"center\",\r\n\tborderRadius:\"2\",\r\n\tuserSelect:\"none\",\r\n\tposition: \"fixed\",\r\n\tbottom:0,\r\n\tright: 0,\r\n\tfontSize : 15\r\n\r\n\r\n}\r\n\r\nconst defaultSettings = {\r\n\tAI:[false,false,false,false,false,false],\r\n\tcurveball:false,\r\n\tpowerups:false,\r\n\taccel:false,\r\n\ttrail:true,\r\n\tdefFactor:0.2,\r\n\taccelFactor:0.04\r\n}\r\n\r\nexport default class Settings extends React.Component {\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\topened:false,\r\n\t\t}\r\n\r\n\t\tthis.toggleDropdown = this.toggleDropdown.bind(this);\r\n\t\tthis.AICheckboxChange = this.AICheckboxChange.bind(this);\r\n\t\tthis.curveballChange = this.curveballChange.bind(this);\r\n\t\tthis.powerupsChange = this.powerupsChange.bind(this);\r\n\t\tthis.accelChange = this.accelChange.bind(this);\r\n\t\tthis.trailChange = this.trailChange.bind(this);\r\n\t\r\n\t}\r\n\r\n\ttoggleDropdown() {\r\n\t\r\n\t\tthis.setState((state) => ({opened: !state.opened}));\r\n\t}\r\n\r\n\tAICheckboxChange(e) {\r\n\t\tlet newSettings = this.props.settings;\r\n\t\tnewSettings.AI[e.target.id] = !newSettings.AI[e.target.id];\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\r\n\r\n\tcurveballChange(e) {\r\n\t\tconsole.log(\"Curvechange\");\r\n\t\tlet newSettings = this.props.settings;\r\n\t\tnewSettings.curveball = e.target.checked;\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\tpowerupsChange(e) {\r\n\t\tlet newSettings = this.props.settings;\r\n\t\tnewSettings.powerups = e.target.checked;\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\taccelChange(e) {\r\n\t\tlet newSettings = this.props.settings;\r\n\t\tnewSettings.accel = e.target.checked;\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\ttrailChange(e) {\r\n\t\tlet newSettings = this.props.settings;\r\n\t\tnewSettings.trail = e.target.checked;\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\tdefChange(e) {\r\n\t\tlet newSettings = this.props.settings;\r\n\t\tnewSettings.defFactor = e.target.value;\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\tafChange(e) {\r\n\t\tlet newSettings = this.props.settings;\r\n\t\tnewSettings.accelFactor = e.target.value;\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\tresetAdv() {\r\n\t\tlet newSettings = this.props.settings;\r\n\t\tnewSettings.accelFactor = defaultSettings.accelFactor;\r\n\t\tnewSettings.defFactor = defaultSettings.defFactor;\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\tdiffChange(e) {\r\n\t\tlet newSettings = this.props.settings;\r\n\t\t\r\n\t\tnewSettings.AIdiff = e.target.value;\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\r\n\r\n\t\tvar AICheckboxArray = [];\r\n\t\tconst names = [\"Red 1\", \"Red 2\", \"Red 3\", \"Blue 1\",\"Blue 2\", \"Blue 3\"];\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tlet e = (\r\n\t\t\t<div  key = {i} style = {{width:45,display:\"flex\",flexDirection:\"column\"}}>\r\n\t\t\t\t<div style = {{color:(names[i][0] === 'R'?\"red\":\"blue\")}}>{names[i]}</div>\r\n\t\t\t\t<input type = \"checkbox\" id = {i.toString()} checked = {this.props.settings.AI[i]} onChange = {this.AICheckboxChange}></input>\r\n\t\t\t</div>)\r\n\r\n\t\t\tAICheckboxArray.push(e);\r\n\t\t}\r\n\r\n\t\tvar curveballCheckbox = <input type = \"checkbox\" checked = {this.props.settings.curveball} onChange = {this.curveballChange}></input>\r\n\t\tvar powerupsCheckbox =  <input type = \"checkbox\" checked = {this.props.settings.powerups} onChange = {this.powerupsChange}></input>\r\n\t\tvar accelCheckbox = <input type = \"checkbox\" checked = {this.props.settings.accel} onChange = {this.accelChange}></input>\r\n\t\tvar trailCheckbox = <input type = \"checkbox\" checked = {this.props.settings.trail} onChange = {this.trailChange}></input>\r\n\t\tvar defSlider  = <input type = \"range\" value = {this.props.settings.defFactor} min = \"0\" max = \"0.5\" step = \"0.05\" onChange = {this.defChange.bind(this)}></input>\r\n\t\tvar afSlider  = <input type = \"range\" value = {this.props.settings.accelFactor} min = \"0\" max = \"0.2\" step = \"0.01\" onChange = {this.afChange.bind(this)}></input>\r\n\t\tvar diffSlider  = <input type = \"range\" value = {this.props.settings.AIdiff} min = \"1\" max = \"3\" step = \"1\" onChange = {this.diffChange.bind(this)}></input>\r\n\r\n\r\n\t\tconst content = (\r\n\t\t\t<div style = {dropdownContent}>\r\n\t\t\t\t<div style = {categoryHeader}>\r\n\t\t\t\t\t<div>Enable AI </div>\r\n\t\t\t\t\t<div style = {{display:\"flex\" , flexDirection:\"row\"}}>\r\n\t\t\t\t\t\t{AICheckboxArray}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>AI Difficulty {diffSlider}</div> \r\n\t\t\t\t\t<div style = {{fontSize:\"13px\"}}>AI Settings are applied when you reset game</div>\r\n\t\t\t\t\t<div>Curveball {curveballCheckbox}</div>\r\n\t\t\t\t\t<div>Powerups {powerupsCheckbox}</div>\r\n\t\t\t\t\t<div>Input Acceleration {accelCheckbox}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style = {categoryHeader}>\r\n\t\t\t\t\t<div style = {{fontSize:\"16px\"}}>Graphics Settings</div>\r\n\t\t\t\t\t<div>Ball Trail {trailCheckbox}</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {categoryHeader}>\r\n\t\t\t\t\t<div style = {{fontSize:\"16px\"}}>Advanced</div>\r\n\t\t\t\t\t<div>Deflection Factor {defSlider}</div>\r\n\t\t\t\t\t<div style = {{fontSize:\"13px\"}}>Ball's direction change when hit by a moving paddle</div>\r\n\r\n\t\t\t\t\t<div>Ball Acceleration{afSlider}</div>\r\n\t\t\t\t\t<div style = {{fontSize:\"13px\"}}>How much the ball speeds up at every hit</div>\r\n\t\t\t\t\t<button style = {{margin:2}} onClick = {this.resetAdv.bind(this)}>Reset Advanced Settings</button>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\r\n\t\treturn(\r\n\t\t\t<div style = {dropdown}>\r\n\t\t\t\t{this.state.opened? content:\"\"}\r\n\t\t\t\t<button style = {buttonStyle} onClick = {this.toggleDropdown}>Settings {this.state.opened? \"↓\":\"↑\"} </button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","\r\nexport class Particle {\r\n\tconstructor(args) {\r\n\t\tthis.x = args.x;\r\n\t\tthis.y = args.y;\r\n\t\tthis.lifetime = 40;\r\n\t\tthis.delete = false;\r\n\t\tthis.color = args.color;\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\t\r\n\t\tvar ctx = state.context;\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.beginPath();\r\n\t\t//ctx.arc(this.x, this.y, this.lifetime/20, 0 , Math.PI*2);\r\n\t\tvar edgeLength = this.lifetime/10;\r\n\t\tctx.fillRect(this.x-edgeLength/2, this.y-edgeLength/2,edgeLength,edgeLength);\r\n\t\tctx.fill();\r\n\t\tctx.closePath();\r\n\r\n\t\t\r\n\t}\r\n\r\n\tupdate() {\r\n\t\t\r\n\t\tthis.lifetime--;\r\n\t\t\tif (this.lifetime <= 0) {\r\n\t\t\tthis.delete = true;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n}","\r\n//import big from '../big.png';\r\nimport { randomBetween } from '../utils/math';\r\n\r\nexport class PowerupToken {\r\n\t\r\n\tconstructor(args) {\r\n\t\tthis.x = args.x || randomBetween(200,300);\r\n\t\tthis.y = args.y || randomBetween(200,300);\r\n\t\tthis.delete = false;\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\tvar ctx = state.context;\r\n\t\tctx.fillStyle = \"#0a0\";\r\n\t\tctx.fillRect(this.x - 10, this.y-10, 20, 20);\r\n\t}\r\n\r\n\t\r\n\r\n}","export class PlayerCard {\r\n\tconstructor(args) {\r\n\t\tthis.playerName = args.playerName || \"Untitled\";\r\n\t\tthis.color = args.color || \"red\";\r\n\t\tthis.left = args.left; this.right = args.right;\r\n\t\tthis.x = args.x; this.y = args.y; // top left corner\r\n\t\tthis.AI = args.AI || false;\r\n\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\tconst ctx = state.context;\r\n\t\t//ctx.save();\r\n\t\tctx.textBaseline = \"top\"; \r\n\t\tctx.font = \"14px sans-serif\";\r\n\t\tvar boxwidth = ctx.measureText(this.playerName).width + 4;\r\n\t\tif (boxwidth < 42) boxwidth = 42;\t\r\n\t\tlet x = this.x - boxwidth/2;\r\n\t\tlet y = this.y - 17; \r\n\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.rect(x, y, boxwidth, 34);\r\n\t\tctx.strokeStyle = (this.color === \"red\"? \"red\":\"blue\");\r\n\t\tctx.stroke();\r\n\t\tctx.fillStyle = (this.color === \"red\"? \"#f88\":\"#88f\"); ctx.fill();\r\n\t\tctx.fillStyle = \"black\";\r\n\t\tctx.strokeStyle = \"black\";\r\n\t\tctx.fillText(this.playerName, x + 2,y + 2);\r\n\t\tctx.closePath();\r\n\t\tctx.font = \"14px Courier New\";\r\n\t\tif (this.AI) {\r\n\t\t\tctx.fillText(\"A.I.\",x + 2, y + 2 + 14 + 2);\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x + 7, y + 18) // 2 + 14 + 2\r\n\t\t\tctx.lineTo(x + 2, y + 18 + 7);\r\n\t\t\tctx.lineTo(x + 7, y + 18+14);\r\n\t\t\tctx.fill();\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x + 35, y + 18);\r\n\t\t\tctx.lineTo(x + 40, y + 18 + 7);\r\n\t\t\tctx.lineTo(x + 35, y + 18+14);\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillText(this.left,x + 9, y + 18);\r\n\t\t\tctx.fillText(this.right,x + 24, y + 18);\r\n\t\t}\r\n\t\r\n\t\r\n\t\t//ctx.restore();\r\n\r\n\t}\r\n}","import 'react-app-polyfill/ie11';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}