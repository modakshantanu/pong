{"version":3,"sources":["InputManager.js","utils/2d.js","utils/math.js","utils/constants.js","App.js","gameObjects/Paddle.js","gameObjects/Ball.js","components/Instructions.js","components/Scoreboard.js","gameObjects/Wall.js","gameObjects/Goal.js","gameObjects/Bot.js","components/Settings.js","gameObjects/Particle.js","gameObjects/PowerupToken.js","gameObjects/PlayerCard.js","index.js"],"names":["codeMap","187","186","189","InputManager","Object","classCallCheck","this","pressedKeys","red1","right","left","red2","red3","blue1","blue2","blue3","window","addEventListener","handleKeys","bind","removeEventListener","value","e","keys","key","keyCode","distance2d","x1","y1","x2","y2","Math","sqrt","pow","rotateVector","vect","angle","x","y","cos","sin","reflection","normal","arguments","length","undefined","dotProduct","result","angleBetween","vect1","vect2","atan","randomBetween","a","b","random","goalText","goalTextStyle","Paddle","args","hidden","color","depth","width","position","paddleCenterX","paddleCenterY","slidinglength","tiltAngle","PI","minPosition","maxPosition","powerup","powerupTimer","inputTicks","ball","state","edge","hitbox","getHitbox","i","intersects","circleLine","apply","radius","concat","toConsumableArray","normalVector","midpoint","offset","objectSpread","magnitude","ref","dx","dy","settings","accelFactor","paddleVelocity","previousCenterX","previousCenterY","defFactor","curveBall","dr","input","resetPowerup","delta","accel","paddleSpeed","ctx","context","save","translate","strokeStyle","fillStyle","rotate","fillRect","restore","_this","sw","sd","map","_rotateVector","u","v","Ball","delete","r","boomerMode","prevX","prevY","lastUpdateTime","Date","now","f","timeSinceLastUpdate","_lerp","renderX","renderY","beginPath","arc","fill","closePath","curveball","lineWidth","moveTo","lineTo","stroke","console","log","boxStyle","display","alignItems","justifyContent","textAlign","padding","border","Key","react_default","createElement","style","background","props","content","React","Component","dropDown","bottom","dropDownContent","minHeight","zIndex","buttonStyle","margin","fontSize","borderRadius","userSelect","mainStyle","height","float","leftStyle","boxShadow","leftNumberStyle","rightStyle","marginLeft","rightNumberStyle","Scoreboard","_React$Component","_getPrototypeOf2","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","handleOnClick","setState","inherits","createClass","userInfo","align","Instructions_Key","id","redScore","blueScore","Button","variant","onClick","Wall","Goal","teamId","Bot","walls","output","debug","curve","difficulty","Number","lookAhead","paddle","highDifficultyCalc","lowDifficultyCalc","current","dRight","piw","getInnerWall","bouncesLeft","bouncedFlag","b1","b2","wall","intersection","checkIntersection","type","point","nextVelocity","getReflection","dropdown","categoryHeader","marginTop","dropdownContent","defaultSettings","Settings","opened","toggleDropdown","assertThisInitialized","AICheckboxChange","curveballChange","powerupsChange","accelChange","trailChange","newSettings","AI","target","changeHandler","checked","powerups","trail","AIdiff","AICheckboxArray","names","flexDirection","toString","onChange","push","curveballCheckbox","powerupsCheckbox","accelCheckbox","trailCheckbox","defSlider","min","max","step","defChange","afSlider","afChange","diffSlider","diffChange","resetAdv","Particle","lifetime","edgeLength","PowerupToken","PlayerCard","playerName","textBaseline","font","boxwidth","measureText","rect","fillText","backgroundStyling","backgroundColor","GameState","PAUSED","RUNNING","GOAL_SCORED","Teams","tickTock","App","gameState","gameMode","draw","reset1v1","reset2v2","reset3v3","resetPositions","updatePaddles","changeSettings","initBots","createParticle","update","bindKeys","refs","canvas","getContext","requestAnimationFrame","setInterval","t","tgt","paddles","bigPowerup","smallPowerup","boomerPowerup","bots","goalWalls","goals","goal","modifiedWalls","splice","particles","playerCards","g1","g2","v1","v2","_this$paddles","initialBallVelocity","forEach","reset","_this2","shift","particle","_ref","hitboxArr","circlePolygon","newVelocity","p","boxCircle","redPowerupHandler","floor","bluePowerupHandler","bot","index","calculateOutput","teamText","setTimeout","timeStamp","_this3","singleFrame","card","unbindKeys","_this4","Scoreboard_Scoreboard","href","Settings_Settings","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8d119b16.chunk.js","sourcesContent":["const KEY = {\r\n\tONE:49, // Red 1 left/up\r\n\tTWO:50, // Red 1 right/down\r\n\tS: 83, // Red 2 left \r\n\tD: 68, // Red 2 right\r\n\tV: 86, // Red 3 left\r\n\tB: 66, // Red 3 right\r\n\tN: 78, // Blue 3 left\r\n\tM: 77, // Blue 3 right\r\n\tL: 76, // Blue 2 left\r\n\tSEMICOLON: 186, // Blue 2 right\r\n\tMINUS: 189, // Blue 1 left/down\r\n\tEQUAL: 187, // Blue 1 right\r\n };\r\n\r\n const codeMap = {\r\n\t\"187\": \"=\",\r\n\t\"186\": \";\",\r\n\t\"189\": \"-\",\r\n }\r\n\r\n export default class InputManager {\r\n\r\n\tbindKeys() {\r\n\t\twindow.addEventListener('keyup',   this.handleKeys.bind(this, false));\r\n\t\twindow.addEventListener('keydown', this.handleKeys.bind(this, true));\r\n\t}\r\n\t\r\n\tunbindKeys() {\r\n\t\twindow.removeEventListener('keyup', this.handleKeys);\r\n\t\twindow.removeEventListener('keydown', this.handleKeys);\r\n\t}\r\n\tconstructor() {\r\n\t\tthis.pressedKeys = {};\r\n\t\tthis.pressedKeys.red1 = {right:0,left:0};\r\n\t\tthis.pressedKeys.red2 = {right:0,left:0};\r\n\t\tthis.pressedKeys.red3 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue1 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue2 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue3 = {right:0,left:0};\r\n\t}\r\n\r\n\r\n\t// The pressedKeys object holds either a 0 or a 1 for each key whether it is pressed or not\r\n\t// It is always updated in real time once the eventListener is added\r\n\thandleKeys(value, e){\r\n\t\tlet keys = this.pressedKeys;\r\n\t\t\r\n\t\tswitch (e.key == \"Unidentified\" ? codeMap[e.keyCode] : e.key) {\r\n\t\t\tcase '1': \r\n\t\t\t\tkeys.red1.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '2':\r\n\t\t\t\tkeys.red1.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 's':case 'S':\r\n\t\t\t\tkeys.red2.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'd':case 'D':\r\n\t\t\t\tkeys.red2.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'v':case 'V':\r\n\t\t\t\tkeys.red3.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'b':case 'B':\r\n\t\t\t\tkeys.red3.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'n':case 'N':\r\n\t\t\t\tkeys.blue3.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'm':case 'M':\r\n\t\t\t\tkeys.blue3.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'l':case 'L':\r\n\t\t\t\tkeys.blue2.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ';':\r\n\t\t\t\tkeys.blue2.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '-':\r\n\t\t\t\tkeys.blue1.left = value;\r\n\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase '=':\r\n\t\t\t\t\r\n\t\t\t\tkeys.blue1.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t }\r\n\t\t this.pressedKeys = keys;\r\n\t }\r\n\t \r\n }","// A file containing simple functions for 2d grid related calculations\r\n\r\nexport function distance2d(x1,y1,x2,y2) {\r\n\treturn Math.sqrt((x1-x2)**2 + (y1-y2)**2);\r\n}\r\n\r\nexport function rotateVector(vect, angle) {\r\n\tlet {x,y} = vect;\r\n\treturn {\r\n\t\tx: Math.cos(angle)*x - Math.sin(angle)*y,\r\n\t\ty: Math.sin(angle)*x + Math.cos(angle)*y\r\n\t}\r\n}\t\r\n\r\n// Returins a vector which is the result of *vect* bouncing off a surface with normal *normal*\r\n// normal must have magnitude 1\r\n// d' = d - 2(d.n)n\r\nexport function reflection(vect,normal,scalingFactor = 1.0) {\r\n\tlet dotProduct = normal.x*vect.x + normal.y*vect.y;\r\n\tlet result = vect;\r\n\tresult.x -= 2*dotProduct*normal.x;\r\n\tresult.y -= 2*dotProduct*normal.y;\r\n\treturn result;\r\n}\r\n\r\nexport function angleBetween(vect1, vect2) {\r\n\tlet {x:x1,y:y1} = vect1;\r\n\tlet {x:x2,y:y2} = vect2;\r\n\treturn Math.atan(x1*y2-y1*x2,x1*x2+y1*y2);\r\n\r\n}","export function randomBetween(a,b) {\r\n\treturn a + Math.random()*(b-a);\r\n}\r\n\r\nexport function lerp(a,b,f) {\r\n\t// given 2 previous locations a -> b, a occured at t=0 and b ata t=1\r\n\t// function returns position at t = 1+f \r\n\tf += 1;\r\n\treturn {\r\n\t\tx: (a.x*(1-f) + b.x*f),\r\n\t\ty: (a.y*(1-f) + b.y*f)\r\n\t}\r\n}","\r\nexport const updateRate = 120;\r\nexport const updateTime = 1000/updateRate;\r\nexport const ballInitSpeed = 3*60/updateRate;\r\nexport const paddleSpeed = 60/updateRate;\r\nexport const ballMinSpeed = 2 * 60/updateRate;","import React, {Component} from 'react';\nimport InputManager from './InputManager'; // InputManager is a class handling all keyboard inputs\nimport './App.css';\nimport Paddle from './gameObjects/Paddle';\nimport Ball from './gameObjects/Ball';\nimport { Scoreboard } from './components/Scoreboard';\nimport { Wall } from './gameObjects/Wall';\nimport { Goal } from './gameObjects/Goal';\nimport intersects from 'intersects';\nimport { rotateVector } from './utils/2d';\nimport { randomBetween } from './utils/math';\nimport { Bot } from './gameObjects/Bot';\nimport Settings from './components/Settings';\nimport { Particle } from './gameObjects/Particle';\nimport {PowerupToken} from './gameObjects/PowerupToken'\nimport {PlayerCard} from './gameObjects/PlayerCard'\nimport {updateRate, ballInitSpeed} from './utils/constants';\n\nconst backgroundStyling = { \n\n\tbackgroundColor : \"\t#fff\"\n\n}\n\nconst GameState = {\n\tPAUSED:0,\n\tRUNNING:1,\n\tGOAL_SCORED:2\n}\n\n\nconst Teams = {\n\tRED:0,\n\tBLUE:1,\n}\n\nvar animationFrameId;\nvar goalText;\nvar goalTextStyle;\nvar tickTock = false;\n// The main component that contains the canvas, and other buttons if needed\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinput: new InputManager(), // Instantiate new InputManager\n\t\t\tcontext: null, // the canvas context,\n\t\t\tgameState: GameState.RUNNING,\n\t\t\tredScore:0,\n\t\t\tblueScore:0,\n\t\t\tgameMode:1, // Number of players on each side,\n\t\t\tsettings: {\n\t\t\t\tAI:[false,false,false,false,false,false],\n\t\t\t\tAIdiff:2,\n\t\t\t\tcurveball:false,\n\t\t\t\tpowerups:false,\n\t\t\t\taccel:false,\n\t\t\t\ttrail:true,\n\t\t\t\tdefFactor:0.2,\n\t\t\t\taccelFactor:0.04,\n\n\t\t\t},\n\n\t\t}\n\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.reset1v1 = this.reset1v1.bind(this);\n\t\tthis.reset2v2 = this.reset2v2.bind(this);\n\t\tthis.reset3v3 = this.reset3v3.bind(this);\n\t\tthis.resetPositions = this.resetPositions.bind(this);\n\t\tthis.updatePaddles = this.updatePaddles.bind(this);\n\t\tthis.changeSettings = this.changeSettings.bind(this);\n\t\tthis.initBots = this.initBots.bind(this);\n\t\tthis.createParticle = this.createParticle.bind(this);\n\t\tthis.update = this.update.bind(this);\n\t\t\n\t\t\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.state.input.bindKeys();\n\t\t\n\t\tconst context = this.refs.canvas.getContext('2d'); // This is to get context\n\t\tthis.powerupTimer = 100000;\n\t\tthis.setState({context:context});\t\t\n\t\tthis.reset1v1();\n\t\tanimationFrameId = requestAnimationFrame(this.draw); \n\t\tsetInterval(this.update, 1000/updateRate);\n\t\t\n\n\n\t}\n\n\tbluePowerupHandler(type) {\n\t\tvar targets = [];\n\t\tif (type === 2) {\n\t\t\ttargets = [0,1,2];\n\t\t} else targets = [3,4,5];\t\n\t\tfor (let t in targets) {\n\t\t\tlet tgt = this.paddles[t];\n\t\t\tswitch(type) {\n\t\t\t\tcase 1: tgt.bigPowerup(); break;\n\t\t\t\tcase 2: tgt.smallPowerup(); break;\n\t\t\t\tcase 3: tgt.boomerPowerup(); break;\n\t\t\t\tdefault: \n\t\t\t}\n\t\t}\n\t}\n\n\tredPowerupHandler(type) {\n\t\tvar targets = [];\n\t\tif (type === 2) {\n\t\t\ttargets = [3,4,5];\n\t\t} else targets = [0,1,2];\t\n\t\tfor (let t in targets) {\n\t\t\tlet tgt = this.paddles[t];\n\t\t\tswitch(type) {\n\t\t\t\tcase 1: tgt.bigPowerup(); break;\n\t\t\t\tcase 2: tgt.smallPowerup(); break;\n\t\t\t\tcase 3: tgt.boomerPowerup(); break;\n\t\t\t\tdefault: \n\t\t\t}\n\t\t}\n\t}\n\n\tinitBots() {\n\t\tthis.bots = [];\n\t\t// A new array of all the goals, as well as walls\n\t\t// Both goals and walls are treated as walls by bots\n\t\tlet goalWalls = this.goals.map(goal => new Wall({x1:goal.x1,y1:goal.y1,x2:goal.x2,y2:goal.y2})).concat(this.walls); \n\n\t\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tif (this.state.settings.AI[i]) {\n\t\t\t\tlet modifiedWalls = [...goalWalls]; // Create a new array with all walls except that player's goal\n\t\t\t\tmodifiedWalls.splice(i,1);\n\t\t\t\tthis.bots.push(new Bot({walls:modifiedWalls,curve:this.state.settings.curveball,difficulty:this.state.settings.AIdiff}));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tthis.bots.push(null); // Dummy to make the array index match other indices (0-5)\n\t\t\t}\n\t\t}\n\t\n\t}\n\n\treset1v1() {\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:1});\n\t\tthis.particles = []; this.powerups = []; \n\t\tif (this.state.settings.powerups) {\n\t\t\tthis.powerupTimer = randomBetween (200,300);\n\t\t}\n\t\tthis.walls = [\n\t\t\tnew Wall({x1:0,y1:100,x2:500,y2:100}),\n\t\t\tnew Wall({x1:0,y1:399,x2:500,y2:399}),\n\t\t];\n\t\tthis.goals = [\n\t\t\tnew Goal({x1:0,y1:100,x2:0,y2:400,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\n\t\t\tnew Goal({x1:499,y1:100,x2:499,y2:400,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), // These 4 are dummy goals to make the mapping consistent\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\n\t\t];\n\n\t\tthis.paddles = [\n\t\t\tnew Paddle({x1:10, y1:100, x2:10, y2:400,color:\"red\"}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // \n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // These 4 paddles are dummy paddles, so the mapping from player -> paddle index\n\t\t\tnew Paddle({x1:490,y1:400,x2:490,y2:100,color:\"blue\"}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // is consistent\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), //\n\t\t]\n\t\tthis.playerCards = [\n\t\t\tnew PlayerCard({playerName:\"Red 1\", color:\"red\", x:25, y:50,left:\"1\", right:\"2\",AI:this.state.settings.AI[0]}),\n\t\t\tnew PlayerCard({playerName:\"Blue 1\",color:\"blue\", x:475,y:50,left:'-',right:\"=\",AI:this.state.settings.AI[3]})\n\t\t]\n\t\t\n\t\tthis.ball = new Ball({x:250, y: 250,});\n\t\tthis.initBots();\n\t\t\n\t\tthis.resetPositions();\n\n\t\n\t}\n\n\treset2v2() {\n\t\tthis.particles = []; this.powerups = [];\n\t\tif (this.state.settings.powerups) {\n\t\t\tthis.powerupTimer = randomBetween (200,300);\n\t\t}\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:2});\n\t\tthis.walls = [];\n\t\tthis.goals = [\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:0,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:250,y1:0,x2:500,y2:250,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), \n\t\t\tnew Goal({x1:250,y1:500,x2:500,y2:250,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:500,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), \n\t\t];\n\t\tthis.paddles = [\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:10,color:\"red\"}),\n\t\t\tnew Paddle({x1:250,y1:10,x2:490,y2:250,color:\"red\"}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}),\n\t\t\tnew Paddle({x1:250,y1:490,x2:490,y2:250,color:\"blue\"}),\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:490,color:\"blue\"}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}),\n\t\t]\n\t\tthis.playerCards = [\n\t\t\tnew PlayerCard({playerName:\"Red 1\", color:\"red\",AI:this.state.settings.AI[0],left:\"1\",right:\"2\",x:50,y:100}),\n\t\t\tnew PlayerCard({playerName:\"Red 2\", color:\"red\",AI:this.state.settings.AI[1],left:\"S\",right:\"D\",x:450,y:100}\t),\n\t\t\t\n\t\t\tnew PlayerCard({playerName:\"Blue 1\", color:\"blue\",AI:this.state.settings.AI[3],left:\"-\",right:\"=\",x:50,y:400}),\n\t\t\tnew PlayerCard({playerName:\"Blue 2\", color:\"blue\",AI:this.state.settings.AI[4],left:\"L\",right:\";\",x:450,y:400}),\n\t\t\t\n\t\t]\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.initBots();\n\t\tthis.resetPositions();\n\t\t\n\t}\n\n\treset3v3() {\n\t\tthis.particles = []; this.powerups = [];\n\t\tif (this.state.settings.powerups) {\n\t\t\tthis.powerupTimer = randomBetween (200,300);\n\t\t}\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:3});\n\t\tthis.walls = [];\n\t\t// Generate the hexagonal coordinates programatically since its easier than hardcoding\n\t\tthis.goals = [];\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tlet g1 = rotateVector({x:-250,y:0},i*Math.PI/3);\n\t\t\tlet g2 = rotateVector({x:-250,y:0},(i+1)*Math.PI/3);\n\t\t\tlet color = i < 3? \"red\":\"blue\";\n\t\t\tlet teamId = color === \"red\"? Teams.RED: Teams.BLUE;\n\t\t\tthis.goals.push(new Goal({x1:g1.x + 250, y1:g1.y + 250, x2:g2.x + 250, y2:g2.y + 250, color:color, teamId:teamId}));\n\t\t}\n\t\tthis.paddles = [];\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tlet v1 = rotateVector({x:-240,y:0},i*Math.PI/3);\n\t\t\tlet v2 = rotateVector({x:-240,y:0},(i+1)*Math.PI/3);\n\t\t\t\n\t\t\t\n\t\t\tthis.paddles.push(new Paddle({x1: v1.x + 250,y1:v1.y + 250, x2:v2.x + 250, y2:v2.y + 250, color:\"red\"}));\n\t\t}\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tlet {x1,y1,x2,y2} = this.paddles[2-i];\n\t\t\tthis.paddles.push(new Paddle({x1:x1, y1: 500-y1, x2:x2, y2:500-y2,color:\"blue\"}))\n\t\t}\n\t\tthis.playerCards = [\n\t\t\tnew PlayerCard({playerName:\"Red 1\", color:\"red\",AI:this.state.settings.AI[0],left:\"1\",right:\"2\",x:25,y:100}),\n\t\t\tnew PlayerCard({playerName:\"Red 2\", color:\"red\",AI:this.state.settings.AI[1],left:\"S\",right:\"D\",x:250,y:17}\t),\n\t\t\tnew PlayerCard({playerName:\"Red 3\", color:\"red\",AI:this.state.settings.AI[2],left:\"V\",right:\"B\",x:475,y:100}),\n\t\t\tnew PlayerCard({playerName:\"Blue 1\", color:\"blue\",AI:this.state.settings.AI[3],left:\"-\",right:\"=\",x:25,y:400}),\n\t\t\tnew PlayerCard({playerName:\"Blue 2\", color:\"blue\",AI:this.state.settings.AI[4],left:\"L\",right:\";\",x:250,y:483}),\n\t\t\tnew PlayerCard({playerName:\"Blue 3\", color:\"blue\",AI:this.state.settings.AI[5],left:\"N\",right:\"M\",x:475,y:400}),\n\t\t]\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.initBots();\n\t\tthis.resetPositions();\n\t}\n\n\tresetPositions() {\n\t\tthis.powerups = [];\n\t\tthis.particles = [];\n\t\tlet randomAngle = this.state.gameMode === 1? randomBetween(-Math.PI/4,Math.PI/4): randomBetween(0,2*Math.PI);\n\t\tlet initialBallVelocity = rotateVector({x:ballInitSpeed,y:0},randomAngle);\n\n\t\t// Make the ball go either right or left with 50:50 chance\n\t\tif (this.state.gameMode === 1 &&  Math.random() < 0.5) { \n\t\t\tinitialBallVelocity.x *= -1;\n\t\t\tinitialBallVelocity.y *= -1;\n\t\t}\n\t\tthis.ball = new Ball({x: 250, y: 250,dx: initialBallVelocity.x, dy: initialBallVelocity.y});\n\t\tthis.paddles.forEach(paddle => {\n\t\t\tpaddle.position = 50;\n\t\t\tpaddle.resetPowerup();\n\t\t})\n\t\tthis.bots.forEach(b => {\n\t\t\tif (b) // To bypass the null elements in bots array\n\t\t\t\tb.reset();\n\t\t})\n\t}\n\n\tupdatePaddles() {\n\n\t\tlet keys = this.state.input.pressedKeys;\n\t\tlet b = this.bots;\n\n\t\tthis.paddles[0].update(this.state, b[0]? b[0].output:keys.red1); \n\t\tthis.paddles[1].update(this.state, b[1]? b[1].output:keys.red2);\n\t\tthis.paddles[2].update(this.state, b[2]? b[2].output:keys.red3); \n\t\tthis.paddles[3].update(this.state, b[3]? b[3].output:keys.blue1);\n\t\tthis.paddles[4].update(this.state, b[4]? b[4].output:keys.blue2); \n\t\tthis.paddles[5].update(this.state, b[5]? b[5].output:keys.blue3);\n\t\t\n\t\t\n\t}\n\n\tcreateParticle(args) {\n\t\tif (this.state.settings.trail)\n\t\t\tthis.particles.push(new Particle(args));\n\t}\n\n\tupdate() {\n\t\ttickTock = !tickTock;\n\t\t//var start = Date.now();\n\t\tif (this.state.gameState === GameState.GOAL_SCORED || this.state.gameState === GameState.PAUSED) {\n\t\t\t//setTimeout(this.update,1000/60);\n\t\t\treturn;\n\t\t}\n\t\tif(tickTock) {\n\t\t\twhile (this.particles[0] && this.particles[0].delete) {\n\t\t\t\tthis.particles.shift();\n\t\t\t}\n\t\n\t\t\tthis.particles.forEach(particle => particle.update())\n\t\t\tthis.createParticle({x:this.ball.x, y:this.ball.y, color:this.ball.color})\n\n\t\t}\n\t\t\n\t\tthis.paddles.forEach(paddle => {\n\t\t\t// The below statement is to convert an array of objects {x,y} to array of numbers  \n\t\t\tlet hitbox = paddle.getHitbox();\n\t\t\tlet hitboxArr = [];\n\t\t\thitbox.forEach(e => {\n\t\t\t\thitboxArr.push(e.x);\n\t\t\t\thitboxArr.push(e.y);\n\t\t\t})\n\n\t\t\t// Now hitboxArr contains the points in correct format [x1,y1,x2,y2...]\n\t\t\tif (intersects.circlePolygon(this.ball.x, this.ball.y,this.ball.radius,hitboxArr)) {\n\t\t\t\tlet newVelocity = paddle.getReflection(this.ball,this.state);\n\t\t\t\tthis.ball.dx = newVelocity.x;\n\t\t\t\tthis.ball.dy = newVelocity.y;\n\t\t\t\tthis.ball.x += this.ball.dx; this.ball.y += this.ball.dy;\n\t\t\t\tthis.createParticle((({x,y}) => ({x,y}))(this.ball))\n\t\t\t\tthis.ball.color = paddle.color;\n\t\t\t\tif (paddle.powerup === 3) {\n\t\t\t\t\tthis.ball.boomerMode = true;\n\t\t\t\t} else this.ball.boomerMode = false;\n\t\t\t}\n\t\t\t\n\t\t})\n\n\t\t// Collision between ball and walls\n\t\tthis.walls.forEach(wall => {\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, wall.x1, wall.y1, wall.x2, wall.y2)) {\n\t\t\t\tlet newVelocity = wall.getReflection(this.ball);\n\t\t\t\tthis.ball.dx = newVelocity.x;\n\t\t\t\tthis.ball.dy = newVelocity.y;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t})\n\n\t\t// Collision between ball and powerup \n\t\tthis.powerups.forEach((p,i) => {\n\t\t\tif (intersects.boxCircle(p.x-10,p.y-10,20,20,this.ball.x, this.ball.y, this.ball.radius)) {\n\t\t\t\tif(this.ball.color === \"red\") {\n\t\t\t\t\tthis.redPowerupHandler(Math.floor(randomBetween(1.0000001,3.99999999)));\n\t\t\t\t}\n\t\t\t\telse if(this.ball.color === \"blue\") {\n\t\t\t\t\tthis.bluePowerupHandler(Math.floor(randomBetween(1.0000001,3.99999999)));\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.powerups.splice(i,1);\n\t\t\t}\n\t\t})\n\n\t\t//\n\t\tthis.bots.forEach((bot,index) => {\n\t\t\tif (bot) {\n\t\t\t\tbot.calculateOutput(this.ball, this.paddles[index]);\n\t\t\t}\n\t\t});\n\n\t\tthis.ball.update(this.state);\n\t\n\t\tthis.updatePaddles();\n\n\t\t//console.log(this.particles.length)\n\t\tvar ctx = this.state.context;\n\t\t// Collision between ball and goals\n\t\tthis.goals.forEach(goal => {\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, goal.x1, goal.y1, goal.x2, goal.y2)) {\n\t\t\t\t// Update the score\n\t\t\t\tthis.draw(0,true);\n\t\t\t\tlet teamText;\n\t\t\t\tif (goal.teamId === Teams.RED) {\n\t\t\t\t\tthis.setState(state => ({blueScore: state.blueScore + 1}));\n\t\t\t\t\tteamText = \"Blue team\";\n\t\t\t\t\tctx.fillStyle = \"blue\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState(state => ({redScore: state.redScore + 1}));\n\t\t\t\t\tteamText = \"Red team\";\n\t\t\t\t\tctx.fillStyle = \"red\";\n\t\t\t\t}\n\n\t\t\t\tgoalTextStyle = \"30px Courier New\";\n\t\t\t\tgoalText = teamText+ \" has scored!\";\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tthis.setState({gameState: GameState.GOAL_SCORED});\n\t\t\t\t\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.resetPositions();\n\n\t\t\t\t\tthis.setState({gameState: GameState.RUNNING});\n\n\t\t\t\t},1500);\n\n\t\t\t}\n\t\t});\n\n\t}\n\n\tdraw(timeStamp , singleFrame = false) {\n\t\n\t\tvar start = Date.now();\n\t\tconst ctx = this.state.context;\n\t\tif (this.state.gameState === GameState.PAUSED) {\n\t\t\tctx.font = \"30px Courier New\";\n\t\t\tctx.fillStyle = \"black\";\n\t\t\tctx.fillText(\"PAUSED\", 200,250);\n\t\t\tif (singleFrame === false)animationFrameId = requestAnimationFrame(this.draw);\n\t\t\treturn;\n\t\t}\n\t\tif (this.state.gameState === GameState.GOAL_SCORED) {\n\t\t\tctx.font = \"30px Courier New\";\n\t\t\tctx.fillStyle = goalTextStyle;\n\t\t\tctx.fillText(goalText,80,250);\n\t\t\tif (singleFrame === false) animationFrameId = requestAnimationFrame(this.draw);\n\t\t\treturn;\n\t\t}\n\n\n\n\t\tctx.save();\n\t\tctx.fillStyle = \"#FFF\";\n\t\tctx.translate(0.5,0.5);\n\t\tctx.fillRect(0,0,500,500); // Erase the previous contents with this\n\n\t\t// var clear = Date.now();\n\t\t// if (clear-start > 1) console.log(\"Clear \",clear-start);\n\n\n\t\tthis.walls.forEach(wall => wall.draw(this.state));\n\t\tthis.goals.forEach(goal => \tgoal.draw(this.state));\n\t\tthis.playerCards.forEach(card => card.draw(this.state));\n\t\tthis.powerups.forEach(p => p.draw(this.state));\n\t\tthis.particles.forEach(p => p.draw(this.state));\n\n\t\t// var stat = Date.now();\n\t\t// if(stat-clear > 1) console.log(\"Static \",stat-clear)\n\t\n\t\tthis.paddles.forEach(p => p.draw(this.state));\n\t\tthis.ball.draw(this.state);\n\t\t\n\t\t// var moving = Date.now();\n\t\t// if (moving-stat > 1)\n\t\t// \tconsole.log(\"Paddle and ball \",moving-stat);\n\t\tif (this.state.settings.powerups) {\n\t\t\tif (this.powerupTimer > 0) this.powerupTimer--;\n\t\t\telse {\n\t\t\t\tthis.powerupTimer = randomBetween(200,300);\n\t\t\t\tif (this.powerups.length < 3) this.powerups.push(new PowerupToken({}));\n\t\t\t}\n\t\t}\n\n\n\t\tctx.restore();\n\t\tif (singleFrame === false) animationFrameId = requestAnimationFrame(this.draw);\n\t\t\n\t\t// var timeTaken = Date.now() - start;\n\t\t// if (timeTaken > 5) {\n\t\t// \tconsole.log(\"Total \",timeTaken);\n\t\t// }\n\n\t\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.state.input.unbindKeys();\n\t}\n\n\tchangeSettings(newSettings) {\n\t\tthis.setState({settings:newSettings});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div style = {backgroundStyling}>\n\n\t\t\t<div >\n\t\t\t\t<h1>Pong++</h1>\n\t\t\t\t\n\t\t\t\t<canvas ref = \"canvas\" width = \"501\" height = \"501\"/>\n\t\t\t\t<Scoreboard redScore = {this.state.redScore} blueScore = {this.state.blueScore}/>\n\n\t\t\t\t<center>\n\t\t\t\t\t<button id = \"1v1\" onClick = {this.reset1v1}>Reset 1v1</button> \n\t\t\t\t\t<button id = \"2v2\" onClick = {this.reset2v2}>Reset 2v2</button>\n\t\t\t\t\t<button id = \"3v3\" onClick = {this.reset3v3}>Reset 3v3</button>\n\t\t\t\t\t\n\t\t\t\t\t<button onClick = {this.resetPositions}>Reset Rally</button>\n\t\t\t\t<button onClick = {() => {\n\t\t\t\t\tthis.setState((state) => {\n\t\t\t\t\t\tif (state.gameState !== 2)\n\t\t\t\t\t\treturn {gameState: 1 - state.gameState}\n\t\t\t\t\t})\n\t\t\t\t}}>{this.state.gameState===0? \"Play\" : \"Pause\"}</button>\n\t\t\t\t<div>Multiplayer link <a href = \"http://139.162.22.70:4000\">here</a></div>\n\t\t\t\t</center>\n\t\t\t\t<Settings settings = {this.state.settings} changeHandler = {this.changeSettings}/>\n\n\t\t\t\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t\n}\n\n\n\nexport default App;\n","\nimport {distance2d ,rotateVector, reflection, angleBetween} from '../utils/2d';\nimport intersects from 'intersects';\nimport { randomBetween } from '../utils/math';\nimport { paddleSpeed, ballInitSpeed } from '../utils/constants';\n\n// Class that handles drawing the paddle\nexport default class Paddle {\n\tconstructor(args) {\n\n\t\t// x1,y1 and x2,y2 represent the starting and ending point where the paddle can slide in between\n\t\tthis.x1 = args.x1 || 0;\n\t\tthis.y1 = args.y1 || 0;\n\t\tthis.x2 = args.x2 || 0;\n\t\tthis.y2 = args.y2 || 0;\n\t\tthis.hidden = args.hidden;\n\t\tthis.color = args.color || \"#000\";\n\t\t\n\t\t// Depth and width are dimensions of the paddle\n\t\tthis.depth = args.depth || 10;\n\t\tthis.width = args.width || 50;\n\n\t\tthis.position = 50; // Percentage value showing how far the paddle is from its first endpoint to the other\n\t\t// Ex. 0 means it is at (x1,y1) , 100 means at (x2,y2), 50 means it is in between\n\t\tthis.paddleCenterX = (this.x1+this.x2)/2;\n\t\tthis.paddleCenterY = (this.y1+this.y2)/2;\n\n\t\tthis.slidinglength = distance2d(this.x1,this.y1,this.x2,this.y2);\n\t\tif (this.y1 === this.y2) {\n\t\t\tthis.tiltAngle = 90*Math.PI/180;\n\t\t} else {\n\t\t\tthis.tiltAngle = -Math.atan((this.x2-this.x1)/(this.y2-this.y1));\n\t\t}\n\n\t\t// The min and max value of position so that the ends of the paddle dont cross x1,y1 and x2,y2\n\t\t// Ex. if a paddle is 10px wide and the total length is 100px, min and max pos will be 5% and 95% \n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\n\t\tthis.powerup = 0;\t\n\t\tthis.powerupTimer = 0;\t\n\t\tthis.inputTicks = 0;\n\t}\n\n\tresetPowerup() {\n\t\n\t\tthis.powerup = 0;\n\t\tthis.width = 50;\n\t\tthis.powerupTimer = 0;\n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\n\t}\n\n\tbigPowerup() {\n\t\tthis.width = 100;\n\t\tthis.powerupTimer = 600;\n\t\tthis.powerup = 1;\n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\n\t}\n\n\tsmallPowerup() {\n\t\tthis.width = 25;\n\t\tthis.powerupTimer = 600;\n\t\tthis.powerup = 2;\n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\n\t}\n\n\tboomerPowerup() {\n\t\tthis.powerupTimer = 400;\n\t\tthis.powerup = 3;\n\n\t}\n\n\tgetReflection(ball,state) {\n\t\t\n\t\t// First, figure out which edge the ball collided with. \n\n\t\tlet hitbox = this.getHitbox();\n\t\tlet edge;\n\t\tfor (let i = 0; i < 4; i++) {\n\n\t\t\tedge = [hitbox[i].x, hitbox[i].y, hitbox[(i+1)%4].x, hitbox[(i+1)%4].y];\n\t\t\tif (intersects.circleLine(ball.x,ball.y,ball.radius, ...edge)) break;\n\n\t\t}\n\t\t// Get a vector parallel to the edge\n\t\tlet edgeVector = {x:edge[2] - edge[0], y: edge[3] - edge[1]}; \n\t\t// Rotate it by 90 degrees\n\t\tlet normalVector = rotateVector(edgeVector, Math.PI/2); \n\n\t\t// Make sure the normal is pointing outwards\n\t\tlet midpoint = {x:(edge[2]+edge[0])/2,y:(edge[3]+edge[1])/2};\n\t\tlet offset = {...midpoint};\n\t\toffset.x += normalVector.x*0.0001;\n\t\toffset.y += normalVector.y*0.0001;\n\n\t\tif (distance2d(this.paddleCenterX,this.paddleCenterY,midpoint.x,midpoint.y) > distance2d(this.paddleCenterX,this.paddleCenterY,offset.x,offset.y)) {\n\t\t\n\t\t\tnormalVector.x *= -1;\n\t\t\tnormalVector.y *= -1;\n\t\t}\n\n\t\t// Normalize the normal lol\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\n\t\tnormalVector.x /= magnitude;\n\t\tnormalVector.y /= magnitude;\n\n\t\t\n\t\tlet ref = reflection({x: ball.dx, y: ball.dy}, normalVector, 1.0);\n\t\t// Add the vector from paddle to ball, to increase the ball speed on each hit\n\t\tref.x += (ball.x - this.paddleCenterX)*state.settings.accelFactor*(ballInitSpeed/3);\n\t\tref.y += (ball.y - this.paddleCenterY)*state.settings.accelFactor*(ballInitSpeed/3);\n\n\t\tlet paddleVelocity = {x: this.paddleCenterX - this.previousCenterX, y: this.paddleCenterY-this.previousCenterY};\n\t\tif (paddleVelocity.x === 0 && paddleVelocity.y === 0) {\n\t\t\treturn ref;\n\t\t}\n\n\t\t// Deflect the ball further based on the movvement of the paddle\n\t\tref = rotateVector(ref, angleBetween(ref,paddleVelocity)*state.settings.defFactor)//*Math.sqrt(paddleVelocity.x**2 + paddleVelocity.y**2));\n\n\t\tif (state.settings.curveBall) {\n\t\t\tlet angle = angleBetween(paddleVelocity,{x:ball.dx, y:ball.dy});\n\t\t\tball.dr += angle/20 + randomBetween(-0.1,0.1);\n\t\t}\n\t\treturn ref;\n\t}\n\n\tupdate(state,input){\n\t\tif (this.hidden) return;\n\t\tif (input.left || input.right) {\n\t\t\tthis.inputTicks++;\n\t\t} else {\n\t\t\tthis.inputTicks = 1;\n\t\t}\n\n\t\tif (this.powerupTimer > 0) {\n\t\t\tthis.powerupTimer--;\n\t\t\t\n\t\t}\n\t\tif (this.powerupTimer <= 0 && this.powerup !== 0) {\n\t\t\t\n\t\t\tthis.resetPowerup();\n\t\t}\n\t\tvar delta = paddleSpeed;\n\t\t\n\t\tif (state.settings.accel) {\n\t\t\tif (this.inputTicks < 5) {\n\t\t\t\tdelta = paddleSpeed*0.2;\n\t\t\t}\n\t\t}\n\n\n\t\tif (input.right) {\n\t\t\tthis.position+=delta;\n\t\t}\n\n\t\tif (input.left) {\n\t\t\tthis.position-=delta;\n\t\t}\n\t\n\n\t\t// Stop it from going beyond the limit\n\t\tif (this.position > this.maxPosition) this.position = this.maxPosition;\n\t\tif (this.position < this.minPosition) this.position = this.minPosition;\n\n\t\t// Get x and y position of paddle center\n\t\t//this.position = Math.round(this.position);\n\n\t\t// Holds the previous coordinates of the paddle in the previous frame\n\t\t// Used to see if the paddle is moving\n\t\tthis.previousCenterX = this.paddleCenterX;\n\t\tthis.previousCenterY = this.paddleCenterY;\n\n\t\tthis.paddleCenterX = (this.x1*(1-this.position/100) + this.x2*this.position/100);\n\t\tthis.paddleCenterY = (this.y1*(1-this.position/100) + this.y2*this.position/100);\n\n\t\t\n\t}\n\n\tdraw(state) {\n\t\tif (this.hidden) return;\n\t\tvar ctx = state.context;\n\t\tctx.save();\n\t\tctx.translate(0.5,0.5);\n\t\tctx.strokeStyle = \"#000000\";\n\n\t\tctx.fillStyle = \"#888888\";\n\t\tif (this.powerup === 3) ctx.fillStyle = \"#fe0\";\n\t\tctx.translate(this.paddleCenterX, this.paddleCenterY);\n\t\tctx.rotate(this.tiltAngle );\n\t\t// Draw paddle with fillRect()\n\t\tctx.fillRect(-this.depth/2,-this.width/2,this.depth,this.width);\n\t\t\n\t\tctx.restore();\n\t}\n\n\t\n\n\tgetHitbox() {\n\n\t\tlet sw = this.width/2;\n\t\tlet sd = this.depth/2;\n\t\tvar points = [\n\t\t\t{x:sd,y:sw},{x:sd,y:-sw},{x:-sd,y:-sw},{x:-sd,y:sw}\n\t\t];\n\n\t\t/*\n\n\t\tOrder of points \n\n\t    3      2\n\t\t +----+\n\t\t |    |\n\t\t |    |\n\t\t |    |\n\t\t |    |\n\t\t +----+\n        4      1\n\t\t*/\n\n\n\t\treturn points.map((e) => {\n\t\t\tlet {x:u,y:v} = rotateVector(e,this.tiltAngle);\n\t\t\n\t\t\treturn {x:u + this.paddleCenterX,y: v + this.paddleCenterY}\n\t\t});\n\t\n\t}\n\n\tgetInnerWall() {\n\t\n\t\tlet offset = rotateVector({\n\t\t\tx: this.depth/2,\n\t\t\ty: 0\n\t\t},this.tiltAngle);\n\t\tif (distance2d(this.x1,this.y1,250,250) < distance2d(this.x1+offset.x, this.y1+offset.y,250,250)) {\n\t\t\t\n\t\t\toffset.x *= -1; offset.y *= -1;\n\t\t}\n\t\treturn {\n\t\t\tx1: this.x1 + offset.x,\n\t\t\ty1: this.y1 + offset.y,\n\t\t\tx2: this.x2 + offset.x,\n\t\t\ty2: this.y2 + offset.y\n\t\t}\n\t\t\n\t}\n}","import { rotateVector } from \"../utils/2d\";\nimport {lerp} from '../utils/math';\nimport { updateRate , updateTime , ballMinSpeed} from \"../utils/constants\";\n\n\nclass Ball {\n\tconstructor(args) {\n        this.x = args.x; \n        this.y = args.y;\n        this.dx = args.dx;\n        this.dy = args.dy; // changes the direction of movement  1 means up and -1 means down &  left or right \n        this.radius = 10;\n        this.delete = false; // Whether the ball should be deleted in the next frame\n        this.r = 0;\n        this.dr = 0;\n        this.color = \"#000\";\n        this.boomerMode = false;\n        this.prevX = args.x;\n        this.prevY = args.y;\n        this.lastUpdateTime = Date.now();\n\n    }\n\n    draw(state) {\n\n        var currentTime = Date.now(); \n        var timeSinceLastUpdate = currentTime - this.lastUpdateTime;\n        var {x:renderX,y:renderY} = lerp({x:this.prevX,y:this.prevY},{x:this.x,y:this.y}, timeSinceLastUpdate/updateTime); \n        // var renderX = this.x;\n        // var renderY = this.y;\n\n\n       \n        var ctx = state.context;\n        ctx.save();\n        ctx.translate(renderX + 0.5,renderY + 0.5);\n        ctx.rotate(this.r);\n\n        if (this.color === 'red') ctx.fillStyle = \"#800\";\n        else if (this.color === 'blue') ctx.fillStyle = \"#008\";\n        else ctx.fillStyle = \"#888\";\n       \n        ctx.beginPath();\n        ctx.arc(0,0,this.radius,this.radius,0,Math.PI*2);\n        ctx.fill();\n        ctx.closePath();\n\n        if (state.settings.curveball) \n        {\n            ctx.strokeStyle = \"#fff\";\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(-10,0);\n            ctx.lineTo(10,0);\n            ctx.stroke();\n            ctx.closePath();\n            \n        }\n        ctx.restore();\n    }\n\n    update(state) {\n\n        this.prevX = this.x;\n        this.prevY = this.y;\n\n        this.x += this.dx;\n        this.y += this.dy;\n        this.r += this.dr;\n        if (this.boomerMode) {\n            this.x += this.dx*0.5;\n            this.y += this.dy*0.5;\n        }\n        if( Math.sqrt(this.dx ** 2 + this.dy ** 2) < ballMinSpeed ) {\n            this.dx *= 1.2; this.dy *= 1.2;\n        }\n        if (state.settings.curveball) {\n            ({x: this.dx, y:this.dy} = rotateVector({x:this.dx, y:this.dy}, this.dr/10));\n        }\n\n\n        if (Date.now() - this.lastUpdateTime < 0) {\n            console.log(Date.now() - this.lastUpdateTime)\n        }\n\n        this.lastUpdateTime = Date.now();\n    \n    }\n    \n}\n\nexport default Ball;","import React from 'react'; \n\n\nconst boxStyle = { \n\n    // marginLeft: \"50%\",\n\t// height:20,\n\tdisplay: \"inline-block\",\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n    textAlign : \"center\",\n    padding : 0,    \n    border :  \"0.1em solid black\",\n    width : 20, \n\n}; \n\n\n\nexport default class Key extends React.Component {   \n\n    render () { \n\n        return ( \n            <div style = {{...boxStyle, background: this.props.color, color: \"white\"}}>\n            \n            {this.props.content}\n            </div>\n        );\n\n\n       // return ({Instruction});\n    }\n}\n\n","import React from 'react';\nimport {Button} from 'react-bootstrap';\nimport Key from './Instructions.js';\n\nconst dropDown = {\n\tposition: \"fixed\",\n\tbottom:0,\n\tleft: 0\n}\n\nconst dropDownContent= {\n \nposition: \"absolute\",\n  left:10,bottom:50,\n\n  width:300,\n  minHeight:150,\n  border:\"2px solid blue\",\n  background: \"\t#00FF00\",\n\tzIndex: \"1\",\n}\n\n\n\n\nconst buttonStyle = {\n\twidth:\"100px\",\n\tpadding:\"2px\",\n\tborder:\"2px solid blue\",\n\tmargin:\"2px\",\n\ttextAlign: \"center\",\n\tfontSize : 15,\n\tborderRadius:\"2\",\n\tuserSelect:\"none\",\n\tposition: \"\",\n\t\n\n}\n\n\n\n\nconst mainStyle = {\n\theight:50,\n\twidth:100,\n\tmargin:\"auto\",\n\tpadding:10,\n\tfloat : \"center\"\n}\n\nconst leftStyle = {\n\twidth: \"50%\",\n\theight: 50,\n\tfloat: \"left\",\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\tboxShadow:\"0px 0px 0px 11px red inset\",\n\t\n\n}\n\nconst leftNumberStyle = {\n\tmargin : 0,\n\theight: 20,\n\tfloat: \"left\",\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\n}\n\nconst rightStyle = {\n\tmarginLeft: \"50%\",\n\theight:50,\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\tboxShadow:\"0px 0px 0px 11px blue inset\"\n}\n\n\n\nconst rightNumberStyle = {\n\tmargin : 10,\n\theight:20,\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tjustifyContent: \"right\",\n\t// boxShadow:\"0px 0px 0px 10px blue inset\",\n\tfloat : \"center\"\n}\n\nconst pauseButton = {\n\tmargin:\"auto\",\n\theight:\"30px\",\n\twidth:\"30px\",\n\n}\n\n// const instructions = { \n// \tmargin : \"auto\",\n// \theight:40,\n// \twidth: 400,\n// \tpadding:40,\n// \talignItems: \"left\",\n// \tjustifyContent: \"left\",\n// \tfloat: \"left\",\n\n// }\n\n\n\nexport class Scoreboard extends React.Component {\n\n\tstate = { display : false}\n\n\thandleOnClick = () => { \n\t\tthis.setState((state) => ({display: !state.display}));\n\t\t// return (\n\t\t// \t<div>\n\t\t// \t{userInfo}\n\t\t// \t</div>\n\t\t// );\n\t}\n\n\n\trender() {\n\n\n\t\t\n\n\n\t\tconst userInfo = (\n\n\t\t\t<div style = { dropDownContent}>\n\t\t\t\n\t\t\t<h2 align = \"centre\">{'\tControls '}</h2>\n\t\t\t\t\t\n\t\t\t\t\t<div align = \"left\">\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\" , margin : 10}}>\n\t\t\t\t\t<div >\n\t\t\t\t\t\tRed 1 \n\t\t\t\t\t</div>\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"1\" color = \"red\"/>   \n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"2\" color = \"red\"/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\", margin : 10}}>\n\t\t\t\t\t<div >\n\t\t\t\t\t\t Red 2 \n\t\t\t\t\t</div>\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"S\" color = \"red\"/>   \n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"D\" color = \"red\"/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\n\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\" , margin  : 10}}>\n\t\t\t\t\t<div >\n\t\t\t\t\t\t Red 3 \n\t\t\t\t\t</div>\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"V\" color = \"red\"/>   \n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"B\" color = \"red\"/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\" , margin  : 10}}>\n\t\t\t\t\t\n\t\t\t\t\t</span>\n\n\n\n\t\t\t\t\t\n\n\t\t\t\t\n\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\", margin : 10}}>\n\t\t\t\t\t<div >\n\t\t\t\t\t\t Blue 1  \n\t\t\t\t\t</div>\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\n\t\t\t\t\t\t<Key  color = \"blue\" content = \"-\"/>   \n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"=\" color = \"blue\"/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\", margin : 10}}>\n\t\t\t\t\t<div >\n\t\t\t\t\t\t Blue 2  \n\t\t\t\t\t</div>\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"L\" color = \"blue\"/>   \n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\n\t\t\t\t\t\t<Key  content = \";\" color = \"blue\"/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\n\n\t\t\t\t\t<span style = { {display : \"inline-block\" , float : \" centre\", margin : 10}}>\n\t\t\t\t\t<div >\n\t\t\t\t\t\t Blue 3 \n\t\t\t\t\t</div>\n\t\t\t\t\t\t<span style = {leftNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"N\" color = \"blue\"/>   \n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span style = {rightNumberStyle}>\n\t\t\t\t\t\t<Key  content = \"M\" color = \"blue\"/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\n\n\t\t\t\t\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tTo play, select your desired settings, and press one of the reset buttons to choose the number of players. Controls are shown above.\n\t\t\t\t\t</div><hr/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tWhen playing with powerups, hit the ball over a green square to collect a powerup. NEW: It will be activated upon contact\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div>\n\n\t\t\t\t\t</div>\n\t\t\t </div>\n\t\t\t\n\t\t\t );\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style = {mainStyle}>\n\t\t\t\t\t<div id = \"red\" style = {leftStyle}>{this.props.redScore}</div>\n\t\t\t\t\t<div id = \"blue\" style = {rightStyle}>{this.props.blueScore}</div>\n\t\t\t\t</div>\n\t\t\t\n\n\t\t\t\t<div style = {dropDown} >\n\t\t\t\t{this.state.display? userInfo:\"\"}\t\n\t\t\t\t<div>\n\t\t\t\t\t<Button style = {buttonStyle} variant = \"primary\" onClick = {this.handleOnClick}>\n\t\t\t\t\t\tInstructions\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import { rotateVector ,distance2d, reflection} from \"../utils/2d\";\r\n\r\n\r\n\r\n\r\nexport class Wall {\r\n\r\n\tconstructor(args) {\r\n\t\tthis.x1 = args.x1;\r\n\t\tthis.y1 = args.y1;\r\n\t\tthis.x2 = args.x2;\r\n\t\tthis.y2 = args.y2;\r\n\r\n\t}\r\n\r\n\tgetReflection(ball) {\r\n\t\tlet parallelVector = {x: this.x2-this.x1, y: this.y2-this.y1};\r\n\t\tlet normalVector = rotateVector(parallelVector, Math.PI/2);\r\n\r\n\t\t// Make sure normalVector is pointing inward\r\n\t\tlet midpoint = {x: (this.x1+this.x2)/2, y: (this.y1+this.y2)/2};\r\n\t\tlet offset = {...midpoint};\r\n\t\toffset.x += normalVector.x*0.001;\r\n\t\toffset.y += normalVector.y*0.001;\r\n\r\n\t\tif (distance2d(ball.x,ball.y,midpoint.x,midpoint.y) < distance2d(ball.x,ball.y,offset.x,offset.y)) {\r\n\t\t\r\n\t\t\tnormalVector.x *= -1;\r\n\t\t\tnormalVector.y *= -1;\r\n\t\t}\r\n\r\n\t\t// Normalize the normal lol\r\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\r\n\t\tnormalVector.x /= magnitude;\r\n\t\tnormalVector.y /= magnitude;\r\n\t\t\r\n\r\n\t\treturn reflection({x:ball.dx, y:ball.dy}, normalVector,1.0);\r\n\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\tvar ctx  = state.context;\r\n\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n}","export class Goal {\r\n\tconstructor(args) {\r\n\t\tthis.x1 = args.x1;\r\n\t\tthis.y1 = args.y1;\r\n\t\tthis.x2 = args.x2;\r\n\t\tthis.y2 = args.y2;\r\n\r\n\t\tthis.color = args.color || \"red\";\r\n\t\tthis.teamId = args.teamId || 0;\t\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\tvar ctx  = state.context;\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = this.color;\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\trender(state) {\r\n\t\tvar ctx  = state.context;\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = this.color;\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n}","\nimport { distance2d } from '../utils/2d';\nimport {checkIntersection} from 'line-intersect';\n\nexport class Bot {\n\tconstructor(args) {\n\t\tthis.walls = args.walls; // All other paddle ranges are treated as walls\n\t\tthis.output = {left:0,right:0};\n\t\t\n\t\t\n\t\tthis.debug = args.debug; \n\t\tthis.curve = args.curve;\n\t\tthis.difficulty = Number(args.difficulty) || 3;\n\n\t\tif (this.difficulty === 3) this.lookAhead = 10;\n\t\telse this.lookAhead = 2;\n\n\t\t\n\t\t\n\t}\n\n\treset() {\n\t\tthis.output = {left:0,right:0};\n\t}\n\n\tcalculateOutput(ball,paddle) {\n\t\tif (this.difficulty >= 2) this.highDifficultyCalc(ball,paddle);\n\t\telse this.lowDifficultyCalc(ball,paddle);\n\t}\n\n\tlowDifficultyCalc(ball,paddle) {\n\t\tlet current = {x:paddle.paddleCenterX, y:paddle.paddleCenterY};\n\t\tlet dRight = {\n\t\t\tx: current.x+(paddle.x2 - paddle.x1)/100,\n\t\t\ty: current.y+(paddle.y2 - paddle.y1)/100\n\t\t}\n\t\tif (distance2d(dRight.x, dRight.y, ball.x,ball.y) < \n\t\tdistance2d(current.x,current.y, ball.x,ball.y)) {\n\t\t\tthis.output = {left:0, right:1};\n\t\t} else {\n\t\t\tthis.output = {left:1,right:0};\n\t\t}\n\t}\n\n\thighDifficultyCalc(ball, paddle) {\n\n\t\t// Waittimer is used to prevent unnecessary calculations when the ball is moving \n\t\t// Calculation of the ball's trajectory is only done\n\t\t// once after every impact off another paddle\n\t\t//console.log(this.waitTimer);\n\t\t\n\t\t\n\t\n\t\tlet piw = paddle.getInnerWall();\n\t\t\n\t\t// Temporary object to simulate the ball\n\t\tlet b = {\n\t\t\tx:ball.x,\n\t\t\ty:ball.y,\n\t\t\tdx:ball.dx,\n\t\t\tdy:ball.dy\n\t\t};\n\n\t\tlet bouncesLeft = this.lookAhead;\n\t\twhile (bouncesLeft > 0) {\n\t\t\tlet bouncedFlag = false;\n\n\t\t\t// b1 is ball's position after 1000 ticks\n\t\t\t// b2 is the current ball position\n\t\t\t// We need to specity b1 like this becuase line-intersection requires 2 line-segments \n\t\t\tlet b1 = {x : b.x + 1000*b.dx, y: b.y + 1000*b.dy};\n\t\t\tlet b2 = {x : b.x , y: b.y};\n\n\n\t\t\t\n\n\t\t\tfor (let i = 0; i < this.walls.length; i++) {\n\t\t\t\tlet wall = this.walls[i];\n\t\n\t\t\t\tlet intersection = checkIntersection(wall.x1,wall.y1,wall.x2,wall.y2,b1.x,b1.y,b2.x,b2.y);\n\n\t\t\t\tif (intersection.type === \"intersecting\") { // That means the ball will hit wall\n\t\t\t\t\tb.x = intersection.point.x;\tb.y = intersection.point.y;\n\t\t\t\t\tb.x -= b.dx; b.y -= b.dy; // getReflection assumes that the ball is just about to intersect the wall\n\t\t\t\t\tlet nextVelocity = wall.getReflection(b);\n\t\t\t\t\tb.x += b.dx; b.y += b.dy;\n\t\t\t\t\tb.dx = nextVelocity.x; b.dy = nextVelocity.y;\n\t\t\t\t\tb.x += b.dx; b.y += b.dy;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tbouncesLeft--;\n\t\t\t\t\tbouncedFlag = true;\n\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t}\n\n\t\t\tif (bouncedFlag) continue;\n\t\t\t\n\t\t\t// Now check intersection with the paddle\n\n\n\t\t\t\n\t\t\tlet intersection = checkIntersection(piw.x1,piw.y1,piw.x2,piw.y2, b1.x, b1.y, b2.x, b2.y);\n\t\t\tif (intersection.type === 'intersecting') {\n\t\t\t\t// Intersection with the paddle has been found\n\t\t\t\t// Now we need to output either left, right, or no move at all\n\t\t\t\tlet current = {x:paddle.paddleCenterX, y:paddle.paddleCenterY};\n\t\t\t\t// Update waitTimer if this is the first bounce\n\t\n\t\t\t\t\n\n\t\t\t\t// If the paddle is close enough, do nothing\n\t\t\t\tif (distance2d(current.x, current.y, intersection.point.x, intersection.point.y) < 8) {\n\t\t\t\t\tthis.output = {left:0,right:0};\n\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// position after moving right one tick\n\t\t\t\tlet dRight = {\n\t\t\t\t\tx: current.x+(paddle.x2 - paddle.x1)/100,\n\t\t\t\t\ty: current.y+(paddle.y2 - paddle.y1)/100\n\t\t\t\t}\n\n\t\t\t\tif (distance2d(dRight.x, dRight.y, intersection.point.x,intersection.point.y) < \n\t\t\t\tdistance2d(current.x,current.y, intersection.point.x, intersection.point.y)) {\n\t\t\t\t\t// Right is the way to go\n\t\t\t\t\tthis.output = {left:0, right:1};\n\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t// Go left\n\t\t\t\t\tthis.output = {left:1,right:0};\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbouncesLeft--;\n\t\t}\n\t\t\n\t}\n}","import React from 'react';\n\nconst dropdown = {\n\tposition: \"fixed\",\n\t\n\n\tbottom:0,\n\tright: 0\n\n}\n\nconst categoryHeader = {\n\tbackground: \"#AAAAFF\",\n\twidth:\"90%\",\n\tmargin:\"auto\",\n\tmarginTop:\"2px\",\n}\n\nconst dropdownContent= {\n \n  \tposition: \"absolute\",\n\tright:10,bottom:30,\n\n\twidth:300,\n\tminHeight:150,\n\tborder:\"2px solid blue\",\n\tbackground: \"#8888ff\",\n\t\n\n  \tzIndex: \"1\",\n}\n\nconst buttonStyle = {\n\twidth:\"100px\",\n\tpadding:\"2px\",\n\tborder:\"2px solid blue\",\n\tmargin:\"2px\",\n\ttextAlign: \"center\",\n\tborderRadius:\"2\",\n\tuserSelect:\"none\",\n\tposition: \"fixed\",\n\tbottom:0,\n\tright: 0,\n\tfontSize : 15\n\n\n}\n\nconst defaultSettings = {\n\tAI:[false,false,false,false,false,false],\n\tcurveball:false,\n\tpowerups:false,\n\taccel:false,\n\ttrail:true,\n\tdefFactor:0.2,\n\taccelFactor:0.04\n}\n\nexport default class Settings extends React.Component {\n\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\topened:false,\n\t\t}\n\n\t\tthis.toggleDropdown = this.toggleDropdown.bind(this);\n\t\tthis.AICheckboxChange = this.AICheckboxChange.bind(this);\n\t\tthis.curveballChange = this.curveballChange.bind(this);\n\t\tthis.powerupsChange = this.powerupsChange.bind(this);\n\t\tthis.accelChange = this.accelChange.bind(this);\n\t\tthis.trailChange = this.trailChange.bind(this);\n\t\n\t}\n\n\ttoggleDropdown() {\n\t\n\t\tthis.setState((state) => ({opened: !state.opened}));\n\t}\n\n\tAICheckboxChange(e) {\n\t\tlet newSettings = this.props.settings;\n\t\tnewSettings.AI[e.target.id] = !newSettings.AI[e.target.id];\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\n\n\tcurveballChange(e) {\n\t\tlet newSettings = this.props.settings;\n\t\tnewSettings.curveball = e.target.checked;\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\tpowerupsChange(e) {\n\t\tlet newSettings = this.props.settings;\n\t\tnewSettings.powerups = e.target.checked;\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\taccelChange(e) {\n\t\tlet newSettings = this.props.settings;\n\t\tnewSettings.accel = e.target.checked;\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\ttrailChange(e) {\n\t\tlet newSettings = this.props.settings;\n\t\tnewSettings.trail = e.target.checked;\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\tdefChange(e) {\n\t\tlet newSettings = this.props.settings;\n\t\tnewSettings.defFactor = e.target.value;\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\tafChange(e) {\n\t\tlet newSettings = this.props.settings;\n\t\tnewSettings.accelFactor = e.target.value;\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\tresetAdv() {\n\t\tlet newSettings = this.props.settings;\n\t\tnewSettings.accelFactor = defaultSettings.accelFactor;\n\t\tnewSettings.defFactor = defaultSettings.defFactor;\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\tdiffChange(e) {\n\t\tlet newSettings = this.props.settings;\n\t\t\n\t\tnewSettings.AIdiff = e.target.value;\n\t\tthis.props.changeHandler(newSettings);\n\t}\n\n\n\n\n\trender() {\n\n\n\t\tvar AICheckboxArray = [];\n\t\tconst names = [\"Red 1\", \"Red 2\", \"Red 3\", \"Blue 1\",\"Blue 2\", \"Blue 3\"];\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tlet e = (\n\t\t\t<div  key = {i} style = {{width:45,display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t<div style = {{color:(names[i][0] === 'R'?\"red\":\"blue\")}}>{names[i]}</div>\n\t\t\t\t<input type = \"checkbox\" id = {i.toString()} checked = {this.props.settings.AI[i]} onChange = {this.AICheckboxChange}></input>\n\t\t\t</div>)\n\n\t\t\tAICheckboxArray.push(e);\n\t\t}\n\n\t\tvar curveballCheckbox = <input type = \"checkbox\" checked = {this.props.settings.curveball} onChange = {this.curveballChange}></input>\n\t\tvar powerupsCheckbox =  <input type = \"checkbox\" checked = {this.props.settings.powerups} onChange = {this.powerupsChange}></input>\n\t\tvar accelCheckbox = <input type = \"checkbox\" checked = {this.props.settings.accel} onChange = {this.accelChange}></input>\n\t\tvar trailCheckbox = <input type = \"checkbox\" checked = {this.props.settings.trail} onChange = {this.trailChange}></input>\n\t\tvar defSlider  = <input type = \"range\" value = {this.props.settings.defFactor} min = \"0\" max = \"0.5\" step = \"0.05\" onChange = {this.defChange.bind(this)}></input>\n\t\tvar afSlider  = <input type = \"range\" value = {this.props.settings.accelFactor} min = \"0\" max = \"0.2\" step = \"0.01\" onChange = {this.afChange.bind(this)}></input>\n\t\tvar diffSlider  = <input type = \"range\" value = {this.props.settings.AIdiff} min = \"1\" max = \"3\" step = \"1\" onChange = {this.diffChange.bind(this)}></input>\n\n\n\n\t\tconst content = (\n\t\t\t<div style = {dropdownContent}>\n\t\t\t\t<div style = {categoryHeader}>\n\t\t\t\t\t<div>Enable AI </div>\n\t\t\t\t\t<div style = {{display:\"flex\" , flexDirection:\"row\"}}>\n\t\t\t\t\t\t{AICheckboxArray}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>AI Difficulty {diffSlider}</div> \n\t\t\t\t\t<div style = {{fontSize:\"13px\"}}>AI Settings are applied when you reset game</div>\n\t\t\t\t\t<div>Curveball {curveballCheckbox}</div>\n\t\t\t\t\t<div>Powerups {powerupsCheckbox}</div>\n\t\t\t\t\t<div>Input Acceleration {accelCheckbox}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div style = {categoryHeader}>\n\t\t\t\t\t<div style = {{fontSize:\"16px\"}}>Graphics Settings</div>\n\t\t\t\t\t<div>Ball Trail {trailCheckbox}</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div style = {categoryHeader}>\n\t\t\t\t\t<div style = {{fontSize:\"16px\"}}>Advanced</div>\n\t\t\t\t\t<div>Deflection Factor {defSlider}</div>\n\t\t\t\t\t<div style = {{fontSize:\"13px\"}}>Ball's direction change when hit by a moving paddle</div>\n\n\t\t\t\t\t<div>Ball Acceleration{afSlider}</div>\n\t\t\t\t\t<div style = {{fontSize:\"13px\"}}>How much the ball speeds up at every hit</div>\n\t\t\t\t\t<button style = {{margin:2}} onClick = {this.resetAdv.bind(this)}>Reset Advanced Settings</button>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\n\t\treturn(\n\t\t\t<div style = {dropdown}>\n\t\t\t\t{this.state.opened? content:\"\"}\n\t\t\t\t<button style = {buttonStyle} onClick = {this.toggleDropdown}>Settings {this.state.opened? \"↓\":\"↑\"} </button>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}","\r\nexport class Particle {\r\n\tconstructor(args) {\r\n\t\tthis.x = args.x;\r\n\t\tthis.y = args.y;\r\n\t\tthis.lifetime = 40;\r\n\t\tthis.delete = false;\r\n\t\tthis.color = args.color;\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\t\r\n\t\tvar ctx = state.context;\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.beginPath();\r\n\t\t//ctx.arc(this.x, this.y, this.lifetime/20, 0 , Math.PI*2);\r\n\t\tvar edgeLength = this.lifetime/10;\r\n\t\tctx.fillRect(this.x-edgeLength/2, this.y-edgeLength/2,edgeLength,edgeLength);\r\n\t\tctx.fill();\r\n\t\tctx.closePath();\r\n\r\n\t\t\r\n\t}\r\n\r\n\tupdate() {\r\n\t\t\r\n\t\tthis.lifetime--;\r\n\t\t\tif (this.lifetime <= 0) {\r\n\t\t\tthis.delete = true;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n}","\r\n//import big from '../big.png';\r\nimport { randomBetween } from '../utils/math';\r\n\r\nexport class PowerupToken {\r\n\t\r\n\tconstructor(args) {\r\n\t\tthis.x = args.x || randomBetween(200,300);\r\n\t\tthis.y = args.y || randomBetween(200,300);\r\n\t\tthis.delete = false;\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\tvar ctx = state.context;\r\n\t\tctx.fillStyle = \"#0a0\";\r\n\t\tctx.fillRect(this.x - 10, this.y-10, 20, 20);\r\n\t}\r\n\r\n\t\r\n\r\n}","export class PlayerCard {\r\n\tconstructor(args) {\r\n\t\tthis.playerName = args.playerName || \"Untitled\";\r\n\t\tthis.color = args.color || \"red\";\r\n\t\tthis.left = args.left; this.right = args.right;\r\n\t\tthis.x = args.x; this.y = args.y; // top left corner\r\n\t\tthis.AI = args.AI || false;\r\n\r\n\t}\r\n\r\n\tdraw(state) {\r\n\t\tconst ctx = state.context;\r\n\t\t//ctx.save();\r\n\t\tctx.textBaseline = \"top\"; \r\n\t\tctx.font = \"14px sans-serif\";\r\n\t\tvar boxwidth = ctx.measureText(this.playerName).width + 4;\r\n\t\tif (boxwidth < 42) boxwidth = 42;\t\r\n\t\tlet x = this.x - boxwidth/2;\r\n\t\tlet y = this.y - 17; \r\n\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.rect(x, y, boxwidth, 34);\r\n\t\tctx.strokeStyle = (this.color === \"red\"? \"red\":\"blue\");\r\n\t\tctx.stroke();\r\n\t\tctx.fillStyle = (this.color === \"red\"? \"#f88\":\"#88f\"); ctx.fill();\r\n\t\tctx.fillStyle = \"black\";\r\n\t\tctx.strokeStyle = \"black\";\r\n\t\tctx.fillText(this.playerName, x + 2,y + 2);\r\n\t\tctx.closePath();\r\n\t\tctx.font = \"14px Courier New\";\r\n\t\tif (this.AI) {\r\n\t\t\tctx.fillText(\"A.I.\",x + 2, y + 2 + 14 + 2);\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x + 7, y + 18) // 2 + 14 + 2\r\n\t\t\tctx.lineTo(x + 2, y + 18 + 7);\r\n\t\t\tctx.lineTo(x + 7, y + 18+14);\r\n\t\t\tctx.fill();\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x + 35, y + 18);\r\n\t\t\tctx.lineTo(x + 40, y + 18 + 7);\r\n\t\t\tctx.lineTo(x + 35, y + 18+14);\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillText(this.left,x + 9, y + 18);\r\n\t\t\tctx.fillText(this.right,x + 24, y + 18);\r\n\t\t}\r\n\t\r\n\t\r\n\t\t//ctx.restore();\r\n\r\n\t}\r\n}","import 'react-app-polyfill/ie11';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}