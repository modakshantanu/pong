{"version":3,"sources":["InputManager.js","utils/2d.js","gameObjects/Paddle.js","gameObjects/Ball.js","components/Scoreboard.js","gameObjects/Wall.js","gameObjects/Goal.js","utils/math.js","App.js","serviceWorker.js","index.js"],"names":["KEY","InputManager","Object","classCallCheck","this","pressedKeys","red1","right","left","red2","red3","blue1","blue2","blue3","window","addEventListener","handleKeys","bind","removeEventListener","value","e","keys","keyCode","distance2d","x1","y1","x2","y2","Math","sqrt","pow","rotateVector","vect","angle","x","y","cos","sin","reflection","normal","arguments","length","undefined","dotProduct","result","Paddle","args","depth","width","position","slidinglength","tiltAngle","PI","atan","console","log","minPosition","maxPosition","ball","edge","hitbox","getHitbox","i","intersects","circleLine","apply","radius","concat","toConsumableArray","normalVector","midpoint","offset","objectSpread","paddleCenterX","paddleCenterY","magnitude","ref","dx","dy","paddleVelocity","previousCenterX","previousCenterY","vect1","vect2","mag1","mag2","acos","angleBetween","state","input","ctx","context","round","save","translate","strokeStyle","fillStyle","rotate","fillRect","restore","_this","sw","sd","map","_rotateVector","u","v","Ball","delete","beginPath","arc","fill","closePath","mainStyle","height","margin","padding","leftStyle","float","display","alignItems","justifyContent","boxShadow","rightStyle","marginLeft","Scoreboard","_React$Component","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","react_default","a","createElement","style","id","props","redScore","blueScore","React","Component","Wall","moveTo","lineTo","stroke","Goal","color","teamId","randomBetween","b","random","animationFrameId","GameState","STOPPED","RUNNING","GOAL_SCORED","Teams","App","call","gameState","gameMode","draw","assertThisInitialized","reset1v1","reset2v2","reset3v3","resetPositions","renderPaddles","bindKeys","refs","canvas","getContext","setState","requestAnimationFrame","walls","goals","paddles","g1","g2","push","v1","v2","_this$paddles","initialBallVelocity","forEach","paddle","render","_this2","wall","goal","hitboxArr","flatMap","element","circlePolygon","newVelocity","getReflection","teamText","font","fillText","cancelAnimationFrame","setTimeout","unbindKeys","Scoreboard_Scoreboard","onClick","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uQAAMA,EACD,GADCA,EAED,GAFCA,EAGF,GAHEA,EAIF,GAJEA,EAKF,GALEA,EAMF,GANEA,EAOF,GAPEA,EAQF,GAREA,EASF,GATEA,EAUM,IAVNA,EAWE,IAXFA,EAYE,IAGcC,aAWrB,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACdG,KAAKC,YAAc,GACnBD,KAAKC,YAAYC,KAAO,CAACC,MAAM,EAAEC,KAAK,GACtCJ,KAAKC,YAAYI,KAAO,CAACF,MAAM,EAAEC,KAAK,GACtCJ,KAAKC,YAAYK,KAAO,CAACH,MAAM,EAAEC,KAAK,GACtCJ,KAAKC,YAAYM,MAAQ,CAACJ,MAAM,EAAEC,KAAK,GACvCJ,KAAKC,YAAYO,MAAQ,CAACL,MAAM,EAAEC,KAAK,GACvCJ,KAAKC,YAAYQ,MAAQ,CAACN,MAAM,EAAEC,KAAK,0DAfvCM,OAAOC,iBAAiB,QAAWX,KAAKY,WAAWC,KAAKb,MAAM,IAC9DU,OAAOC,iBAAiB,UAAWX,KAAKY,WAAWC,KAAKb,MAAM,yCAI9DU,OAAOI,oBAAoB,QAASd,KAAKY,YACzCF,OAAOI,oBAAoB,UAAWd,KAAKY,gEAcjCG,EAAOC,GACjB,IAAIC,EAAOjB,KAAKC,YAChB,OAAQe,EAAEE,SACT,KAAKtB,EACJqB,EAAKf,KAAKE,KAAOW,EACjB,MACD,KAAKnB,EACJqB,EAAKf,KAAKC,MAAQY,EAClB,MACD,KAAKnB,EACJqB,EAAKZ,KAAKD,KAAOW,EACjB,MACD,KAAKnB,EACJqB,EAAKZ,KAAKF,MAAQY,EAClB,MACD,KAAKnB,EACJqB,EAAKX,KAAKF,KAAOW,EACjB,MACD,KAAKnB,EACJqB,EAAKX,KAAKH,MAAQY,EAClB,MACD,KAAKnB,EACJqB,EAAKR,MAAML,KAAOW,EAClB,MACD,KAAKnB,EACJqB,EAAKR,MAAMN,MAAQY,EACnB,MACD,KAAKnB,EACJqB,EAAKT,MAAMJ,KAAOW,EAClB,MACD,KAAKnB,EACJqB,EAAKT,MAAML,MAAQY,EACnB,MACD,KAAKnB,EACJqB,EAAKV,MAAMH,KAAOW,EAElB,MACD,KAAKnB,EACJqB,EAAKV,MAAMJ,MAAQY,EAIpBf,KAAKC,YAAcgB,mCC9Ef,SAASE,EAAWC,EAAGC,EAAGC,EAAGC,GACnC,OAAOC,KAAKC,KAAKD,KAAAE,IAACN,EAAGE,EAAK,GAATE,KAAAE,IAAcL,EAAGE,EAAK,IAGjC,SAASI,EAAaC,EAAMC,GAAO,IACpCC,EAAOF,EAAPE,EAAEC,EAAKH,EAALG,EACP,MAAO,CACND,EAAGN,KAAKQ,IAAIH,GAAOC,EAAIN,KAAKS,IAAIJ,GAAOE,EACvCA,EAAGP,KAAKS,IAAIJ,GAAOC,EAAIN,KAAKQ,IAAIH,GAAOE,GAOlC,SAASG,EAAWN,EAAKO,GAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,OACvDG,EAAaJ,EAAOL,EAAEF,EAAKE,EAAIK,EAAOJ,EAAEH,EAAKG,EAC7CS,EAASZ,EAGb,OAFAY,EAAOV,GAAK,EAAES,EAAWJ,EAAOL,EAChCU,EAAOT,GAAK,EAAEQ,EAAWJ,EAAOJ,EACzBS,sBCjBaC,aACpB,SAAAA,EAAYC,GAAO5C,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,GAGlBzC,KAAKoB,GAAKsB,EAAKtB,IAAM,EACrBpB,KAAKqB,GAAKqB,EAAKrB,IAAM,EACrBrB,KAAKsB,GAAKoB,EAAKpB,IAAM,EACrBtB,KAAKuB,GAAKmB,EAAKnB,IAAM,EAKrBvB,KAAK2C,MAAQD,EAAKC,OAAS,GAC3B3C,KAAK4C,MAAQF,EAAKE,OAAS,GAE3B5C,KAAK6C,SAAW,GAGhB7C,KAAK8C,cAAgB3B,EAAWnB,KAAKoB,GAAGpB,KAAKqB,GAAGrB,KAAKsB,GAAGtB,KAAKuB,IACzDvB,KAAKqB,KAAOrB,KAAKuB,GACpBvB,KAAK+C,UAAY,GAAGvB,KAAKwB,GAAG,IAE5BhD,KAAK+C,WAAavB,KAAKyB,MAAMjD,KAAKsB,GAAGtB,KAAKoB,KAAKpB,KAAKuB,GAAGvB,KAAKqB,KAGzDrB,KAAK8C,cAAgB9C,KAAK4C,OAC7BM,QAAQC,IAAI,oDAKbnD,KAAKoD,YAAmBpD,KAAK4C,MAAM5C,KAAK8C,cAArB,IAAoC,EACvD9C,KAAKqD,YAAc,KAAK,EAAIrD,KAAK4C,MAAM5C,KAAK8C,cAAc,6DAI7CQ,GAKb,IAFA,IACIC,EADAC,EAASxD,KAAKyD,YAETC,EAAI,EAAGA,EAAI,IAEnBH,EAAO,CAACC,EAAOE,GAAG5B,EAAG0B,EAAOE,GAAG3B,EAAGyB,GAAQE,EAAE,GAAG,GAAG5B,EAAG0B,GAAQE,EAAE,GAAG,GAAG3B,IACjE4B,IAAWC,WAAXC,MAAAF,IAAU,CAAYL,EAAKxB,EAAEwB,EAAKvB,EAAEuB,EAAKQ,QAA/BC,OAAAjE,OAAAkE,EAAA,EAAAlE,CAA0CyD,MAHlCG,KAOvB,IAEIO,EAAetC,EAFF,CAACG,EAAEyB,EAAK,GAAKA,EAAK,GAAIxB,EAAGwB,EAAK,GAAKA,EAAK,IAEb/B,KAAKwB,GAAG,GAGhDkB,EAAW,CAACpC,GAAGyB,EAAK,GAAGA,EAAK,IAAI,EAAExB,GAAGwB,EAAK,GAAGA,EAAK,IAAI,GACtDY,EAAMrE,OAAAsE,EAAA,EAAAtE,CAAA,GAAOoE,GACjBC,EAAOrC,GAAoB,KAAfmC,EAAanC,EACzBqC,EAAOpC,GAAoB,KAAfkC,EAAalC,EAErBZ,EAAWnB,KAAKqE,cAAcrE,KAAKsE,cAAcJ,EAASpC,EAAEoC,EAASnC,GAAKZ,EAAWnB,KAAKqE,cAAcrE,KAAKsE,cAAcH,EAAOrC,EAAEqC,EAAOpC,KAE9IkC,EAAanC,IAAM,EACnBmC,EAAalC,IAAM,GAIpB,IAAIwC,EAAY/C,KAAKC,KAAKD,KAAAE,IAAAuC,EAAanC,EAAG,GAAhBN,KAAAE,IAAoBuC,EAAalC,EAAG,IAC9DkC,EAAanC,GAAKyC,EAClBN,EAAalC,GAAKwC,EAGlB,IAAIC,EAAMtC,EAAW,CAACJ,EAAGwB,EAAKmB,GAAI1C,EAAGuB,EAAKoB,IAAKT,EAAc,GAE7DO,EAAI1C,GAAmC,KAA7BwB,EAAKxB,EAAI9B,KAAKqE,eACxBG,EAAIzC,GAAmC,KAA7BuB,EAAKvB,EAAI/B,KAAKsE,eAExB,IAAIK,EAAiB,CAAC7C,EAAG9B,KAAKqE,cAAgBrE,KAAK4E,gBAAiB7C,EAAG/B,KAAKsE,cAActE,KAAK6E,iBAC/F,OAAyB,IAArBF,EAAe7C,GAAgC,IAArB6C,EAAe5C,EACrCyC,EAIRA,EAAM7C,EAAa6C,EAAsC,GD7DpD,SAAsBM,EAAOC,GACnC,IAAIC,EAAOxD,KAAKC,KAAKD,KAAAE,IAAAoD,EAAMhD,EAAK,GAAXN,KAAAE,IAAeoD,EAAM/C,EAAK,IAC3CkD,EAAOzD,KAAKC,KAAKD,KAAAE,IAAAqD,EAAMjD,EAAK,GAAXN,KAAAE,IAAeqD,EAAMhD,EAAK,IAC3CQ,EAAauC,EAAMhD,EAAEiD,EAAMjD,EAAIgD,EAAM/C,EAAEgD,EAAMhD,EACjD,OAAOP,KAAK0D,KAAK3C,GAAYyC,EAAKC,ICyDTE,CAAaX,EAAIG,mCAInCS,EAAMC,GACZ,IAAIC,EAAMF,EAAMG,QAKZF,EAAMlF,OACTH,KAAK6C,WAGFwC,EAAMjF,MACTJ,KAAK6C,WAIF7C,KAAK6C,SAAW7C,KAAKqD,cAAarD,KAAK6C,SAAW7C,KAAKqD,aACvDrD,KAAK6C,SAAW7C,KAAKoD,cAAapD,KAAK6C,SAAW7C,KAAKoD,aAG3DpD,KAAK6C,SAAWrB,KAAKgE,MAAMxF,KAAK6C,UAIhC7C,KAAK4E,gBAAkB5E,KAAKqE,cAC5BrE,KAAK6E,gBAAkB7E,KAAKsE,cAE5BtE,KAAKqE,cAAiBrE,KAAKoB,IAAI,EAAEpB,KAAK6C,SAAS,KAAO7C,KAAKsB,GAAGtB,KAAK6C,SAAS,IAC5E7C,KAAKsE,cAAiBtE,KAAKqB,IAAI,EAAErB,KAAK6C,SAAS,KAAO7C,KAAKuB,GAAGvB,KAAK6C,SAAS,IAI5EyC,EAAIG,OACJH,EAAII,UAAU,GAAI,IAClBJ,EAAIK,YAAc,UAClBL,EAAIM,UAAY,UAEhBN,EAAII,UAAU1F,KAAKqE,cAAerE,KAAKsE,eACvCgB,EAAIO,OAAO7F,KAAK+C,WAEhBuC,EAAIQ,UAAU9F,KAAK2C,MAAM,GAAG3C,KAAK4C,MAAM,EAAE5C,KAAK2C,MAAM3C,KAAK4C,OAEzD0C,EAAIS,8CAKO,IAAAC,EAAAhG,KAEPiG,EAAKjG,KAAK4C,MAAM,EAChBsD,EAAKlG,KAAK2C,MAAM,EAoBpB,MAnBa,CACZ,CAACb,EAAEoE,EAAGnE,EAAEkE,GAAI,CAACnE,EAAEoE,EAAGnE,GAAGkE,GAAI,CAACnE,GAAGoE,EAAGnE,GAAGkE,GAAI,CAACnE,GAAGoE,EAAGnE,EAAEkE,IAkBnCE,IAAI,SAACnF,GAAM,IAAAoF,EACRzE,EAAaX,EAAEgF,EAAKjD,WAA7BsD,EADiBD,EACnBtE,EAAMwE,EADaF,EACfrE,EAET,MAAO,CAACD,EAAEuE,EAAIL,EAAK3B,cAActC,EAAGuE,EAAIN,EAAK1B,0BCzIjCiC,aAxBd,SAAAA,EAAY7D,GAAO5C,OAAAC,EAAA,EAAAD,CAAAE,KAAAuG,GACZvG,KAAK8B,EAAIY,EAAKZ,EACd9B,KAAK+B,EAAIW,EAAKX,EACd/B,KAAKyE,GAAK/B,EAAK+B,GACfzE,KAAK0E,GAAKhC,EAAKgC,GACf1E,KAAK8D,OAAS,GACd9D,KAAKwG,QAAS,qDAIXpB,GAEHpF,KAAK8B,GAAK9B,KAAKyE,GACfzE,KAAK+B,GAAK/B,KAAK0E,GAEf,IAAIY,EAAMF,EAAMG,QAChBD,EAAImB,YACJnB,EAAIoB,IAAI1G,KAAK8B,EAAG9B,KAAK+B,EAAG/B,KAAK8D,OAAQ,EAAW,EAARtC,KAAKwB,IAC7CsC,EAAIM,UAAY,UAChBN,EAAIqB,OACJrB,EAAIsB,qBClBNC,EAAY,CACjBC,OAAO,GACPlE,MAAM,IACNmE,OAAO,OACPC,QAAQ,IAGHC,EAAY,CACjBrE,MAAO,MACPkE,OAAQ,GACRI,MAAO,OACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,UAAU,8BAKLC,EAAa,CAClBC,WAAY,MACZV,OAAO,GACPK,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,UAAU,+BAOEG,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA3H,OAAAC,EAAA,EAAAD,CAAAE,KAAAyH,GAAA3H,OAAA6H,EAAA,EAAA7H,CAAAE,KAAAF,OAAA8H,EAAA,EAAA9H,CAAA2H,GAAA5D,MAAA7D,KAAAoC,YAAA,OAAAtC,OAAA+H,EAAA,EAAA/H,CAAA2H,EAAAC,GAAA5H,OAAAgI,EAAA,EAAAhI,CAAA2H,EAAA,EAAAM,IAAA,SAAAhH,MAAA,WAGE,OACCiH,EAAAC,EAAAC,cAAA,OAAKC,MAAStB,GACbmB,EAAAC,EAAAC,cAAA,OAAKE,GAAK,MAAMD,MAASlB,GAAYjH,KAAKqI,MAAMC,UAChDN,EAAAC,EAAAC,cAAA,OAAKE,GAAK,OAAOD,MAASZ,GAAavH,KAAKqI,MAAME,gBANtDd,EAAA,CAAgCe,IAAMC,WC9BzBC,EAAb,WAEC,SAAAA,EAAYhG,GAAO5C,OAAAC,EAAA,EAAAD,CAAAE,KAAA0I,GAClB1I,KAAKoB,GAAKsB,EAAKtB,GACfpB,KAAKqB,GAAKqB,EAAKrB,GACfrB,KAAKsB,GAAKoB,EAAKpB,GACftB,KAAKuB,GAAKmB,EAAKnB,GANjB,OAAAzB,OAAAgI,EAAA,EAAAhI,CAAA4I,EAAA,EAAAX,IAAA,gBAAAhH,MAAA,SAUeuC,GACb,IACIW,EAAetC,EADE,CAACG,EAAG9B,KAAKsB,GAAGtB,KAAKoB,GAAIW,EAAG/B,KAAKuB,GAAGvB,KAAKqB,IACVG,KAAKwB,GAAG,GAGpDkB,EAAW,CAACpC,GAAI9B,KAAKoB,GAAGpB,KAAKsB,IAAI,EAAGS,GAAI/B,KAAKqB,GAAGrB,KAAKuB,IAAI,GACzD4C,EAAMrE,OAAAsE,EAAA,EAAAtE,CAAA,GAAOoE,GACjBC,EAAOrC,GAAoB,KAAfmC,EAAanC,EACzBqC,EAAOpC,GAAoB,KAAfkC,EAAalC,EAErBZ,EAAWmC,EAAKxB,EAAEwB,EAAKvB,EAAEmC,EAASpC,EAAEoC,EAASnC,GAAKZ,EAAWmC,EAAKxB,EAAEwB,EAAKvB,EAAEoC,EAAOrC,EAAEqC,EAAOpC,KAE9FkC,EAAanC,IAAM,EACnBmC,EAAalC,IAAM,GAIpB,IAAIwC,EAAY/C,KAAKC,KAAKD,KAAAE,IAAAuC,EAAanC,EAAG,GAAhBN,KAAAE,IAAoBuC,EAAalC,EAAG,IAK9D,OAJAkC,EAAanC,GAAKyC,EAClBN,EAAalC,GAAKwC,EAGXrC,EAAW,CAACJ,EAAEwB,EAAKmB,GAAI1C,EAAEuB,EAAKoB,IAAKT,EAAa,KAhCzD,CAAA8D,IAAA,SAAAhH,MAAA,SAoCQqE,GACN,IAAIE,EAAOF,EAAMG,QAEjBD,EAAIG,OACJH,EAAIK,YAAc,OAClBL,EAAImB,YACJnB,EAAIqD,OAAO3I,KAAKoB,GAAGpB,KAAKqB,IACxBiE,EAAIsD,OAAO5I,KAAKsB,GAAGtB,KAAKuB,IACxB+D,EAAIuD,SACJvD,EAAIS,cA7CN2C,EAAA,GCLaI,EAAb,WACC,SAAAA,EAAYpG,GAAO5C,OAAAC,EAAA,EAAAD,CAAAE,KAAA8I,GAClB9I,KAAKoB,GAAKsB,EAAKtB,GACfpB,KAAKqB,GAAKqB,EAAKrB,GACfrB,KAAKsB,GAAKoB,EAAKpB,GACftB,KAAKuB,GAAKmB,EAAKnB,GAEfvB,KAAK+I,MAAQrG,EAAKqG,MAClB/I,KAAKgJ,OAAStG,EAAKsG,OARrB,OAAAlJ,OAAAgI,EAAA,EAAAhI,CAAAgJ,EAAA,EAAAf,IAAA,SAAAhH,MAAA,SAWQqE,GACN,IAAIE,EAAOF,EAAMG,QACjBD,EAAIG,OACJH,EAAIK,YAAc3F,KAAK+I,MACvBzD,EAAImB,YACJnB,EAAIqD,OAAO3I,KAAKoB,GAAGpB,KAAKqB,IACxBiE,EAAIsD,OAAO5I,KAAKsB,GAAGtB,KAAKuB,IACxB+D,EAAIuD,SACJvD,EAAIS,cAnBN+C,EAAA,GCAO,SAASG,EAAchB,EAAEiB,GAC/B,OAAOjB,EAAIzG,KAAK2H,UAAUD,EAAEjB,GCa7B,IAWImB,EAXEC,EAAY,CACjBC,QAAQ,EACRC,QAAQ,EACRC,YAAY,GAGPC,EACD,EADCA,EAEA,EAkRSC,cA1Qd,SAAAA,EAAYrB,GAAO,IAAArC,EAAA,OAAAlG,OAAAC,EAAA,EAAAD,CAAAE,KAAA0J,IAClB1D,EAAAlG,OAAA6H,EAAA,EAAA7H,CAAAE,KAAAF,OAAA8H,EAAA,EAAA9H,CAAA4J,GAAAC,KAAA3J,KAAMqI,KAEDjD,MAAQ,CACZC,MAAO,IAAIxF,EACX0F,QAAS,KACTqE,UAAWP,EAAUE,QACrBjB,SAAS,EACTC,UAAU,EACVsB,SAAS,GAIV7D,EAAK8D,KAAO9D,EAAK8D,KAAKjJ,KAAVf,OAAAiK,EAAA,EAAAjK,CAAAkG,IACZA,EAAKgE,SAAWhE,EAAKgE,SAASnJ,KAAdf,OAAAiK,EAAA,EAAAjK,CAAAkG,IAChBA,EAAKiE,SAAWjE,EAAKiE,SAASpJ,KAAdf,OAAAiK,EAAA,EAAAjK,CAAAkG,IAChBA,EAAKkE,SAAWlE,EAAKkE,SAASrJ,KAAdf,OAAAiK,EAAA,EAAAjK,CAAAkG,IAChBA,EAAKmE,eAAiBnE,EAAKmE,eAAetJ,KAApBf,OAAAiK,EAAA,EAAAjK,CAAAkG,IACtBA,EAAKoE,cAAgBpE,EAAKoE,cAAcvJ,KAAnBf,OAAAiK,EAAA,EAAAjK,CAAAkG,IAlBHA,mFAuBlBhG,KAAKoF,MAAMC,MAAMgF,WAEjB,IAAM9E,EAAUvF,KAAKsK,KAAKC,OAAOC,WAAW,MAC5CxK,KAAKyK,SAAS,CAAClF,QAAQA,IACvBvF,KAAKgK,WACLZ,EAAmBsB,sBAAsB1K,KAAK8J,yCAK9C9J,KAAKyK,SAAS,CAACnC,SAAS,EAAEC,UAAU,EAAEqB,UAAUP,EAAUE,QAAQM,SAAS,IAC3E7J,KAAK2K,MAAQ,CACZ,IAAIjC,EAAK,CAACtH,GAAG,EAAEC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAChC,IAAImH,EAAK,CAACtH,GAAG,EAAEC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAEjCvB,KAAK4K,MAAQ,CACZ,IAAI9B,EAAK,CAAC1H,GAAG,EAAEC,GAAG,IAAIC,GAAG,EAAEC,GAAG,IAAIwH,MAAM,MAAMC,OAAOS,IACrD,IAAIX,EAAK,CAAC1H,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIwH,MAAM,OAAOC,OAAOS,KAG3DzJ,KAAK6K,QAAU,CACd,IAAIpI,EAAO,CAACrB,GAAG,GAAIC,GAAG,IAAKC,GAAG,GAAIC,GAAG,MACrC,IAAIkB,EAAO,CAACrB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAErCvB,KAAKsD,KAAO,IAAIiD,EAAK,CAACzE,EAAE,IAAKC,EAAG,MAChC/B,KAAKmK,oDAILnK,KAAKyK,SAAS,CAACnC,SAAS,EAAEC,UAAU,EAAEqB,UAAUP,EAAUE,QAAQM,SAAS,IAC3E7J,KAAK2K,MAAQ,GACb3K,KAAK4K,MAAQ,CACZ,IAAI9B,EAAK,CAAC1H,GAAG,EAAEC,GAAG,IAAIC,GAAG,IAAIC,GAAG,EAAEwH,MAAM,MAAMC,OAAOS,IACrD,IAAIX,EAAK,CAAC1H,GAAG,IAAIC,GAAG,EAAEC,GAAG,IAAIC,GAAG,IAAIwH,MAAM,MAAMC,OAAOS,IACvD,IAAIX,EAAK,CAAC1H,GAAG,EAAEC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIwH,MAAM,OAAOC,OAAOS,IACxD,IAAIX,EAAK,CAAC1H,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIwH,MAAM,OAAOC,OAAOS,KAE3DzJ,KAAK6K,QAAU,CACd,IAAIpI,EAAO,CAACrB,GAAG,GAAGC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACnC,IAAIkB,EAAO,CAACrB,GAAG,IAAIC,GAAG,GAAGC,GAAG,IAAIC,GAAG,MACnC,IAAIkB,EAAO,CAACrB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACpC,IAAIkB,EAAO,CAACrB,GAAG,GAAGC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAEpCvB,KAAKsD,KAAO,IAAIiD,EAAK,CAACzE,EAAE,IAAKC,EAAG,MAChC/B,KAAKmK,oDAILnK,KAAKyK,SAAS,CAACnC,SAAS,EAAEC,UAAU,EAAEqB,UAAUP,EAAUE,QAAQM,SAAS,IAC3E7J,KAAK2K,MAAQ,GAEb3K,KAAK4K,MAAQ,GACb,IAAK,IAAIlH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3B,IAAIoH,EAAKnJ,EAAa,CAACG,EAAE,IAAIC,EAAE,GAAG2B,EAAElC,KAAKwB,GAAG,GACxC+H,EAAKpJ,EAAa,CAACG,EAAE,IAAIC,EAAE,IAAI2B,EAAE,GAAGlC,KAAKwB,GAAG,GAC5C+F,EAAQrF,EAAI,EAAG,OAAO,MACtBsF,EAAmB,QAAVD,EAAiBU,EAAWA,EACzCzJ,KAAK4K,MAAMI,KAAK,IAAIlC,EAAK,CAAC1H,GAAG0J,EAAGhJ,EAAI,IAAKT,GAAGyJ,EAAG/I,EAAI,IAAKT,GAAGyJ,EAAGjJ,EAAI,IAAKP,GAAGwJ,EAAGhJ,EAAI,IAAKgH,MAAMA,EAAOC,OAAOA,KAE3GhJ,KAAK6K,QAAU,GACf,IAAK,IAAInH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3B,IAAIuH,EAAKtJ,EAAa,CAACG,GAAG,IAAIC,EAAE,GAAG2B,EAAElC,KAAKwB,GAAG,GACzCkI,EAAKvJ,EAAa,CAACG,GAAG,IAAIC,EAAE,IAAI2B,EAAE,GAAGlC,KAAKwB,GAAG,GAGjDhD,KAAK6K,QAAQG,KAAK,IAAIvI,EAAO,CAACrB,GAAI6J,EAAGnJ,EAAI,IAAIT,GAAG4J,EAAGlJ,EAAI,IAAKT,GAAG4J,EAAGpJ,EAAI,IAAKP,GAAG2J,EAAGnJ,EAAI,OAEtF,IAAK,IAAI2B,EAAI,EAAGA,EAAI,EAAGA,IAAK,KAAAyH,EACPnL,KAAK6K,QAAQ,EAAEnH,GAA9BtC,EADsB+J,EACtB/J,GAAGC,EADmB8J,EACnB9J,GAAGC,EADgB6J,EAChB7J,GAAGC,EADa4J,EACb5J,GACdvB,KAAK6K,QAAQG,KAAK,IAAIvI,EAAO,CAACrB,GAAGA,EAAIC,GAAI,IAAIA,EAAIC,GAAGA,EAAIC,GAAG,IAAIA,KAKhEvB,KAAKsD,KAAO,IAAIiD,EAAK,CAACzE,EAAE,IAAKC,EAAG,MAChC/B,KAAKmK,0DAKL,IACIiB,EAAsBzJ,EAAa,CAACG,EAAE,EAAEC,EAAE,GADJ,IAAxB/B,KAAKoF,MAAMyE,SAAgBZ,GAAezH,KAAKwB,GAAG,EAAGxB,KAAKwB,GAAG,GAAIiG,EAAc,EAAE,EAAEzH,KAAKwB,KAI9E,IAAxBhD,KAAKoF,MAAMyE,UAAkBrI,KAAK2H,SAAW,KAChDiC,EAAoBtJ,IAAM,EAC1BsJ,EAAoBrJ,IAAM,GAE3B/B,KAAKsD,KAAO,IAAIiD,EAAK,CAACzE,EAAG,IAAKC,EAAG,IAAI0C,GAAI2G,EAAoBtJ,EAAG4C,GAAI0G,EAAoBrJ,IACxF/B,KAAK6K,QAAQQ,QAAQ,SAAAC,GAAM,OAAIA,EAAOzI,SAAW,6CAOjD,IAAI5B,EAAOjB,KAAKoF,MAAMC,MAAMpF,YAE5B,OAAOD,KAAKoF,MAAMyE,UACjB,KAAK,EACJ7J,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKf,MACxCF,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKV,OACxC,MAED,KAAK,EACJP,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKf,MACxCF,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKZ,MACxCL,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKV,OACxCP,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKT,OACxC,MAED,KAAK,EACJR,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKf,MACxCF,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKZ,MACxCL,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKX,MACxCN,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKV,OACxCP,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKT,OACxCR,KAAK6K,QAAQ,GAAGU,OAAOvL,KAAKoF,MAAOnE,EAAKR,OACxC,MAGD,QACCyC,QAAQC,IAAI,uCAIR,IAAAqI,EAAAxL,KACAsF,EAAMtF,KAAKoF,MAAMG,QACvBD,EAAIG,OACJH,EAAIM,UAAY,OAChBN,EAAII,UAAU,GAAI,IAClBJ,EAAIQ,SAAS,EAAE,EAAE,IAAI,KAGrB9F,KAAK2K,MAAMU,QAAQ,SAAAI,GAClBA,EAAKF,OAAOC,EAAKpG,SAElBpF,KAAK4K,MAAMS,QAAQ,SAAAK,GAClBA,EAAKH,OAAOC,EAAKpG,SAIlBpF,KAAK6K,QAAQQ,QAAQ,SAAAC,GAEpB,IAAIK,EAAYL,EAAO7H,YAAYmI,QAAQ,SAAAC,GAC1C,MAAO,CAACA,EAAQ/J,EAAE+J,EAAQ9J,KAG3B,GAAI4B,IAAWmI,cAAcN,EAAKlI,KAAKxB,EAAG0J,EAAKlI,KAAKvB,EAAEyJ,EAAKlI,KAAKQ,OAAO6H,GAAY,CAClF,IAAII,EAAcT,EAAOU,cAAcR,EAAKlI,MAC5CkI,EAAKlI,KAAKmB,GAAKsH,EAAYjK,EAC3B0J,EAAKlI,KAAKoB,GAAKqH,EAAYhK,EAC3ByJ,EAAKlI,KAAKxB,GAAK0J,EAAKlI,KAAKmB,GACzB+G,EAAKlI,KAAKvB,GAAKyJ,EAAKlI,KAAKoB,MAM3B1E,KAAK2K,MAAMU,QAAQ,SAAAI,GAClB,GAAI9H,IAAWC,WAAW4H,EAAKlI,KAAKxB,EAAG0J,EAAKlI,KAAKvB,EAAGyJ,EAAKlI,KAAKQ,OAAQ2H,EAAKrK,GAAIqK,EAAKpK,GAAIoK,EAAKnK,GAAImK,EAAKlK,IAAK,CAC1G,IAAIwK,EAAcN,EAAKO,cAAcR,EAAKlI,MAC1CkI,EAAKlI,KAAKmB,GAAKsH,EAAYjK,EAC3B0J,EAAKlI,KAAKoB,GAAKqH,EAAYhK,EAC3ByJ,EAAKlI,KAAKxB,GAAK0J,EAAKlI,KAAKmB,GACzB+G,EAAKlI,KAAKvB,GAAKyJ,EAAKlI,KAAKoB,MAQ3B1E,KAAK4K,MAAMS,QAAQ,SAAAK,GAGjB,IAAIO,EAFDtI,IAAWC,WAAW4H,EAAKlI,KAAKxB,EAAG0J,EAAKlI,KAAKvB,EAAGyJ,EAAKlI,KAAKQ,OAAQ4H,EAAKtK,GAAIsK,EAAKrK,GAAIqK,EAAKpK,GAAIoK,EAAKnK,MAGjGmK,EAAK1C,SAAWS,GACnB+B,EAAKf,SAAS,SAAArF,GAAK,MAAK,CAACmD,UAAWnD,EAAMmD,UAAY,KACtD0D,EAAW,YACX3G,EAAIM,UAAY,SAEhB4F,EAAKf,SAAS,SAAArF,GAAK,MAAK,CAACkD,SAAUlD,EAAMkD,SAAW,KACpD2D,EAAW,WACX3G,EAAIM,UAAY,OAEjBN,EAAI4G,KAAO,mBAEX5G,EAAI6G,SAASF,EAAU,eAAe,GAAG,KAEzCG,qBAAqBhD,GACrBoC,EAAKf,SAAS,CAACb,UAAWP,EAAUG,iBAQtCxJ,KAAKoK,gBACLpK,KAAKsD,KAAKiI,OAAOvL,KAAKoF,OAEtBE,EAAIS,UACA/F,KAAKoF,MAAMwE,YAAcP,EAAUE,QACtCH,EAAmBsB,sBAAsB1K,KAAK8J,MACtC9J,KAAKoF,MAAMwE,YAAcP,EAAUG,cAC3C4C,qBAAqBhD,GAErBiD,WAAW,WACVjD,EAAmBsB,sBAAsBc,EAAK1B,MAC9C0B,EAAKrB,iBACLqB,EAAKf,SAAS,CAACb,UAAWP,EAAUE,WACnC,sDAOHvJ,KAAKoF,MAAMC,MAAMiH,8CAGjB,OACCtE,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,oBAEAF,EAAAC,EAAAC,cAAA,UAAQ1D,IAAM,SAAS5B,MAAQ,MAAMkE,OAAS,QAC9CkB,EAAAC,EAAAC,cAACqE,EAAD,CAAYjE,SAAYtI,KAAKoF,MAAMkD,SAAUC,UAAavI,KAAKoF,MAAMmD,YACrEP,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,UAAQE,GAAK,MAAMoE,QAAWxM,KAAKgK,UAAnC,OACAhC,EAAAC,EAAAC,cAAA,UAAQE,GAAK,MAAMoE,QAAWxM,KAAKiK,UAAnC,OACAjC,EAAAC,EAAAC,cAAA,UAAQE,GAAK,MAAMoE,QAAWxM,KAAKkK,UAAnC,gBAjQazB,aChBEgE,QACW,cAA7B/L,OAAOgM,SAASC,UAEe,UAA7BjM,OAAOgM,SAASC,UAEhBjM,OAAOgM,SAASC,SAASC,MACvB,2DCZNC,IAAStB,OAAOvD,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.182d4a1e.chunk.js","sourcesContent":["const KEY = {\r\n\tONE:49, // Red 1 left/up\r\n\tTWO:50, // Red 1 right/down\r\n\tS: 83, // Red 2 left \r\n\tD: 68, // Red 2 right\r\n\tV: 86, // Red 3 left\r\n\tB: 66, // Red 3 right\r\n\tN: 78, // Blue 3 left\r\n\tM: 77, // Blue 3 right\r\n\tL: 76, // Blue 2 left\r\n\tSEMICOLON: 186, // Blue 2 right\r\n\tMINUS: 189, // Blue 1 left/down\r\n\tEQUAL: 187, // Blue 1 right\r\n };\r\n\r\n export default class InputManager {\r\n\r\n\tbindKeys() {\r\n\t\twindow.addEventListener('keyup',   this.handleKeys.bind(this, false));\r\n\t\twindow.addEventListener('keydown', this.handleKeys.bind(this, true));\r\n\t}\r\n\t\r\n\tunbindKeys() {\r\n\t\twindow.removeEventListener('keyup', this.handleKeys);\r\n\t\twindow.removeEventListener('keydown', this.handleKeys);\r\n\t}\r\n\tconstructor() {\r\n\t\tthis.pressedKeys = {};\r\n\t\tthis.pressedKeys.red1 = {right:0,left:0};\r\n\t\tthis.pressedKeys.red2 = {right:0,left:0};\r\n\t\tthis.pressedKeys.red3 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue1 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue2 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue3 = {right:0,left:0};\r\n\t}\r\n\r\n\t// The pressedKeys object holds either a 0 or a 1 for each key whether it is pressed or not\r\n\t// It is always updated in real time once the eventListener is added\r\n\thandleKeys(value, e){\r\n\t\tlet keys = this.pressedKeys;\r\n\t\tswitch (e.keyCode) {\r\n\t\t\tcase KEY.ONE:\r\n\t\t\t\tkeys.red1.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.TWO:\r\n\t\t\t\tkeys.red1.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.S:\r\n\t\t\t\tkeys.red2.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.D:\r\n\t\t\t\tkeys.red2.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.V:\r\n\t\t\t\tkeys.red3.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.B:\r\n\t\t\t\tkeys.red3.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.N:\r\n\t\t\t\tkeys.blue3.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.M:\r\n\t\t\t\tkeys.blue3.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.L:\r\n\t\t\t\tkeys.blue2.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.SEMICOLON:\r\n\t\t\t\tkeys.blue2.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.MINUS:\r\n\t\t\t\tkeys.blue1.left = value;\r\n\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.EQUAL:\r\n\t\t\t\tkeys.blue1.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t }\r\n\t\t this.pressedKeys = keys;\r\n\t }\r\n\t \r\n }","// A file containing simple functions for 2d grid related calculations\r\n\r\nexport function distance2d(x1,y1,x2,y2) {\r\n\treturn Math.sqrt((x1-x2)**2 + (y1-y2)**2);\r\n}\r\n\r\nexport function rotateVector(vect, angle) {\r\n\tlet {x,y} = vect;\r\n\treturn {\r\n\t\tx: Math.cos(angle)*x - Math.sin(angle)*y,\r\n\t\ty: Math.sin(angle)*x + Math.cos(angle)*y\r\n\t}\r\n}\t\r\n\r\n// Returins a vector which is the result of *vect* bouncing off a surface with normal *normal*\r\n// normal must have magnitude 1\r\n// d' = d - 2(d.n)n\r\nexport function reflection(vect,normal,scalingFactor = 1.0) {\r\n\tlet dotProduct = normal.x*vect.x + normal.y*vect.y;\r\n\tlet result = vect;\r\n\tresult.x -= 2*dotProduct*normal.x;\r\n\tresult.y -= 2*dotProduct*normal.y;\r\n\treturn result;\r\n}\r\n\r\nexport function angleBetween(vect1, vect2) {\r\n\tlet mag1 = Math.sqrt(vect1.x ** 2 + vect1.y ** 2);\r\n\tlet mag2 = Math.sqrt(vect2.x ** 2 + vect2.y ** 2);\r\n\tlet dotProduct = vect1.x*vect2.x + vect1.y*vect2.y;\r\n\treturn Math.acos(dotProduct/(mag1*mag2));\r\n}","\nimport {distance2d ,rotateVector, reflection, angleBetween} from '../utils/2d';\nimport intersects from 'intersects';\n\n// Class that handles drawing the paddle\nexport default class Paddle {\n\tconstructor(args) {\n\n\t\t// x1,y1 and x2,y2 represent the starting and ending point where the paddle can slide in between\n\t\tthis.x1 = args.x1 || 0;\n\t\tthis.y1 = args.y1 || 0;\n\t\tthis.x2 = args.x2 || 0;\n\t\tthis.y2 = args.y2 || 0;\n\n\t\n\t\t\n\t\t// Depth and width are dimensions of the paddle\n\t\tthis.depth = args.depth || 10;\n\t\tthis.width = args.width || 50;\n\n\t\tthis.position = 50; // Percentage value showing how far the paddle is from its first endpoint to the other\n\t\t// Ex. 0 means it is at (x1,y1) , 100 means at (x2,y2), 50 means it is in between\n\n\t\tthis.slidinglength = distance2d(this.x1,this.y1,this.x2,this.y2);\n\t\tif (this.y1 === this.y2) {\n\t\t\tthis.tiltAngle = 90*Math.PI/180;\n\t\t} else {\n\t\t\tthis.tiltAngle = -Math.atan((this.x2-this.x1)/(this.y2-this.y1));\n\t\t}\n\t\t\n\t\tif (this.slidinglength < this.width) {\n\t\t\tconsole.log(\"Paddle sliding length smaller than paddle width!\");\n\t\t}\n\n\t\t// The min and max value of position so that the ends of the paddle dont cross x1,y1 and x2,y2\n\t\t// Ex. if a paddle is 10px wide and the total length is 100px, min and max pos will be 5% and 95% \n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\n\n\t}\n\n\tgetReflection(ball) {\n\t\t\n\t\t// First, figure out which edge the ball collided with. \n\t\tlet hitbox = this.getHitbox();\n\t\tlet edge;\n\t\tfor (let i = 0; i < 4; i++) {\n\n\t\t\tedge = [hitbox[i].x, hitbox[i].y, hitbox[(i+1)%4].x, hitbox[(i+1)%4].y];\n\t\t\tif (intersects.circleLine(ball.x,ball.y,ball.radius, ...edge)) break;\n\n\t\t}\n\t\t// Get a vector parallel to the edge\n\t\tlet edgeVector = {x:edge[2] - edge[0], y: edge[3] - edge[1]}; \n\t\t// Rotate it by 90 degrees\n\t\tlet normalVector = rotateVector(edgeVector, Math.PI/2); \n\n\t\t// Make sure the normal is pointing outwards\n\t\tlet midpoint = {x:(edge[2]+edge[0])/2,y:(edge[3]+edge[1])/2};\n\t\tlet offset = {...midpoint};\n\t\toffset.x += normalVector.x*0.0001;\n\t\toffset.y += normalVector.y*0.0001;\n\n\t\tif (distance2d(this.paddleCenterX,this.paddleCenterY,midpoint.x,midpoint.y) > distance2d(this.paddleCenterX,this.paddleCenterY,offset.x,offset.y)) {\n\t\t\n\t\t\tnormalVector.x *= -1;\n\t\t\tnormalVector.y *= -1;\n\t\t}\n\n\t\t// Normalize the normal lol\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\n\t\tnormalVector.x /= magnitude;\n\t\tnormalVector.y /= magnitude;\n\n\t\t\n\t\tlet ref = reflection({x: ball.dx, y: ball.dy}, normalVector, 1.0);\n\t\t// Add the vector from paddle to ball, to increase the ball speed on each hit\n\t\tref.x += (ball.x - this.paddleCenterX)*0.05;\n\t\tref.y += (ball.y - this.paddleCenterY)*0.05;\n\n\t\tlet paddleVelocity = {x: this.paddleCenterX - this.previousCenterX, y: this.paddleCenterY-this.previousCenterY};\n\t\tif (paddleVelocity.x === 0 && paddleVelocity.y === 0) {\n\t\t\treturn ref;\n\t\t}\n\n\t\t// Deflect the ball further based on the movvement of the paddle\n\t\tref = rotateVector(ref, angleBetween(ref,paddleVelocity)*0.2);\n\t\treturn ref;\n\t}\n\n\trender(state,input) {\n\t\tvar ctx = state.context;\n\t\t\n\n\t\n\t\t// Move the paddle based on keyboard input\n\t\tif (input.right) {\n\t\t\tthis.position++;\n\t\t}\n\n\t\tif (input.left) {\n\t\t\tthis.position--;\n\t\t}\n\n\t\t// Stop it from going beyond the limit\n\t\tif (this.position > this.maxPosition) this.position = this.maxPosition;\n\t\tif (this.position < this.minPosition) this.position = this.minPosition;\n\n\t\t// Get x and y position of paddle center\n\t\tthis.position = Math.round(this.position);\n\n\t\t// Holds the previous coordinates of the paddle in the previous frame\n\t\t// Used to see if the paddle is moving\n\t\tthis.previousCenterX = this.paddleCenterX;\n\t\tthis.previousCenterY = this.paddleCenterY;\n\n\t\tthis.paddleCenterX = (this.x1*(1-this.position/100) + this.x2*this.position/100);\n\t\tthis.paddleCenterY = (this.y1*(1-this.position/100) + this.y2*this.position/100);\n\n\t\t\n\n\t\tctx.save();\n\t\tctx.translate(0.5,0.5);\n\t\tctx.strokeStyle = \"#000000\";\n\t\tctx.fillStyle = \"#888888\";\n\t\t\n\t\tctx.translate(this.paddleCenterX, this.paddleCenterY);\n\t\tctx.rotate(this.tiltAngle );\n\t\t// Draw paddle with fillRect()\n\t\tctx.fillRect(-this.depth/2,-this.width/2,this.depth,this.width);\n\t\t\n\t\tctx.restore();\n\t\t\n\n\t}\n\n\tgetHitbox() {\n\n\t\tlet sw = this.width/2;\n\t\tlet sd = this.depth/2;\n\t\tvar points = [\n\t\t\t{x:sd,y:sw},{x:sd,y:-sw},{x:-sd,y:-sw},{x:-sd,y:sw}\n\t\t];\n\n\t\t/*\n\n\t\tOrder of points \n\n\t    3      2\n\t\t +----+\n\t\t |    |\n\t\t |    |\n\t\t |    |\n\t\t |    |\n\t\t +----+\n        4      1\n\t\t*/\n\n\n\t\treturn points.map((e) => {\n\t\t\tlet {x:u,y:v} = rotateVector(e,this.tiltAngle);\n\t\t\n\t\t\treturn {x:u + this.paddleCenterX,y: v + this.paddleCenterY}\n\t\t});\n\t\n\t}\n}","class Ball {\n\tconstructor(args) {\n        this.x = args.x; \n        this.y = args.y;\n        this.dx = args.dx;\n        this.dy = args.dy; // changes the direction of movement  1 means up and -1 means down &  left or right \n        this.radius = 10;\n        this.delete = false; // Whether the ball should be deleted in the next frame\n\n    }\n\n    render(state){ \n\n        this.x += this.dx;\n        this.y += this.dy;\n        \n        var ctx = state.context;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n        ctx.fillStyle = \"#0095DD\";\n        ctx.fill();\n        ctx.closePath();\n    }\n}\n\nexport default Ball;","import React from 'react'\r\n\r\n\r\nconst mainStyle = {\r\n\theight:50,\r\n\twidth:100,\r\n\tmargin:\"auto\",\r\n\tpadding:10,\r\n}\r\n\r\nconst leftStyle = {\r\n\twidth: \"50%\",\r\n\theight: 50,\r\n\tfloat: \"left\",\r\n\tdisplay: \"flex\",\r\n\talignItems: \"center\",\r\n\tjustifyContent: \"center\",\r\n\tboxShadow:\"0px 0px 0px 10px red inset\",\r\n\t\r\n\r\n}\r\n\r\nconst rightStyle = {\r\n\tmarginLeft: \"50%\",\r\n\theight:50,\r\n\tdisplay: \"flex\",\r\n\talignItems: \"center\",\r\n\tjustifyContent: \"center\",\r\n\tboxShadow:\"0px 0px 0px 10px blue inset\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class Scoreboard extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style = {mainStyle}>\r\n\t\t\t\t<div id = \"red\" style = {leftStyle}>{this.props.redScore}</div>\r\n\t\t\t\t<div id = \"blue\" style = {rightStyle}>{this.props.blueScore}</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import { rotateVector ,distance2d, reflection} from \"../utils/2d\";\r\n\r\n\r\n\r\n\r\nexport class Wall {\r\n\r\n\tconstructor(args) {\r\n\t\tthis.x1 = args.x1;\r\n\t\tthis.y1 = args.y1;\r\n\t\tthis.x2 = args.x2;\r\n\t\tthis.y2 = args.y2;\r\n\r\n\t}\r\n\r\n\tgetReflection(ball) {\r\n\t\tlet parallelVector = {x: this.x2-this.x1, y: this.y2-this.y1};\r\n\t\tlet normalVector = rotateVector(parallelVector, Math.PI/2);\r\n\r\n\t\t// Make sure normalVector is pointing inward\r\n\t\tlet midpoint = {x: (this.x1+this.x2)/2, y: (this.y1+this.y2)/2};\r\n\t\tlet offset = {...midpoint};\r\n\t\toffset.x += normalVector.x*0.001;\r\n\t\toffset.y += normalVector.y*0.001;\r\n\r\n\t\tif (distance2d(ball.x,ball.y,midpoint.x,midpoint.y) < distance2d(ball.x,ball.y,offset.x,offset.y)) {\r\n\t\t\r\n\t\t\tnormalVector.x *= -1;\r\n\t\t\tnormalVector.y *= -1;\r\n\t\t}\r\n\r\n\t\t// Normalize the normal lol\r\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\r\n\t\tnormalVector.x /= magnitude;\r\n\t\tnormalVector.y /= magnitude;\r\n\t\t\r\n\r\n\t\treturn reflection({x:ball.dx, y:ball.dy}, normalVector,1.0);\r\n\r\n\t}\r\n\r\n\trender(state) {\r\n\t\tvar ctx  = state.context;\r\n\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n}","export class Goal {\r\n\tconstructor(args) {\r\n\t\tthis.x1 = args.x1;\r\n\t\tthis.y1 = args.y1;\r\n\t\tthis.x2 = args.x2;\r\n\t\tthis.y2 = args.y2;\r\n\r\n\t\tthis.color = args.color;\r\n\t\tthis.teamId = args.teamId;\t\r\n\t}\r\n\r\n\trender(state) {\r\n\t\tvar ctx  = state.context;\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = this.color;\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n}","export function randomBetween(a,b) {\r\n\treturn a + Math.random()*(b-a);\r\n}","import React, {Component} from 'react';\nimport InputManager from './InputManager'; // InputManager is a class handling all keyboard inputs\nimport './App.css';\nimport Paddle from './gameObjects/Paddle';\nimport Ball from './gameObjects/Ball';\nimport { Scoreboard } from './components/Scoreboard';\nimport { Wall } from './gameObjects/Wall';\nimport { Goal } from './gameObjects/Goal';\nimport intersects from 'intersects';\nimport { rotateVector } from './utils/2d';\nimport { randomBetween } from './utils/math';\n\n\n\nconst GameState = {\n\tSTOPPED:0,\n\tRUNNING:1,\n\tGOAL_SCORED:2\n}\n\nconst Teams = {\n\tRED:0,\n\tBLUE:1,\n}\n\nvar animationFrameId;\n\n// The main component that contains the canvas, and other buttons if needed\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinput: new InputManager(), // Instantiate new InputManager\n\t\t\tcontext: null, // the canvas context,\n\t\t\tgameState: GameState.RUNNING,\n\t\t\tredScore:0,\n\t\t\tblueScore:0,\n\t\t\tgameMode:1, // Number of players on each side\n\n\t\t}\n\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.reset1v1 = this.reset1v1.bind(this);\n\t\tthis.reset2v2 = this.reset2v2.bind(this);\n\t\tthis.reset3v3 = this.reset3v3.bind(this);\n\t\tthis.resetPositions = this.resetPositions.bind(this);\n\t\tthis.renderPaddles = this.renderPaddles.bind(this);\n\t\t\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.state.input.bindKeys();\n\t\t\n\t\tconst context = this.refs.canvas.getContext('2d'); // This is to get context\n\t\tthis.setState({context:context});\t\t\n\t\tthis.reset1v1();\n\t\tanimationFrameId = requestAnimationFrame(this.draw); \n\n\t}\n\n\treset1v1() {\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:1});\n\t\tthis.walls = [\n\t\t\tnew Wall({x1:0,y1:100,x2:500,y2:100}),\n\t\t\tnew Wall({x1:0,y1:399,x2:500,y2:399}),\n\t\t];\n\t\tthis.goals = [\n\t\t\tnew Goal({x1:0,y1:100,x2:0,y2:400,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:499,y1:100,x2:499,y2:400,color:\"blue\",teamId:Teams.BLUE})\n\t\t];\n\n\t\tthis.paddles = [\n\t\t\tnew Paddle({x1:10, y1:100, x2:10, y2:400}),\n\t\t\tnew Paddle({x1:490,y1:400,x2:490,y2:100})\n\t\t]\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.resetPositions();\n\t}\n\n\treset2v2() {\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:2});\n\t\tthis.walls = [];\n\t\tthis.goals = [\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:0,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:250,y1:0,x2:500,y2:250,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:500,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:250,y1:500,x2:500,y2:250,color:\"blue\",teamId:Teams.BLUE}),\n\t\t];\n\t\tthis.paddles = [\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:10}),\n\t\t\tnew Paddle({x1:250,y1:10,x2:490,y2:250}),\n\t\t\tnew Paddle({x1:250,y1:490,x2:490,y2:250}),\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:490}),\n\t\t]\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.resetPositions();\n\t}\n\n\treset3v3() {\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:3});\n\t\tthis.walls = [];\n\t\t// Generate the hexagonal coordinates programatically since its easier than hardcoding\n\t\tthis.goals = [];\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tlet g1 = rotateVector({x:250,y:0},i*Math.PI/3);\n\t\t\tlet g2 = rotateVector({x:250,y:0},(i+1)*Math.PI/3);\n\t\t\tlet color = i < 3? \"blue\":\"red\";\n\t\t\tlet teamId = color === \"red\"? Teams.RED: Teams.BLUE;\n\t\t\tthis.goals.push(new Goal({x1:g1.x + 250, y1:g1.y + 250, x2:g2.x + 250, y2:g2.y + 250, color:color, teamId:teamId}));\n\t\t}\n\t\tthis.paddles = [];\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tlet v1 = rotateVector({x:-240,y:0},i*Math.PI/3);\n\t\t\tlet v2 = rotateVector({x:-240,y:0},(i+1)*Math.PI/3);\n\t\t\t\n\t\t\t\n\t\t\tthis.paddles.push(new Paddle({x1: v1.x + 250,y1:v1.y + 250, x2:v2.x + 250, y2:v2.y + 250}));\n\t\t}\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tlet {x1,y1,x2,y2} = this.paddles[2-i];\n\t\t\tthis.paddles.push(new Paddle({x1:x1, y1: 500-y1, x2:x2, y2:500-y2}))\n\t\t}\n\t\n\n\t\t\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.resetPositions();\n\t}\n\n\tresetPositions() {\n\n\t\tlet randomAngle = this.state.gameMode === 1? randomBetween(-Math.PI/4, Math.PI/4): randomBetween(0,2*Math.PI);\n\t\tlet initialBallVelocity  =rotateVector({x:3,y:0},randomAngle);\n\n\t\t// Make the ball go either right or left with 50:50 chance\n\t\tif (this.state.gameMode === 1 && Math.random() > 0.5) {\n\t\t\tinitialBallVelocity.x *= -1;\n\t\t\tinitialBallVelocity.y *= -1;\n\t\t}\n\t\tthis.ball = new Ball({x: 250, y: 250,dx: initialBallVelocity.x, dy: initialBallVelocity.y});\n\t\tthis.paddles.forEach(paddle => paddle.position = 50);\n\t}\n\n\n\n\trenderPaddles() {\n\n\t\tlet keys = this.state.input.pressedKeys;\n\t\t\n\t\tswitch(this.state.gameMode) {\n\t\t\tcase 1:\n\t\t\t\tthis.paddles[0].render(this.state, keys.red1); \n\t\t\t\tthis.paddles[1].render(this.state, keys.blue1);\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tthis.paddles[0].render(this.state, keys.red1); \n\t\t\t\tthis.paddles[1].render(this.state, keys.red2);\n\t\t\t\tthis.paddles[2].render(this.state, keys.blue1); \n\t\t\t\tthis.paddles[3].render(this.state, keys.blue2);\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase 3: \n\t\t\t\tthis.paddles[0].render(this.state, keys.red1); \n\t\t\t\tthis.paddles[1].render(this.state, keys.red2);\n\t\t\t\tthis.paddles[2].render(this.state, keys.red3); \n\t\t\t\tthis.paddles[3].render(this.state, keys.blue1);\n\t\t\t\tthis.paddles[4].render(this.state, keys.blue2); \n\t\t\t\tthis.paddles[5].render(this.state, keys.blue3);\n\t\t\t\tbreak;\n\t\t\t\n\n\t\t\tdefault :\n\t\t\t\tconsole.log(\"WHY\");\n\t\t}\n\t}\n\n\tdraw() {\n\t\tconst ctx = this.state.context;\n\t\tctx.save();\n\t\tctx.fillStyle = \"#FFF\";\n\t\tctx.translate(0.5,0.5);\n\t\tctx.fillRect(0,0,500,500); // Erase the previous contents with this\n\n\t\t\n\t\tthis.walls.forEach(wall => {\n\t\t\twall.render(this.state);\n\t\t})\n\t\tthis.goals.forEach(goal => {\n\t\t\tgoal.render(this.state);\n\t\t})\n\n\t\t// Collision between ball and paddles\n\t\tthis.paddles.forEach(paddle => {\n\t\t\t// The below statement is to convert an array of objects {x,y} to array of numbers  \n\t\t\tlet hitboxArr = paddle.getHitbox().flatMap(element => {\n\t\t\t\treturn [element.x,element.y];\n\t\t\t}); \n\t\t\t// Now hitboxArr contains the points in correct format [x1,y1,x2,y2...]\n\t\t\tif (intersects.circlePolygon(this.ball.x, this.ball.y,this.ball.radius,hitboxArr)) {\n\t\t\t\tlet newVelocity = paddle.getReflection(this.ball);\n\t\t\t\tthis.ball.dx = newVelocity.x;\n\t\t\t\tthis.ball.dy = newVelocity.y;\n\t\t\t\tthis.ball.x += this.ball.dx;\n\t\t\t\tthis.ball.y += this.ball.dy;\n\t\t\t}\n\t\t\t\n\t\t})\n\n\t\t// Collision between ball and walls\n\t\tthis.walls.forEach(wall => {\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, wall.x1, wall.y1, wall.x2, wall.y2)) {\n\t\t\t\tlet newVelocity = wall.getReflection(this.ball);\n\t\t\t\tthis.ball.dx = newVelocity.x;\n\t\t\t\tthis.ball.dy = newVelocity.y;\n\t\t\t\tthis.ball.x += this.ball.dx;\n\t\t\t\tthis.ball.y += this.ball.dy;\n\t\t\t}\n\t\t\t\n\t\t})\n\n\n\n\t\t// Collision between ball and goals\n\t\tthis.goals.forEach(goal => {\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, goal.x1, goal.y1, goal.x2, goal.y2)) {\n\t\t\t\t// Update the score\n\t\t\t\tlet teamText;\n\t\t\t\tif (goal.teamId === Teams.RED) {\n\t\t\t\t\tthis.setState(state => ({blueScore: state.blueScore + 1}));\n\t\t\t\t\tteamText = \"Blue team\";\n\t\t\t\t\tctx.fillStyle = \"blue\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState(state => ({redScore: state.redScore + 1}));\n\t\t\t\t\tteamText = \"Red team\";\n\t\t\t\t\tctx.fillStyle = \"red\";\n\t\t\t\t}\n\t\t\t\tctx.font = \"30px Courier New\";\n\t\t\t\t\n\t\t\t\tctx.fillText(teamText+ \" has scored!\",80,250);\n\n\t\t\t\tcancelAnimationFrame(animationFrameId);\n\t\t\t\tthis.setState({gameState: GameState.GOAL_SCORED});\n\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t})\n\n\t\t// Render the 2 paddles. Their position is updated within their own render methods\n\t\tthis.renderPaddles();\n\t\tthis.ball.render(this.state);\n\n\t\tctx.restore();\n\t\tif (this.state.gameState === GameState.RUNNING) \n\t\t\tanimationFrameId = requestAnimationFrame(this.draw); // Call draw() again on the next frame\n\t\telse if (this.state.gameState === GameState.GOAL_SCORED) {\n\t\t\tcancelAnimationFrame(animationFrameId);\n\t\t\n\t\t\tsetTimeout(() => {\n\t\t\t\tanimationFrameId = requestAnimationFrame(this.draw); \n\t\t\t\tthis.resetPositions();\n\t\t\t\tthis.setState({gameState: GameState.RUNNING});\n\t\t\t},1500);\n\t\t}\n\n\t\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.state.input.unbindKeys();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Pong++</h1>\n\t\t\t\t\n\t\t\t\t<canvas ref = \"canvas\" width = \"501\" height = \"501\"/>\n\t\t\t\t<Scoreboard redScore = {this.state.redScore} blueScore = {this.state.blueScore}/>\n\t\t\t\t<center>Reset Game</center>\n\t\t\t\t<center>\n\t\t\t\t\t<button id = \"1v1\" onClick = {this.reset1v1}>1v1</button> \n\t\t\t\t\t<button id = \"2v2\" onClick = {this.reset2v2}>2v2</button>\n\t\t\t\t\t<button id = \"3v3\" onClick = {this.reset3v3}>3v3</button>\n\t\t\t\t</center>\n\t\t\t\t\n\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n\n\t\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}