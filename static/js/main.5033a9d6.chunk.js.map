{"version":3,"sources":["InputManager.js","utils/2d.js","gameObjects/Paddle.js","gameObjects/Ball.js","components/Scoreboard.js","gameObjects/Wall.js","gameObjects/Goal.js","utils/math.js","App.js","gameObjects/Bot.js","components/Settings.js","serviceWorker.js","index.js"],"names":["KEY","InputManager","Object","classCallCheck","this","pressedKeys","red1","right","left","red2","red3","blue1","blue2","blue3","window","addEventListener","handleKeys","bind","removeEventListener","value","e","keys","keyCode","distance2d","x1","y1","x2","y2","Math","sqrt","pow","rotateVector","vect","angle","x","y","cos","sin","reflection","normal","arguments","length","undefined","dotProduct","result","Paddle","args","hidden","depth","width","position","paddleCenterX","paddleCenterY","slidinglength","tiltAngle","PI","atan","minPosition","maxPosition","ball","edge","hitbox","getHitbox","i","intersects","circleLine","apply","radius","concat","toConsumableArray","normalVector","midpoint","offset","objectSpread","magnitude","ref","dx","dy","paddleVelocity","previousCenterX","previousCenterY","vect1","vect2","angleBetween","state","input","ctx","context","round","save","translate","strokeStyle","fillStyle","rotate","fillRect","restore","_this","sw","sd","map","_rotateVector","u","v","Ball","delete","beginPath","arc","fill","closePath","controls","height","margin","padding","alignItems","justifyContent","float","userinfo","react_default","a","createElement","className","align","mainStyle","leftStyle","display","boxShadow","rightStyle","marginLeft","Scoreboard","_React$Component","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","style","id","props","redScore","blueScore","React","Component","Wall","moveTo","lineTo","stroke","Goal","color","teamId","randomBetween","b","random","animationFrameId","Bot","walls","output","waitTimer","lookAhead","debug","paddle","bouncesLeft","bouncedFlag","b1","b2","wall","w1","w2","intersectionPoint","lineIntersection","findSegmentIntersection","nextVelocity","getReflection","abs","p1","p2","current","dRight","paddleMovementTicks","min","dropdown","bottom","categoryHeader","background","marginTop","dropdownContent","minHeight","border","zIndex","buttonStyle","textAlign","borderRadius","userSelect","Settings","call","opened","toggleDropdown","assertThisInitialized","AICheckboxChange","setState","newSettings","settings","AI","target","changeHandler","AICheckboxArray","names","flexDirection","type","toString","checked","onChange","push","content","onClick","GameState","STOPPED","RUNNING","GOAL_SCORED","Teams","App","gameState","gameMode","draw","reset1v1","reset2v2","reset3v3","resetPositions","renderPaddles","changeSettings","initBots","bindKeys","refs","canvas","getContext","requestAnimationFrame","bots","goalWalls","goals","goal","modifiedWalls","splice","paddles","g1","g2","v1","v2","_this$paddles","initialBallVelocity","forEach","reset","render","_this2","hitboxArr","circlePolygon","newVelocity","teamText","font","fillText","cancelAnimationFrame","bot","index","calculateOutput","setTimeout","unbindKeys","Scoreboard_Scoreboard","Settings_Settings","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5033a9d6.chunk.js","sourcesContent":["const KEY = {\r\n\tONE:49, // Red 1 left/up\r\n\tTWO:50, // Red 1 right/down\r\n\tS: 83, // Red 2 left \r\n\tD: 68, // Red 2 right\r\n\tV: 86, // Red 3 left\r\n\tB: 66, // Red 3 right\r\n\tN: 78, // Blue 3 left\r\n\tM: 77, // Blue 3 right\r\n\tL: 76, // Blue 2 left\r\n\tSEMICOLON: 186, // Blue 2 right\r\n\tMINUS: 189, // Blue 1 left/down\r\n\tEQUAL: 187, // Blue 1 right\r\n };\r\n\r\n export default class InputManager {\r\n\r\n\tbindKeys() {\r\n\t\twindow.addEventListener('keyup',   this.handleKeys.bind(this, false));\r\n\t\twindow.addEventListener('keydown', this.handleKeys.bind(this, true));\r\n\t}\r\n\t\r\n\tunbindKeys() {\r\n\t\twindow.removeEventListener('keyup', this.handleKeys);\r\n\t\twindow.removeEventListener('keydown', this.handleKeys);\r\n\t}\r\n\tconstructor() {\r\n\t\tthis.pressedKeys = {};\r\n\t\tthis.pressedKeys.red1 = {right:0,left:0};\r\n\t\tthis.pressedKeys.red2 = {right:0,left:0};\r\n\t\tthis.pressedKeys.red3 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue1 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue2 = {right:0,left:0};\r\n\t\tthis.pressedKeys.blue3 = {right:0,left:0};\r\n\t}\r\n\r\n\t// The pressedKeys object holds either a 0 or a 1 for each key whether it is pressed or not\r\n\t// It is always updated in real time once the eventListener is added\r\n\thandleKeys(value, e){\r\n\t\tlet keys = this.pressedKeys;\r\n\t\tswitch (e.keyCode) {\r\n\t\t\tcase KEY.ONE:\r\n\t\t\t\tkeys.red1.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.TWO:\r\n\t\t\t\tkeys.red1.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.S:\r\n\t\t\t\tkeys.red2.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.D:\r\n\t\t\t\tkeys.red2.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.V:\r\n\t\t\t\tkeys.red3.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.B:\r\n\t\t\t\tkeys.red3.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.N:\r\n\t\t\t\tkeys.blue3.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.M:\r\n\t\t\t\tkeys.blue3.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.L:\r\n\t\t\t\tkeys.blue2.left = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.SEMICOLON:\r\n\t\t\t\tkeys.blue2.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.MINUS:\r\n\t\t\t\tkeys.blue1.left = value;\r\n\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.EQUAL:\r\n\t\t\t\tkeys.blue1.right = value;\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t }\r\n\t\t this.pressedKeys = keys;\r\n\t }\r\n\t \r\n }","// A file containing simple functions for 2d grid related calculations\r\n\r\nexport function distance2d(x1,y1,x2,y2) {\r\n\treturn Math.sqrt((x1-x2)**2 + (y1-y2)**2);\r\n}\r\n\r\nexport function rotateVector(vect, angle) {\r\n\tlet {x,y} = vect;\r\n\treturn {\r\n\t\tx: Math.cos(angle)*x - Math.sin(angle)*y,\r\n\t\ty: Math.sin(angle)*x + Math.cos(angle)*y\r\n\t}\r\n}\t\r\n\r\n// Returins a vector which is the result of *vect* bouncing off a surface with normal *normal*\r\n// normal must have magnitude 1\r\n// d' = d - 2(d.n)n\r\nexport function reflection(vect,normal,scalingFactor = 1.0) {\r\n\tlet dotProduct = normal.x*vect.x + normal.y*vect.y;\r\n\tlet result = vect;\r\n\tresult.x -= 2*dotProduct*normal.x;\r\n\tresult.y -= 2*dotProduct*normal.y;\r\n\treturn result;\r\n}\r\n\r\nexport function angleBetween(vect1, vect2) {\r\n\tlet {x:x1,y:y1} = vect1;\r\n\tlet {x:x2,y:y2} = vect2;\r\n\treturn Math.atan(x1*y2-y1*x2,x1*x2+y1*y2);\r\n\r\n}","\nimport {distance2d ,rotateVector, reflection, angleBetween} from '../utils/2d';\nimport intersects from 'intersects';\n\n// Class that handles drawing the paddle\nexport default class Paddle {\n\tconstructor(args) {\n\n\t\t// x1,y1 and x2,y2 represent the starting and ending point where the paddle can slide in between\n\t\tthis.x1 = args.x1 || 0;\n\t\tthis.y1 = args.y1 || 0;\n\t\tthis.x2 = args.x2 || 0;\n\t\tthis.y2 = args.y2 || 0;\n\t\tthis.hidden = args.hidden;\n\t\n\t\t\n\t\t// Depth and width are dimensions of the paddle\n\t\tthis.depth = args.depth || 10;\n\t\tthis.width = args.width || 50;\n\n\t\tthis.position = 50; // Percentage value showing how far the paddle is from its first endpoint to the other\n\t\t// Ex. 0 means it is at (x1,y1) , 100 means at (x2,y2), 50 means it is in between\n\t\tthis.paddleCenterX = (this.x1+this.x2)/2;\n\t\tthis.paddleCenterY = (this.y1+this.y2)/2;\n\n\t\tthis.slidinglength = distance2d(this.x1,this.y1,this.x2,this.y2);\n\t\tif (this.y1 === this.y2) {\n\t\t\tthis.tiltAngle = 90*Math.PI/180;\n\t\t} else {\n\t\t\tthis.tiltAngle = -Math.atan((this.x2-this.x1)/(this.y2-this.y1));\n\t\t}\n\n\t\t// The min and max value of position so that the ends of the paddle dont cross x1,y1 and x2,y2\n\t\t// Ex. if a paddle is 10px wide and the total length is 100px, min and max pos will be 5% and 95% \n\t\tthis.minPosition = 100*(this.width/this.slidinglength)/2;\n\t\tthis.maxPosition = 100*(1 - this.width/this.slidinglength/2);\n\n\t}\n\n\tgetReflection(ball) {\n\t\t\n\t\t// First, figure out which edge the ball collided with. \n\n\t\tlet hitbox = this.getHitbox();\n\t\tlet edge;\n\t\tfor (let i = 0; i < 4; i++) {\n\n\t\t\tedge = [hitbox[i].x, hitbox[i].y, hitbox[(i+1)%4].x, hitbox[(i+1)%4].y];\n\t\t\tif (intersects.circleLine(ball.x,ball.y,ball.radius, ...edge)) break;\n\n\t\t}\n\t\t// Get a vector parallel to the edge\n\t\tlet edgeVector = {x:edge[2] - edge[0], y: edge[3] - edge[1]}; \n\t\t// Rotate it by 90 degrees\n\t\tlet normalVector = rotateVector(edgeVector, Math.PI/2); \n\n\t\t// Make sure the normal is pointing outwards\n\t\tlet midpoint = {x:(edge[2]+edge[0])/2,y:(edge[3]+edge[1])/2};\n\t\tlet offset = {...midpoint};\n\t\toffset.x += normalVector.x*0.0001;\n\t\toffset.y += normalVector.y*0.0001;\n\n\t\tif (distance2d(this.paddleCenterX,this.paddleCenterY,midpoint.x,midpoint.y) > distance2d(this.paddleCenterX,this.paddleCenterY,offset.x,offset.y)) {\n\t\t\n\t\t\tnormalVector.x *= -1;\n\t\t\tnormalVector.y *= -1;\n\t\t}\n\n\t\t// Normalize the normal lol\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\n\t\tnormalVector.x /= magnitude;\n\t\tnormalVector.y /= magnitude;\n\n\t\t\n\t\tlet ref = reflection({x: ball.dx, y: ball.dy}, normalVector, 1.0);\n\t\t// Add the vector from paddle to ball, to increase the ball speed on each hit\n\t\tref.x += (ball.x - this.paddleCenterX)*0.05;\n\t\tref.y += (ball.y - this.paddleCenterY)*0.05;\n\n\t\tlet paddleVelocity = {x: this.paddleCenterX - this.previousCenterX, y: this.paddleCenterY-this.previousCenterY};\n\t\tif (paddleVelocity.x === 0 && paddleVelocity.y === 0) {\n\t\t\treturn ref;\n\t\t}\n\t\n\n\t\t// Deflect the ball further based on the movvement of the paddle\n\t\tref = rotateVector(ref, angleBetween(ref,paddleVelocity)*0.2);\n\t\treturn ref;\n\t}\n\n\trender(state,input) {\n\t\tif (this.hidden) return;\n\t\tvar ctx = state.context;\n\t\t\n\n\t\n\t\t// Move the paddle based on keyboard input\n\t\tif (input.right) {\n\t\t\tthis.position++;\n\t\t}\n\n\t\tif (input.left) {\n\t\t\tthis.position--;\n\t\t}\n\n\t\t// Stop it from going beyond the limit\n\t\tif (this.position > this.maxPosition) this.position = this.maxPosition;\n\t\tif (this.position < this.minPosition) this.position = this.minPosition;\n\n\t\t// Get x and y position of paddle center\n\t\tthis.position = Math.round(this.position);\n\n\t\t// Holds the previous coordinates of the paddle in the previous frame\n\t\t// Used to see if the paddle is moving\n\t\tthis.previousCenterX = this.paddleCenterX;\n\t\tthis.previousCenterY = this.paddleCenterY;\n\n\t\tthis.paddleCenterX = (this.x1*(1-this.position/100) + this.x2*this.position/100);\n\t\tthis.paddleCenterY = (this.y1*(1-this.position/100) + this.y2*this.position/100);\n\n\t\t\n\n\t\tctx.save();\n\t\tctx.translate(0.5,0.5);\n\t\tctx.strokeStyle = \"#000000\";\n\t\tctx.fillStyle = \"#888888\";\n\t\t\n\t\tctx.translate(this.paddleCenterX, this.paddleCenterY);\n\t\tctx.rotate(this.tiltAngle );\n\t\t// Draw paddle with fillRect()\n\t\tctx.fillRect(-this.depth/2,-this.width/2,this.depth,this.width);\n\t\t\n\t\tctx.restore();\n\t\t\n\n\t}\n\n\tgetHitbox() {\n\n\t\tlet sw = this.width/2;\n\t\tlet sd = this.depth/2;\n\t\tvar points = [\n\t\t\t{x:sd,y:sw},{x:sd,y:-sw},{x:-sd,y:-sw},{x:-sd,y:sw}\n\t\t];\n\n\t\t/*\n\n\t\tOrder of points \n\n\t    3      2\n\t\t +----+\n\t\t |    |\n\t\t |    |\n\t\t |    |\n\t\t |    |\n\t\t +----+\n        4      1\n\t\t*/\n\n\n\t\treturn points.map((e) => {\n\t\t\tlet {x:u,y:v} = rotateVector(e,this.tiltAngle);\n\t\t\n\t\t\treturn {x:u + this.paddleCenterX,y: v + this.paddleCenterY}\n\t\t});\n\t\n\t}\n}","class Ball {\n\tconstructor(args) {\n        this.x = args.x; \n        this.y = args.y;\n        this.dx = args.dx;\n        this.dy = args.dy; // changes the direction of movement  1 means up and -1 means down &  left or right \n        this.radius = 10;\n        this.delete = false; // Whether the ball should be deleted in the next frame\n\n    }\n\n    render(state){ \n\n        this.x += this.dx;\n        this.y += this.dy;\n        \n        var ctx = state.context;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n        ctx.fillStyle = \"#0095DD\";\n        ctx.fill();\n        ctx.closePath();\n    }\n}\n\nexport default Ball;","import React from 'react'\n\n\nconst controls = {\n\theight:0,\n\twidth:400,\n\tmargin:\"auto\",\n\tpadding:20,\n\talignItems: \"left\",\n\tjustifyContent: \"left\",\n\tfloat: \"left\"\n}\n\nconst userinfo = (<div className = {controls}><h2 align = \"left\">CONTROLS INFO</h2>\n\t\t<div align = \"left\">\n\t\t\t<p> RED 1  : 1  --> LEFT / UP  &&  2   --> RIGHT / DOWN  </p> \n\t\t\t<p> RED 2  : S  --> LEFT  &&  D --> RIGHT </p>\n\t\t\t<p> RED 3  : V  --> LEFT  &&  B --> RIGHT  </p> \n\t\t\t<p> BLUE 3 : N  --> LEFT  &&  M   --> RIGHT </p>\n\t\t\t<p> BLUE 2 : L --> LEFT  &&  ';' --> RIGHT  </p> \n\t\t\t<p> BLUE 1 : -  --> LEFT  &&  =   --> DOWN  </p>\n\t\t</div>\n </div>);\n\nconst mainStyle = {\n\theight:50,\n\twidth:100,\n\tmargin:\"auto\",\n\tpadding:10,\n\t\n}\n\nconst leftStyle = {\n\twidth: \"50%\",\n\theight: 50,\n\tfloat: \"left\",\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\tboxShadow:\"0px 0px 0px 10px red inset\",\n\t\n\n}\n\nconst rightStyle = {\n\tmarginLeft: \"50%\",\n\theight:50,\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\tboxShadow:\"0px 0px 0px 10px blue inset\"\n}\n\n\n\n\n\nexport class Scoreboard extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style = {mainStyle}>\n\t\t\t\t\t<div id = \"red\" style = {leftStyle}>{this.props.redScore}</div>\n\t\t\t\t\t<div id = \"blue\" style = {rightStyle}>{this.props.blueScore}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div style = {controls}>{userinfo}</div>\t\n\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}","import { rotateVector ,distance2d, reflection} from \"../utils/2d\";\r\n\r\n\r\n\r\n\r\nexport class Wall {\r\n\r\n\tconstructor(args) {\r\n\t\tthis.x1 = args.x1;\r\n\t\tthis.y1 = args.y1;\r\n\t\tthis.x2 = args.x2;\r\n\t\tthis.y2 = args.y2;\r\n\r\n\t}\r\n\r\n\tgetReflection(ball) {\r\n\t\tlet parallelVector = {x: this.x2-this.x1, y: this.y2-this.y1};\r\n\t\tlet normalVector = rotateVector(parallelVector, Math.PI/2);\r\n\r\n\t\t// Make sure normalVector is pointing inward\r\n\t\tlet midpoint = {x: (this.x1+this.x2)/2, y: (this.y1+this.y2)/2};\r\n\t\tlet offset = {...midpoint};\r\n\t\toffset.x += normalVector.x*0.001;\r\n\t\toffset.y += normalVector.y*0.001;\r\n\r\n\t\tif (distance2d(ball.x,ball.y,midpoint.x,midpoint.y) < distance2d(ball.x,ball.y,offset.x,offset.y)) {\r\n\t\t\r\n\t\t\tnormalVector.x *= -1;\r\n\t\t\tnormalVector.y *= -1;\r\n\t\t}\r\n\r\n\t\t// Normalize the normal lol\r\n\t\tlet magnitude = Math.sqrt(normalVector.x**2 + normalVector.y**2);\r\n\t\tnormalVector.x /= magnitude;\r\n\t\tnormalVector.y /= magnitude;\r\n\t\t\r\n\r\n\t\treturn reflection({x:ball.dx, y:ball.dy}, normalVector,1.0);\r\n\r\n\t}\r\n\r\n\trender(state) {\r\n\t\tvar ctx  = state.context;\r\n\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n}","export class Goal {\r\n\tconstructor(args) {\r\n\t\tthis.x1 = args.x1;\r\n\t\tthis.y1 = args.y1;\r\n\t\tthis.x2 = args.x2;\r\n\t\tthis.y2 = args.y2;\r\n\r\n\t\tthis.color = args.color || \"red\";\r\n\t\tthis.teamId = args.teamId || 0;\t\r\n\t}\r\n\r\n\trender(state) {\r\n\t\tvar ctx  = state.context;\r\n\t\tctx.save();\r\n\t\tctx.strokeStyle = this.color;\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this.x1,this.y1);\r\n\t\tctx.lineTo(this.x2,this.y2);\r\n\t\tctx.stroke();\r\n\t\tctx.restore();\r\n\t}\r\n}","export function randomBetween(a,b) {\r\n\treturn a + Math.random()*(b-a);\r\n}","import React, {Component} from 'react';\nimport InputManager from './InputManager'; // InputManager is a class handling all keyboard inputs\nimport './App.css';\nimport Paddle from './gameObjects/Paddle';\nimport Ball from './gameObjects/Ball';\nimport { Scoreboard } from './components/Scoreboard';\nimport { Wall } from './gameObjects/Wall';\nimport { Goal } from './gameObjects/Goal';\nimport intersects from 'intersects';\nimport { rotateVector } from './utils/2d';\nimport { randomBetween } from './utils/math';\nimport { Bot } from './gameObjects/Bot';\nimport Settings from './components/Settings';\n\n\n\n\nconst GameState = {\n\tSTOPPED:0,\n\tRUNNING:1,\n\tGOAL_SCORED:2\n}\n\nconst Teams = {\n\tRED:0,\n\tBLUE:1,\n}\n\nvar animationFrameId;\n\n// The main component that contains the canvas, and other buttons if needed\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinput: new InputManager(), // Instantiate new InputManager\n\t\t\tcontext: null, // the canvas context,\n\t\t\tgameState: GameState.RUNNING,\n\t\t\tredScore:0,\n\t\t\tblueScore:0,\n\t\t\tgameMode:1, // Number of players on each side,\n\t\t\tsettings: {\n\t\t\t\tAI:[false,false,false,false,false,false]\n\t\t\t}\n\n\t\t}\n\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.reset1v1 = this.reset1v1.bind(this);\n\t\tthis.reset2v2 = this.reset2v2.bind(this);\n\t\tthis.reset3v3 = this.reset3v3.bind(this);\n\t\tthis.resetPositions = this.resetPositions.bind(this);\n\t\tthis.renderPaddles = this.renderPaddles.bind(this);\n\t\tthis.changeSettings = this.changeSettings.bind(this);\n\t\tthis.initBots = this.initBots.bind(this);\n\t\t\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.state.input.bindKeys();\n\t\t\n\t\tconst context = this.refs.canvas.getContext('2d'); // This is to get context\n\t\tthis.setState({context:context});\t\t\n\t\tthis.reset1v1();\n\t\tanimationFrameId = requestAnimationFrame(this.draw); \n\n\t}\n\n\n\tinitBots() {\n\t\tthis.bots = [];\n\t\t// A new array of all the goals, as well as walls\n\t\t// Both goals and walls are treated as walls by bots\n\t\tlet goalWalls = this.goals.map(goal => new Wall({x1:goal.x1,y1:goal.y1,x2:goal.x2,y2:goal.y2})).concat(this.walls); \n\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tif (this.state.settings.AI[i]) {\n\t\t\t\tlet modifiedWalls = [...goalWalls]; // Create a new array with all walls except that player's goal\n\t\t\t\tmodifiedWalls.splice(i,1);\n\t\t\t\tthis.bots.push(new Bot({walls:modifiedWalls}));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tthis.bots.push(null); // Dummy to make the array index match other indices (0-5)\n\t\t\t}\n\t\t}\n\t\n\t}\n\n\treset1v1() {\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:1});\n\t\tthis.walls = [\n\t\t\tnew Wall({x1:0,y1:100,x2:500,y2:100}),\n\t\t\tnew Wall({x1:0,y1:399,x2:500,y2:399}),\n\t\t];\n\t\tthis.goals = [\n\t\t\tnew Goal({x1:0,y1:100,x2:0,y2:400,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\n\t\t\tnew Goal({x1:499,y1:100,x2:499,y2:400,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), // These 4 are dummy goals to make the mapping consistent\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), //\n\t\t];\n\n\t\tthis.paddles = [\n\t\t\tnew Paddle({x1:10, y1:100, x2:10, y2:400}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // \n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // These 4 paddles are dummy paddles, so the mapping from player -> paddle index\n\t\t\tnew Paddle({x1:490,y1:400,x2:490,y2:100}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), // is consistent\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}), //\n\n\t\t]\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.initBots();\n\t\t\n\t\tthis.resetPositions();\n\t}\n\n\treset2v2() {\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:2});\n\t\tthis.walls = [];\n\t\tthis.goals = [\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:0,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:250,y1:0,x2:500,y2:250,color:\"red\",teamId:Teams.RED}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), \n\t\t\tnew Goal({x1:250,y1:500,x2:500,y2:250,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:0,y1:250,x2:250,y2:500,color:\"blue\",teamId:Teams.BLUE}),\n\t\t\tnew Goal({x1:-100,y1:-100,x2:-100,y2:-100}), \n\t\t];\n\t\tthis.paddles = [\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:10}),\n\t\t\tnew Paddle({x1:250,y1:10,x2:490,y2:250}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}),\n\t\t\tnew Paddle({x1:250,y1:490,x2:490,y2:250}),\n\t\t\tnew Paddle({x1:10,y1:250,x2:250,y2:490}),\n\t\t\tnew Paddle({x1:-100,y1:-100,x2:-100,y2:-100,hidden:true}),\n\t\t]\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.initBots();\n\t\tthis.resetPositions();\n\t}\n\n\treset3v3() {\n\t\tthis.setState({redScore:0,blueScore:0,gameState:GameState.RUNNING,gameMode:3});\n\t\tthis.walls = [];\n\t\t// Generate the hexagonal coordinates programatically since its easier than hardcoding\n\t\tthis.goals = [];\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tlet g1 = rotateVector({x:-250,y:0},i*Math.PI/3);\n\t\t\tlet g2 = rotateVector({x:-250,y:0},(i+1)*Math.PI/3);\n\t\t\tlet color = i < 3? \"red\":\"blue\";\n\t\t\tlet teamId = color === \"red\"? Teams.RED: Teams.BLUE;\n\t\t\tthis.goals.push(new Goal({x1:g1.x + 250, y1:g1.y + 250, x2:g2.x + 250, y2:g2.y + 250, color:color, teamId:teamId}));\n\t\t}\n\t\tthis.paddles = [];\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tlet v1 = rotateVector({x:-240,y:0},i*Math.PI/3);\n\t\t\tlet v2 = rotateVector({x:-240,y:0},(i+1)*Math.PI/3);\n\t\t\t\n\t\t\t\n\t\t\tthis.paddles.push(new Paddle({x1: v1.x + 250,y1:v1.y + 250, x2:v2.x + 250, y2:v2.y + 250}));\n\t\t}\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tlet {x1,y1,x2,y2} = this.paddles[2-i];\n\t\t\tthis.paddles.push(new Paddle({x1:x1, y1: 500-y1, x2:x2, y2:500-y2}))\n\t\t}\n\t\n\t\n\n\t\t\n\t\tthis.ball = new Ball({x:250, y: 250});\n\t\tthis.initBots();\n\t\tthis.resetPositions();\n\t}\n\n\tresetPositions() {\n\n\t\tlet randomAngle = this.state.gameMode === 1? randomBetween(-Math.PI/4,Math.PI/4): randomBetween(0,2*Math.PI);\n\t\tlet initialBallVelocity = rotateVector({x:3,y:0},randomAngle);\n\n\t\t// Make the ball go either right or left with 50:50 chance\n\t\tif (this.state.gameMode === 1 &&  Math.random() < 0.5) { \n\t\t\tinitialBallVelocity.x *= -1;\n\t\t\tinitialBallVelocity.y *= -1;\n\t\t}\n\t\tthis.ball = new Ball({x: 250, y: 250,dx: initialBallVelocity.x, dy: initialBallVelocity.y});\n\t\tthis.paddles.forEach(paddle => paddle.position = 50);\n\t\tthis.bots.forEach(b => {\n\t\t\tif (b) // To bypass the null elements in bots array\n\t\t\t\tb.reset();\n\t\t})\n\t}\n\n\n\n\trenderPaddles() {\n\n\t\tlet keys = this.state.input.pressedKeys;\n\t\tlet b = this.bots;\n\n\t\tthis.paddles[0].render(this.state, b[0]? b[0].output:keys.red1); \n\t\tthis.paddles[1].render(this.state, b[1]? b[1].output:keys.red2);\n\t\tthis.paddles[2].render(this.state, b[2]? b[2].output:keys.red3); \n\t\tthis.paddles[3].render(this.state, b[3]? b[3].output:keys.blue1);\n\t\tthis.paddles[4].render(this.state, b[4]? b[4].output:keys.blue2); \n\t\tthis.paddles[5].render(this.state, b[5]? b[5].output:keys.blue3);\n\t\t\n\t\t\n\t}\n\n\tdraw() {\n\t\tconst ctx = this.state.context;\n\t\tctx.save();\n\t\tctx.fillStyle = \"#FFF\";\n\t\tctx.translate(0.5,0.5);\n\t\tctx.fillRect(0,0,500,500); // Erase the previous contents with this\n\n\t\t\n\t\tthis.walls.forEach(wall => {\n\t\t\twall.render(this.state);\n\t\t})\n\t\tthis.goals.forEach(goal => {\n\t\t\tgoal.render(this.state);\n\t\t})\n\n\t\t// Collision between ball and paddles\n\t\tthis.paddles.forEach(paddle => {\n\t\t\t// The below statement is to convert an array of objects {x,y} to array of numbers  \n\t\t\tlet hitbox = paddle.getHitbox();\n\t\t\tlet hitboxArr = [];\n\t\t\thitbox.forEach(e => {\n\t\t\t\thitboxArr.push(e.x);\n\t\t\t\thitboxArr.push(e.y);\n\t\t\t})\n\n\t\t\t// Now hitboxArr contains the points in correct format [x1,y1,x2,y2...]\n\t\t\tif (intersects.circlePolygon(this.ball.x, this.ball.y,this.ball.radius,hitboxArr)) {\n\t\t\t\tlet newVelocity = paddle.getReflection(this.ball);\n\t\t\t\tthis.ball.dx = newVelocity.x;\n\t\t\t\tthis.ball.dy = newVelocity.y;\n\t\t\t\tthis.ball.x += this.ball.dx;\n\t\t\t\tthis.ball.y += this.ball.dy;\n\t\t\t}\n\t\t\t\n\t\t})\n\n\t\t// Collision between ball and walls\n\t\tthis.walls.forEach(wall => {\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, wall.x1, wall.y1, wall.x2, wall.y2)) {\n\t\t\t\tlet newVelocity = wall.getReflection(this.ball);\n\t\t\t\tthis.ball.dx = newVelocity.x;\n\t\t\t\tthis.ball.dy = newVelocity.y;\n\t\t\t\tthis.ball.x += this.ball.dx;\n\t\t\t\tthis.ball.y += this.ball.dy;\n\t\t\t}\n\t\t\t\n\t\t})\n\n\n\n\t\t// Collision between ball and goals\n\t\tthis.goals.forEach(goal => {\n\t\t\tif (intersects.circleLine(this.ball.x, this.ball.y, this.ball.radius, goal.x1, goal.y1, goal.x2, goal.y2)) {\n\t\t\t\t// Update the score\n\t\t\t\tlet teamText;\n\t\t\t\tif (goal.teamId === Teams.RED) {\n\t\t\t\t\tthis.setState(state => ({blueScore: state.blueScore + 1}));\n\t\t\t\t\tteamText = \"Blue team\";\n\t\t\t\t\tctx.fillStyle = \"blue\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState(state => ({redScore: state.redScore + 1}));\n\t\t\t\t\tteamText = \"Red team\";\n\t\t\t\t\tctx.fillStyle = \"red\";\n\t\t\t\t}\n\n\n\t\t\t\tctx.font = \"30px Courier New\";\n\t\t\t\t\n\t\t\t\tctx.fillText(teamText+ \" has scored!\",80,250);\n\n\t\t\t\tcancelAnimationFrame(animationFrameId);\n\t\t\t\tthis.setState({gameState: GameState.GOAL_SCORED});\n\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t})\n\n\t\t\n\t\tthis.bots.forEach((bot,index) => {\n\t\t\tif (bot) {\n\t\t\t\t\n\t\t\t\tbot.calculateOutput(this.ball, this.paddles[index]);\n\t\t\t}\n\t\t});\n\n\t\tthis.renderPaddles();\n\t\tthis.ball.render(this.state);\n\n\t\tctx.restore();\n\t\tif (this.state.gameState === GameState.RUNNING) \n\t\t\tanimationFrameId = requestAnimationFrame(this.draw); // Call draw() again on the next frame\n\t\telse if (this.state.gameState === GameState.GOAL_SCORED) {\n\t\t\tcancelAnimationFrame(animationFrameId);\n\t\t\n\t\t\tsetTimeout(() => {\n\t\t\t\tanimationFrameId = requestAnimationFrame(this.draw); \n\t\t\t\tthis.resetPositions();\n\t\t\t\tthis.setState({gameState: GameState.RUNNING});\n\t\t\t},1500);\n\t\t}\n\n\t\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.state.input.unbindKeys();\n\t}\n\n\tchangeSettings(newSettings) {\n\t\tthis.setState({settings:newSettings});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Pong++</h1>\n\t\t\t\t\n\t\t\t\t<canvas ref = \"canvas\" width = \"501\" height = \"501\"/>\n\t\t\t\t<Scoreboard redScore = {this.state.redScore} blueScore = {this.state.blueScore}/>\n\t\t\t\t<center>Reset Game</center>\n\t\t\t\t<center>\n\t\t\t\t\t<button id = \"1v1\" onClick = {this.reset1v1}>1v1</button> \n\t\t\t\t\t<button id = \"2v2\" onClick = {this.reset2v2}>2v2</button>\n\t\t\t\t\t<button id = \"3v3\" onClick = {this.reset3v3}>3v3</button>\n\t\t\t\t</center>\n\t\t\t\t<Settings settings = {this.state.settings} changeHandler = {this.changeSettings}/>\n\n\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n\n\t\n}\n\nexport default App;\n","import lineIntersection from 'line-intersection';\r\nimport { distance2d } from '../utils/2d';\r\n\r\nexport class Bot {\r\n\tconstructor(args) {\r\n\t\tthis.walls = args.walls; // All other paddle ranges are treated as walls\r\n\t\tthis.output = {left:0,right:0};\r\n\t\tthis.waitTimer = 0;\r\n\t\tthis.lookAhead = 10; // Bot will only calculate the ball's trajectory upto 3 bounces into the future\t\r\n\t\tthis.debug = args.debug;\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.waitTimer = 0;\r\n\t\tthis.output = {left:0,right:0};\r\n\t}\r\n\tcalculateOutput(ball, paddle) {\r\n\r\n\t\t// Waittimer is used to prevent unnecessary calculations when the ball is moving \r\n\t\t// Calculation of the ball's trajectory is only done\r\n\t\t// once after every impact off another paddle\r\n\t\t//console.log(this.waitTimer);\r\n\t\t\r\n\t\tif (this.waitTimer > 0) {\r\n\t\t\tthis.waitTimer--;\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tthis.waitTimer = 0; // Just in case waittimer became negative\r\n\t\t}\r\n\r\n\t\t\r\n\t\t// Temporary object to simulate the ball\r\n\t\tlet b = {\r\n\t\t\tx:ball.x,\r\n\t\t\ty:ball.y,\r\n\t\t\tdx:ball.dx,\r\n\t\t\tdy:ball.dy\r\n\t\t};\r\n\r\n\t\tlet bouncesLeft = this.lookAhead;\r\n\t\twhile (bouncesLeft > 0) {\r\n\t\t\tlet bouncedFlag = false;\r\n\r\n\t\t\t// b1 is ball's position after 1000 ticks\r\n\t\t\t// b2 is the current ball position\r\n\t\t\t// We need to specity b1 like this becuase line-intersection requires 2 line-segments \r\n\t\t\tlet b1 = {x : Math.round(b.x + 1000*b.dx), y:Math.round( b.y + 1000*b.dy)};\r\n\t\t\tlet b2 = {x : Math.round(b.x) , y: Math.round(b.y)};\r\n\r\n\r\n\t\t\tfor (let i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tlet wall = this.walls[i];\r\n\t\t\t\tlet w1 = {x:Math.round(wall.x1), y:Math.round(wall.y1)};\r\n\t\t\t\tlet w2 = {x:Math.round(wall.x2), y:Math.round(wall.y2)};\r\n\t\t\t\tlet intersectionPoint = lineIntersection.findSegmentIntersection([w1,w2,b1,b2]);\r\n\r\n\t\t\t\tif (intersectionPoint !== false) { // That means the ball will hit wall\r\n\t\t\t\t\tb.x = intersectionPoint.x;\tb.y = intersectionPoint.y;\r\n\t\t\t\t\tb.x -= b.dx; b.y -= b.dy; // getReflection assumes that the ball is just about to intersect the wall\r\n\t\t\t\t\tlet nextVelocity = wall.getReflection(b);\r\n\t\t\t\t\tb.x += b.dx; b.y += b.dy;\r\n\t\t\t\t\tb.dx = nextVelocity.x; b.dy = nextVelocity.y;\r\n\t\t\t\t\tb.x += b.dx; b.y += b.dy;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Update waitTimer if it is the first bounce\r\n\t\t\t\t\tif (this.waitTimer === 0) {\r\n\t\t\t\t\t\t// The below statement is weird to account for the case when ball.dx = 0, resulting in 0/0\r\n\t\t\t\t\t\tthis.waitTimer = Math.round((Math.abs(ball.dx)>0.0001?((intersectionPoint.x-ball.x)/ball.dx ): ((intersectionPoint.y-ball.y)/ball.dy)))+1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbouncesLeft--;\r\n\t\t\t\t\tbouncedFlag = true;\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tif (bouncedFlag) continue;\r\n\t\t\t\r\n\t\t\t// Now check intersection with the paddle\r\n\t\t\tlet p1 = {x: Math.round(paddle.x1), y: Math.round(paddle.y1)};\r\n\t\t\tlet p2 = {x: Math.round(paddle.x2), y: Math.round(paddle.y2)};\r\n\r\n\t\t\t\r\n\t\t\tlet intersectionPoint = lineIntersection.findSegmentIntersection([p1,p2,b1,b2]);\r\n\t\t\tif (intersectionPoint !== false) {\r\n\t\t\t\t// Intersection with the paddle has been found\r\n\t\t\t\t// Now we need to output either left, right, or no move at all\r\n\t\t\t\tlet current = {x:paddle.paddleCenterX, y:paddle.paddleCenterY};\r\n\t\t\t\t// Update waitTimer if this is the first bounce\r\n\t\r\n\t\t\t\tif (this.waitTimer === 0) {\r\n\t\t\t\t\tthis.waitTimer = Math.round((Math.abs(ball.dx)>0.0001?((intersectionPoint.x-ball.x)/ball.dx ): ((intersectionPoint.y-ball.y)/ball.dy)))+1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the paddle is close enough, do nothing\r\n\t\t\t\tif (distance2d(current.x, current.y, intersectionPoint.x, intersectionPoint.y) < 4) {\r\n\t\t\t\t\tthis.output = {left:0,right:0};\r\n\t\t\t\t\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// position after moving right one tick\r\n\t\t\t\tlet dRight = {\r\n\t\t\t\t\tx: current.x+(paddle.x2 - paddle.x1)/100,\r\n\t\t\t\t\ty: current.y+(paddle.y2 - paddle.y1)/100\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (distance2d(dRight.x, dRight.y, intersectionPoint.x,intersectionPoint.y) < \r\n\t\t\t\tdistance2d(current.x,current.y, intersectionPoint.x, intersectionPoint.y)) {\r\n\t\t\t\t\t// Right is the way to go\r\n\t\t\t\t\tthis.output = {left:0, right:1};\r\n\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Go left\r\n\t\t\t\t\tthis.output = {left:1,right:0};\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Now find the number of ticks before next calculation is needed\r\n\t\t\t\tlet paddleMovementTicks = Math.round(distance2d(current.x,current.y,intersectionPoint.x,intersectionPoint.y)\r\n\t\t\t\t/ distance2d(current.x,current.y,dRight.x,dRight.y));\r\n\t\t\t\tthis.waitTimer = Math.min(this.waitTimer,paddleMovementTicks);\r\n\t\t\t\t\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tbouncesLeft--;\r\n\t\t}\r\n\t\t\r\n\t}\r\n}","import React from 'react';\r\n\r\nconst dropdown = {\r\n\tposition: \"fixed\",\r\n\r\n\tbottom:0,\r\n\tright: 0\r\n\r\n}\r\n\r\nconst categoryHeader = {\r\n\tbackground: \"#AAAAFF\",\r\n\twidth:\"90%\",\r\n\tmargin:\"auto\",\r\n\tmarginTop:\"2px\",\r\n}\r\n\r\nconst dropdownContent= {\r\n \r\n  \tposition: \"absolute\",\r\n\tright:0,bottom:30,\r\n\r\n\twidth:300,\r\n\tminHeight:150,\r\n\tborder:\"2px solid blue\",\r\n\tbackground: \"#8888ff\",\r\n\t\r\n\r\n  \tzIndex: \"1\",\r\n}\r\n\r\nconst buttonStyle = {\r\n\twidth:\"100px\",\r\n\tpadding:\"2px\",\r\n\tborder:\"2px solid blue\",\r\n\tmargin:\"2px\",\r\n\ttextAlign: \"center\",\r\n\tborderRadius:\"2\",\r\n\tuserSelect:\"none\",\r\n\tposition: \"fixed\",\r\n\tbottom:0,\r\n\tright: 0\r\n\r\n\r\n}\r\n\r\nexport default class Settings extends React.Component {\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\topened:false,\r\n\t\t}\r\n\r\n\t\tthis.toggleDropdown = this.toggleDropdown.bind(this);\r\n\t\tthis.AICheckboxChange = this.AICheckboxChange.bind(this);\r\n\t}\r\n\r\n\ttoggleDropdown() {\r\n\t\tthis.setState((state) => ({opened: !state.opened}));\r\n\t}\r\n\r\n\tAICheckboxChange(e) {\r\n\t\tlet newSettings = this.props.settings;\r\n\t\tnewSettings.AI[e.target.id] = !newSettings.AI[e.target.id];\r\n\t\tthis.props.changeHandler(newSettings);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\r\n\t\tvar AICheckboxArray = [];\r\n\t\tconst names = [\"Red 1\", \"Red 2\", \"Red 3\", \"Blue 1\",\"Blue 2\", \"Blue 3\"];\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tlet e = (\r\n\t\t\t<div  key = {i} style = {{width:45,display:\"flex\",flexDirection:\"column\"}}>\r\n\t\t\t\t<div style = {{color:(names[i][0] === 'R'?\"red\":\"blue\")}}>{names[i]}</div>\r\n\t\t\t\t<input type = \"checkbox\" id = {i.toString()} checked = {this.props.settings.AI[i]} onChange = {this.AICheckboxChange}></input>\r\n\t\t\t</div>)\r\n\r\n\t\t\tAICheckboxArray.push(e);\r\n\t\t}\r\n\r\n\r\n\t\tconst content = (\r\n\t\t\t<div style = {dropdownContent}>\r\n\t\t\t\t<div style = {categoryHeader}>\r\n\t\t\t\t\t<div>Enable AI </div>\r\n\t\t\t\t\t<div style = {{display:\"flex\" , flexDirection:\"row\"}}>\r\n\t\t\t\t\t\t{AICheckboxArray}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>Note: This feature was added after milestone 2</div>\r\n\t\t\t\t\t<div>Settings are applied when you reset game</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\r\n\t\treturn(\r\n\t\t\t<div style = {dropdown}>\r\n\t\t\t\t{this.state.opened? content:\"\"}\r\n\t\t\t\t<div style = {buttonStyle} onClick = {this.toggleDropdown}>Settings {this.state.opened? \"↓\":\"↑\"} </div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}